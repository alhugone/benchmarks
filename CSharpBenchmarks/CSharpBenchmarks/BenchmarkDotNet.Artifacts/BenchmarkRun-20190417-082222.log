// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 34 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb
// command took 2,04s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb
// command took 12,72s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb
// command took 3,27s and exited with 0
// ***** Done, took 00:00:18 (18.26 sec)   *****
// Found 7 benchmarks:
//   ArrayAccessMethods.ForSumCacheArray: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ArrayAccessMethods.ForSumCacheArray: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForSumCacheArray" --job "ID" --benchmarkId 0 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 422300.00 ns, 422.3000 us/op
WorkloadJitting  1: 1 op, 356671300.00 ns, 356.6713 ms/op

OverheadWarmup   1: 1 op, 6200.00 ns, 6.2000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 356963100.00 ns, 356.9631 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 361354900.00 ns, 361.3549 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 361354600.00 ns, 361.3546 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 361.3546 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 361.3546 ms, Q1 = 361.3546 ms, Median = 361.3546 ms, Q3 = 361.3546 ms, Max = 361.3546 ms
IQR = 0.0000 ms, LowerFence = 361.3546 ms, UpperFence = 361.3546 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForSum" --job "ID" --benchmarkId 1 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 435900.00 ns, 435.9000 us/op
WorkloadJitting  1: 1 op, 450563000.00 ns, 450.5630 ms/op

OverheadWarmup   1: 1 op, 3000.00 ns, 3.0000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 444122000.00 ns, 444.1220 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 449411400.00 ns, 449.4114 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 449411100.00 ns, 449.4111 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 449.4111 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 449.4111 ms, Q1 = 449.4111 ms, Median = 449.4111 ms, Q3 = 449.4111 ms, Max = 449.4111 ms
IQR = 0.0000 ms, LowerFence = 449.4111 ms, UpperFence = 449.4111 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForEachSum" --job "ID" --benchmarkId 2 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 406500.00 ns, 406.5000 us/op
WorkloadJitting  1: 1 op, 382832900.00 ns, 382.8329 ms/op

OverheadWarmup   1: 1 op, 2700.00 ns, 2.7000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   7: 1 op, 400.00 ns, 400.0000 ns/op

OverheadActual   1: 1 op, 1800.00 ns, 1.8000 us/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 381908000.00 ns, 381.9080 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 381736800.00 ns, 381.7368 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 381735750.00 ns, 381.7358 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 381.7358 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 381.7358 ms, Q1 = 381.7358 ms, Median = 381.7358 ms, Q3 = 381.7358 ms, Max = 381.7358 ms
IQR = 0.0000 ms, LowerFence = 381.7358 ms, UpperFence = 381.7358 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqAggregateSum" --job "ID" --benchmarkId 3 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 410700.00 ns, 410.7000 us/op
WorkloadJitting  1: 1 op, 3712593000.00 ns, 3.7126 s/op

OverheadWarmup   1: 1 op, 4300.00 ns, 4.3000 us/op
OverheadWarmup   2: 1 op, 1700.00 ns, 1.7000 us/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   7: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   8: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 3721595300.00 ns, 3.7216 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 3704671100.00 ns, 3.7047 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 3704670800.00 ns, 3.7047 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 3.7047 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 3.7047 s, Q1 = 3.7047 s, Median = 3.7047 s, Q3 = 3.7047 s, Max = 3.7047 s
IQR = 0.0000 s, LowerFence = 3.7047 s, UpperFence = 3.7047 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqSum" --job "ID" --benchmarkId 4 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 523300.00 ns, 523.3000 us/op
WorkloadJitting  1: 1 op, 4293045800.00 ns, 4.2930 s/op

OverheadWarmup   1: 1 op, 3800.00 ns, 3.8000 us/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 1800.00 ns, 1.8000 us/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 400.00 ns, 400.0000 ns/op

WorkloadWarmup   1: 1 op, 4294835600.00 ns, 4.2948 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4270700600.00 ns, 4.2707 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4270700300.00 ns, 4.2707 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 4.2707 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2707 s, Q1 = 4.2707 s, Median = 4.2707 s, Q3 = 4.2707 s, Max = 4.2707 s
IQR = 0.0000 s, LowerFence = 4.2707 s, UpperFence = 4.2707 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqAll" --job "ID" --benchmarkId 5 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 451900.00 ns, 451.9000 us/op
WorkloadJitting  1: 1 op, 4491289800.00 ns, 4.4913 s/op

OverheadWarmup   1: 1 op, 3800.00 ns, 3.8000 us/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 4472115700.00 ns, 4.4721 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4575494100.00 ns, 4.5755 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4575493750.00 ns, 4.5755 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 4.5755 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.5755 s, Q1 = 4.5755 s, Median = 4.5755 s, Q3 = 4.5755 s, Max = 4.5755 s
IQR = 0.0000 s, LowerFence = 4.5755 s, UpperFence = 4.5755 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqAny" --job "ID" --benchmarkId 6 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 458800.00 ns, 458.8000 us/op
WorkloadJitting  1: 1 op, 4134542000.00 ns, 4.1345 s/op

OverheadWarmup   1: 1 op, 4200.00 ns, 4.2000 us/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   6: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   7: 1 op, 400.00 ns, 400.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 500.00 ns, 500.0000 ns/op

WorkloadWarmup   1: 1 op, 4134296700.00 ns, 4.1343 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4114832800.00 ns, 4.1148 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4114832400.00 ns, 4.1148 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 4.1148 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.1148 s, Q1 = 4.1148 s, Median = 4.1148 s, Q3 = 4.1148 s, Max = 4.1148 s
IQR = 0.0000 s, LowerFence = 4.1148 s, UpperFence = 4.1148 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.html

// * Detailed results *
ArrayAccessMethods.ForSumCacheArray: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 361.3546 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 361.3546 ms, Q1 = 361.3546 ms, Median = 361.3546 ms, Q3 = 361.3546 ms, Max = 361.3546 ms
IQR = 0.0000 ms, LowerFence = 361.3546 ms, UpperFence = 361.3546 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[361.355 ms ; 361.355 ms) | @
---------------------------------------------------

ArrayAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 449.4111 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 449.4111 ms, Q1 = 449.4111 ms, Median = 449.4111 ms, Q3 = 449.4111 ms, Max = 449.4111 ms
IQR = 0.0000 ms, LowerFence = 449.4111 ms, UpperFence = 449.4111 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[449.411 ms ; 449.411 ms) | @
---------------------------------------------------

ArrayAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 381.7358 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 381.7358 ms, Q1 = 381.7358 ms, Median = 381.7358 ms, Q3 = 381.7358 ms, Max = 381.7358 ms
IQR = 0.0000 ms, LowerFence = 381.7358 ms, UpperFence = 381.7358 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[381.736 ms ; 381.736 ms) | @
---------------------------------------------------

ArrayAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 3.7047 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 3.7047 s, Q1 = 3.7047 s, Median = 3.7047 s, Q3 = 3.7047 s, Max = 3.7047 s
IQR = 0.0000 s, LowerFence = 3.7047 s, UpperFence = 3.7047 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[3.705 s ; 3.705 s) | @
---------------------------------------------------

ArrayAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 4.2707 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2707 s, Q1 = 4.2707 s, Median = 4.2707 s, Q3 = 4.2707 s, Max = 4.2707 s
IQR = 0.0000 s, LowerFence = 4.2707 s, UpperFence = 4.2707 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[4.271 s ; 4.271 s) | @
---------------------------------------------------

ArrayAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 4.5755 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.5755 s, Q1 = 4.5755 s, Median = 4.5755 s, Q3 = 4.5755 s, Max = 4.5755 s
IQR = 0.0000 s, LowerFence = 4.5755 s, UpperFence = 4.5755 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[4.575 s ; 4.575 s) | @
---------------------------------------------------

ArrayAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 4.1148 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.1148 s, Q1 = 4.1148 s, Median = 4.1148 s, Q3 = 4.1148 s, Max = 4.1148 s
IQR = 0.0000 s, LowerFence = 4.1148 s, UpperFence = 4.1148 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[4.115 s ; 4.115 s) | @
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host] : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  ID     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Job=ID  MinInvokeCount=1  Server=True  
InvocationCount=1  IterationCount=1  LaunchCount=1  
MaxIterationCount=2  MaxWarmupIterationCount=2  MinIterationCount=1  
MinWarmupIterationCount=1  UnrollFactor=1  WarmupCount=1  

|           Method |       Mean | Error | Ratio |
|----------------- |-----------:|------:|------:|
| ForSumCacheArray |   361.4 ms |    NA |  1.00 |
|           ForSum |   449.4 ms |    NA |  1.24 |
|       ForEachSum |   381.7 ms |    NA |  1.06 |
| LinqAggregateSum | 3,704.7 ms |    NA | 10.25 |
|          LinqSum | 4,270.7 ms |    NA | 11.82 |
|          LinqAll | 4,575.5 ms |    NA | 12.66 |
|          LinqAny | 4,114.8 ms |    NA | 11.39 |

// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  Ratio : Mean of the ratio distribution ([Current]/[Baseline])
  1 ms  : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 27 benchmark(s) to run **
Run time: 00:00:56 (56.44 sec), executed benchmarks: 7

// Found 9 benchmarks:
//   ArrayUnderIListAccessMethods.ForSumCacheArray: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayUnderIListAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayUnderIListAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayUnderIListAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayUnderIListAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayUnderIListAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayUnderIListAccessMethods.FastLinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayUnderIListAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ArrayUnderIListAccessMethods.FastLinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ArrayUnderIListAccessMethods.ForSumCacheArray: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayUnderIListAccessMethods.ForSumCacheArray" --job "ID" --benchmarkId 7 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 432000.00 ns, 432.0000 us/op
WorkloadJitting  1: 1 op, 3747178200.00 ns, 3.7472 s/op

OverheadWarmup   1: 1 op, 6500.00 ns, 6.5000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 600.00 ns, 600.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   8: 1 op, 400.00 ns, 400.0000 ns/op

OverheadActual   1: 1 op, 800.00 ns, 800.0000 ns/op
OverheadActual   2: 1 op, 600.00 ns, 600.0000 ns/op

WorkloadWarmup   1: 1 op, 3961425100.00 ns, 3.9614 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 3702043800.00 ns, 3.7020 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 3702043100.00 ns, 3.7020 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 3.7020 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 3.7020 s, Q1 = 3.7020 s, Median = 3.7020 s, Q3 = 3.7020 s, Max = 3.7020 s
IQR = 0.0000 s, LowerFence = 3.7020 s, UpperFence = 3.7020 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayUnderIListAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayUnderIListAccessMethods.ForSum" --job "ID" --benchmarkId 8 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 405300.00 ns, 405.3000 us/op
WorkloadJitting  1: 1 op, 3708097000.00 ns, 3.7081 s/op

OverheadWarmup   1: 1 op, 4300.00 ns, 4.3000 us/op
OverheadWarmup   2: 1 op, 2000.00 ns, 2.0000 us/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   6: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   7: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   8: 1 op, 2100.00 ns, 2.1000 us/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 3704666800.00 ns, 3.7047 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 3721605500.00 ns, 3.7216 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 3721605200.00 ns, 3.7216 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 3.7216 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 3.7216 s, Q1 = 3.7216 s, Median = 3.7216 s, Q3 = 3.7216 s, Max = 3.7216 s
IQR = 0.0000 s, LowerFence = 3.7216 s, UpperFence = 3.7216 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayUnderIListAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayUnderIListAccessMethods.ForEachSum" --job "ID" --benchmarkId 9 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 449600.00 ns, 449.6000 us/op
WorkloadJitting  1: 1 op, 2719977300.00 ns, 2.7200 s/op

OverheadWarmup   1: 1 op, 3800.00 ns, 3.8000 us/op
OverheadWarmup   2: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   3: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   4: 1 op, 1800.00 ns, 1.8000 us/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   6: 1 op, 1800.00 ns, 1.8000 us/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 400.00 ns, 400.0000 ns/op

WorkloadWarmup   1: 1 op, 2716314000.00 ns, 2.7163 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 2729717400.00 ns, 2.7297 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 2729717050.00 ns, 2.7297 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 2.7297 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 2.7297 s, Q1 = 2.7297 s, Median = 2.7297 s, Q3 = 2.7297 s, Max = 2.7297 s
IQR = 0.0000 s, LowerFence = 2.7297 s, UpperFence = 2.7297 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayUnderIListAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayUnderIListAccessMethods.LinqAggregateSum" --job "ID" --benchmarkId 10 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 466500.00 ns, 466.5000 us/op
WorkloadJitting  1: 1 op, 3521920900.00 ns, 3.5219 s/op

OverheadWarmup   1: 1 op, 3600.00 ns, 3.6000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 1800.00 ns, 1.8000 us/op

WorkloadWarmup   1: 1 op, 3513641900.00 ns, 3.5136 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 3525641400.00 ns, 3.5256 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 3525640350.00 ns, 3.5256 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 3.5256 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 3.5256 s, Q1 = 3.5256 s, Median = 3.5256 s, Q3 = 3.5256 s, Max = 3.5256 s
IQR = 0.0000 s, LowerFence = 3.5256 s, UpperFence = 3.5256 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayUnderIListAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayUnderIListAccessMethods.LinqSum" --job "ID" --benchmarkId 11 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 421600.00 ns, 421.6000 us/op
WorkloadJitting  1: 1 op, 4132502800.00 ns, 4.1325 s/op

OverheadWarmup   1: 1 op, 4000.00 ns, 4.0000 us/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 100.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 1 op, 4159767600.00 ns, 4.1598 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4332393100.00 ns, 4.3324 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4332392900.00 ns, 4.3324 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 4.3324 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.3324 s, Q1 = 4.3324 s, Median = 4.3324 s, Q3 = 4.3324 s, Max = 4.3324 s
IQR = 0.0000 s, LowerFence = 4.3324 s, UpperFence = 4.3324 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayUnderIListAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayUnderIListAccessMethods.LinqAll" --job "ID" --benchmarkId 12 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 743900.00 ns, 743.9000 us/op
WorkloadJitting  1: 1 op, 4186074400.00 ns, 4.1861 s/op

OverheadWarmup   1: 1 op, 3200.00 ns, 3.2000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 1900.00 ns, 1.9000 us/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 4191541400.00 ns, 4.1915 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4244578500.00 ns, 4.2446 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4244578250.00 ns, 4.2446 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 4.2446 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2446 s, Q1 = 4.2446 s, Median = 4.2446 s, Q3 = 4.2446 s, Max = 4.2446 s
IQR = 0.0000 s, LowerFence = 4.2446 s, UpperFence = 4.2446 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayUnderIListAccessMethods.FastLinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayUnderIListAccessMethods.FastLinqAll" --job "ID" --benchmarkId 13 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 447900.00 ns, 447.9000 us/op
WorkloadJitting  1: 1 op, 4194480800.00 ns, 4.1945 s/op

OverheadWarmup   1: 1 op, 4200.00 ns, 4.2000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual   2: 1 op, 1700.00 ns, 1.7000 us/op

WorkloadWarmup   1: 1 op, 4202286000.00 ns, 4.2023 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4248692400.00 ns, 4.2487 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4248691350.00 ns, 4.2487 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 4.2487 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2487 s, Q1 = 4.2487 s, Median = 4.2487 s, Q3 = 4.2487 s, Max = 4.2487 s
IQR = 0.0000 s, LowerFence = 4.2487 s, UpperFence = 4.2487 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayUnderIListAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayUnderIListAccessMethods.LinqAny" --job "ID" --benchmarkId 14 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 456900.00 ns, 456.9000 us/op
WorkloadJitting  1: 1 op, 4247497100.00 ns, 4.2475 s/op

OverheadWarmup   1: 1 op, 3900.00 ns, 3.9000 us/op
OverheadWarmup   2: 1 op, 900.00 ns, 900.0000 ns/op
OverheadWarmup   3: 1 op, 600.00 ns, 600.0000 ns/op
OverheadWarmup   4: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   8: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   9: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup  10: 1 op, 400.00 ns, 400.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 400.00 ns, 400.0000 ns/op

WorkloadWarmup   1: 1 op, 4261090600.00 ns, 4.2611 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4261100700.00 ns, 4.2611 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4261100350.00 ns, 4.2611 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 4.2611 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2611 s, Q1 = 4.2611 s, Median = 4.2611 s, Q3 = 4.2611 s, Max = 4.2611 s
IQR = 0.0000 s, LowerFence = 4.2611 s, UpperFence = 4.2611 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ArrayUnderIListAccessMethods.FastLinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ArrayUnderIListAccessMethods.FastLinqAny" --job "ID" --benchmarkId 15 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 437800.00 ns, 437.8000 us/op
WorkloadJitting  1: 1 op, 4256990700.00 ns, 4.2570 s/op

OverheadWarmup   1: 1 op, 4600.00 ns, 4.6000 us/op
OverheadWarmup   2: 1 op, 600.00 ns, 600.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   7: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   8: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 500.00 ns, 500.0000 ns/op

WorkloadWarmup   1: 1 op, 4237158000.00 ns, 4.2372 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4259055900.00 ns, 4.2591 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4259055500.00 ns, 4.2591 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 4.2591 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2591 s, Q1 = 4.2591 s, Median = 4.2591 s, Q3 = 4.2591 s, Max = 4.2591 s
IQR = 0.0000 s, LowerFence = 4.2591 s, UpperFence = 4.2591 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayUnderIListAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayUnderIListAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayUnderIListAccessMethods-report.html

// * Detailed results *
ArrayUnderIListAccessMethods.ForSumCacheArray: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 3.7020 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 3.7020 s, Q1 = 3.7020 s, Median = 3.7020 s, Q3 = 3.7020 s, Max = 3.7020 s
IQR = 0.0000 s, LowerFence = 3.7020 s, UpperFence = 3.7020 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[3.702 s ; 3.702 s) | @
---------------------------------------------------

ArrayUnderIListAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 3.7216 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 3.7216 s, Q1 = 3.7216 s, Median = 3.7216 s, Q3 = 3.7216 s, Max = 3.7216 s
IQR = 0.0000 s, LowerFence = 3.7216 s, UpperFence = 3.7216 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[3.722 s ; 3.722 s) | @
---------------------------------------------------

ArrayUnderIListAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 2.7297 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 2.7297 s, Q1 = 2.7297 s, Median = 2.7297 s, Q3 = 2.7297 s, Max = 2.7297 s
IQR = 0.0000 s, LowerFence = 2.7297 s, UpperFence = 2.7297 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[2.730 s ; 2.730 s) | @
---------------------------------------------------

ArrayUnderIListAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 3.5256 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 3.5256 s, Q1 = 3.5256 s, Median = 3.5256 s, Q3 = 3.5256 s, Max = 3.5256 s
IQR = 0.0000 s, LowerFence = 3.5256 s, UpperFence = 3.5256 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[3.526 s ; 3.526 s) | @
---------------------------------------------------

ArrayUnderIListAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 4.3324 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.3324 s, Q1 = 4.3324 s, Median = 4.3324 s, Q3 = 4.3324 s, Max = 4.3324 s
IQR = 0.0000 s, LowerFence = 4.3324 s, UpperFence = 4.3324 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[4.332 s ; 4.332 s) | @
---------------------------------------------------

ArrayUnderIListAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 4.2446 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2446 s, Q1 = 4.2446 s, Median = 4.2446 s, Q3 = 4.2446 s, Max = 4.2446 s
IQR = 0.0000 s, LowerFence = 4.2446 s, UpperFence = 4.2446 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[4.245 s ; 4.245 s) | @
---------------------------------------------------

ArrayUnderIListAccessMethods.FastLinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 4.2487 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2487 s, Q1 = 4.2487 s, Median = 4.2487 s, Q3 = 4.2487 s, Max = 4.2487 s
IQR = 0.0000 s, LowerFence = 4.2487 s, UpperFence = 4.2487 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[4.249 s ; 4.249 s) | @
---------------------------------------------------

ArrayUnderIListAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 4.2611 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2611 s, Q1 = 4.2611 s, Median = 4.2611 s, Q3 = 4.2611 s, Max = 4.2611 s
IQR = 0.0000 s, LowerFence = 4.2611 s, UpperFence = 4.2611 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[4.261 s ; 4.261 s) | @
---------------------------------------------------

ArrayUnderIListAccessMethods.FastLinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 4.2591 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.2591 s, Q1 = 4.2591 s, Median = 4.2591 s, Q3 = 4.2591 s, Max = 4.2591 s
IQR = 0.0000 s, LowerFence = 4.2591 s, UpperFence = 4.2591 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[4.259 s ; 4.259 s) | @
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host] : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  ID     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Job=ID  MinInvokeCount=1  Server=True  
InvocationCount=1  IterationCount=1  LaunchCount=1  
MaxIterationCount=2  MaxWarmupIterationCount=2  MinIterationCount=1  
MinWarmupIterationCount=1  UnrollFactor=1  WarmupCount=1  

|           Method |    Mean | Error | Ratio |
|----------------- |--------:|------:|------:|
| ForSumCacheArray | 3.702 s |    NA |  1.00 |
|           ForSum | 3.722 s |    NA |  1.01 |
|       ForEachSum | 2.730 s |    NA |  0.74 |
| LinqAggregateSum | 3.526 s |    NA |  0.95 |
|          LinqSum | 4.332 s |    NA |  1.17 |
|          LinqAll | 4.245 s |    NA |  1.15 |
|      FastLinqAll | 4.249 s |    NA |  1.15 |
|          LinqAny | 4.261 s |    NA |  1.15 |
|      FastLinqAny | 4.259 s |    NA |  1.15 |

// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  Ratio : Mean of the ratio distribution ([Current]/[Baseline])
  1 s   : 1 Second (1 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 18 benchmark(s) to run **
Run time: 00:01:48 (108.17 sec), executed benchmarks: 9

// Found 7 benchmarks:
//   ListAccessMethods.ForSumCache: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ListAccessMethods.ForSumCache: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForSumCache" --job "ID" --benchmarkId 16 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 436600.00 ns, 436.6000 us/op
WorkloadJitting  1: 1 op, 471704900.00 ns, 471.7049 ms/op

OverheadWarmup   1: 1 op, 5500.00 ns, 5.5000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 1800.00 ns, 1.8000 us/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 445130200.00 ns, 445.1302 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 439285100.00 ns, 439.2851 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 439284750.00 ns, 439.2848 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 439.2848 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 439.2848 ms, Q1 = 439.2848 ms, Median = 439.2848 ms, Q3 = 439.2848 ms, Max = 439.2848 ms
IQR = 0.0000 ms, LowerFence = 439.2848 ms, UpperFence = 439.2848 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForSum" --job "ID" --benchmarkId 17 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 428700.00 ns, 428.7000 us/op
WorkloadJitting  1: 1 op, 726011600.00 ns, 726.0116 ms/op

OverheadWarmup   1: 1 op, 4300.00 ns, 4.3000 us/op
OverheadWarmup   2: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   3: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   8: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 722968400.00 ns, 722.9684 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 723313800.00 ns, 723.3138 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 723313450.00 ns, 723.3135 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 723.3135 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 723.3135 ms, Q1 = 723.3135 ms, Median = 723.3135 ms, Q3 = 723.3135 ms, Max = 723.3135 ms
IQR = 0.0000 ms, LowerFence = 723.3135 ms, UpperFence = 723.3135 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForEachSum" --job "ID" --benchmarkId 18 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 434300.00 ns, 434.3000 us/op
WorkloadJitting  1: 1 op, 2039965900.00 ns, 2.0400 s/op

OverheadWarmup   1: 1 op, 3800.00 ns, 3.8000 us/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   8: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   9: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 2051095400.00 ns, 2.0511 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 2763425000.00 ns, 2.7634 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 2763424700.00 ns, 2.7634 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 2.7634 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 2.7634 s, Q1 = 2.7634 s, Median = 2.7634 s, Q3 = 2.7634 s, Max = 2.7634 s
IQR = 0.0000 s, LowerFence = 2.7634 s, UpperFence = 2.7634 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAggregateSum" --job "ID" --benchmarkId 19 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 541500.00 ns, 541.5000 us/op
WorkloadJitting  1: 1 op, 6057853600.00 ns, 6.0579 s/op

OverheadWarmup   1: 1 op, 5400.00 ns, 5.4000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 6021993100.00 ns, 6.0220 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 5733189700.00 ns, 5.7332 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 5733189450.00 ns, 5.7332 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 5.7332 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 5.7332 s, Q1 = 5.7332 s, Median = 5.7332 s, Q3 = 5.7332 s, Max = 5.7332 s
IQR = 0.0000 s, LowerFence = 5.7332 s, UpperFence = 5.7332 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqSum" --job "ID" --benchmarkId 20 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 433500.00 ns, 433.5000 us/op
WorkloadJitting  1: 1 op, 6580905300.00 ns, 6.5809 s/op

OverheadWarmup   1: 1 op, 5400.00 ns, 5.4000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   7: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 6576820000.00 ns, 6.5768 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6674056200.00 ns, 6.6741 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6674055950.00 ns, 6.6741 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.6741 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.6741 s, Q1 = 6.6741 s, Median = 6.6741 s, Q3 = 6.6741 s, Max = 6.6741 s
IQR = 0.0000 s, LowerFence = 6.6741 s, UpperFence = 6.6741 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAll" --job "ID" --benchmarkId 21 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 486800.00 ns, 486.8000 us/op
WorkloadJitting  1: 1 op, 6483036500.00 ns, 6.4830 s/op

OverheadWarmup   1: 1 op, 3800.00 ns, 3.8000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   4: 1 op, 2000.00 ns, 2.0000 us/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 400.00 ns, 400.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 6544896800.00 ns, 6.5449 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6492677700.00 ns, 6.4927 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6492677450.00 ns, 6.4927 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.4927 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4927 s, Q1 = 6.4927 s, Median = 6.4927 s, Q3 = 6.4927 s, Max = 6.4927 s
IQR = 0.0000 s, LowerFence = 6.4927 s, UpperFence = 6.4927 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAny" --job "ID" --benchmarkId 22 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 473000.00 ns, 473.0000 us/op
WorkloadJitting  1: 1 op, 6592735300.00 ns, 6.5927 s/op

OverheadWarmup   1: 1 op, 3900.00 ns, 3.9000 us/op
OverheadWarmup   2: 1 op, 1700.00 ns, 1.7000 us/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   7: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 6553366500.00 ns, 6.5534 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6460830800.00 ns, 6.4608 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6460830600.00 ns, 6.4608 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.4608 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4608 s, Q1 = 6.4608 s, Median = 6.4608 s, Q3 = 6.4608 s, Max = 6.4608 s
IQR = 0.0000 s, LowerFence = 6.4608 s, UpperFence = 6.4608 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report.html

// * Detailed results *
ListAccessMethods.ForSumCache: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 439.2848 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 439.2848 ms, Q1 = 439.2848 ms, Median = 439.2848 ms, Q3 = 439.2848 ms, Max = 439.2848 ms
IQR = 0.0000 ms, LowerFence = 439.2848 ms, UpperFence = 439.2848 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[439.285 ms ; 439.285 ms) | @
---------------------------------------------------

ListAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 723.3135 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 723.3135 ms, Q1 = 723.3135 ms, Median = 723.3135 ms, Q3 = 723.3135 ms, Max = 723.3135 ms
IQR = 0.0000 ms, LowerFence = 723.3135 ms, UpperFence = 723.3135 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[723.313 ms ; 723.313 ms) | @
---------------------------------------------------

ListAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 2.7634 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 2.7634 s, Q1 = 2.7634 s, Median = 2.7634 s, Q3 = 2.7634 s, Max = 2.7634 s
IQR = 0.0000 s, LowerFence = 2.7634 s, UpperFence = 2.7634 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[2.763 s ; 2.763 s) | @
---------------------------------------------------

ListAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 5.7332 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 5.7332 s, Q1 = 5.7332 s, Median = 5.7332 s, Q3 = 5.7332 s, Max = 5.7332 s
IQR = 0.0000 s, LowerFence = 5.7332 s, UpperFence = 5.7332 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[5.733 s ; 5.733 s) | @
---------------------------------------------------

ListAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.6741 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.6741 s, Q1 = 6.6741 s, Median = 6.6741 s, Q3 = 6.6741 s, Max = 6.6741 s
IQR = 0.0000 s, LowerFence = 6.6741 s, UpperFence = 6.6741 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.674 s ; 6.674 s) | @
---------------------------------------------------

ListAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.4927 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4927 s, Q1 = 6.4927 s, Median = 6.4927 s, Q3 = 6.4927 s, Max = 6.4927 s
IQR = 0.0000 s, LowerFence = 6.4927 s, UpperFence = 6.4927 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.493 s ; 6.493 s) | @
---------------------------------------------------

ListAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.4608 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4608 s, Q1 = 6.4608 s, Median = 6.4608 s, Q3 = 6.4608 s, Max = 6.4608 s
IQR = 0.0000 s, LowerFence = 6.4608 s, UpperFence = 6.4608 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.461 s ; 6.461 s) | @
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host] : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  ID     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Job=ID  MinInvokeCount=1  Server=True  
InvocationCount=1  IterationCount=1  LaunchCount=1  
MaxIterationCount=2  MaxWarmupIterationCount=2  MinIterationCount=1  
MinWarmupIterationCount=1  UnrollFactor=1  WarmupCount=1  

|           Method |       Mean | Error | Ratio |
|----------------- |-----------:|------:|------:|
|      ForSumCache |   439.3 ms |    NA |  1.00 |
|           ForSum |   723.3 ms |    NA |  1.65 |
|       ForEachSum | 2,763.4 ms |    NA |  6.29 |
| LinqAggregateSum | 5,733.2 ms |    NA | 13.05 |
|          LinqSum | 6,674.1 ms |    NA | 15.19 |
|          LinqAll | 6,492.7 ms |    NA | 14.78 |
|          LinqAny | 6,460.8 ms |    NA | 14.71 |

// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  Ratio : Mean of the ratio distribution ([Current]/[Baseline])
  1 ms  : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 11 benchmark(s) to run **
Run time: 00:01:29 (89.83 sec), executed benchmarks: 7

// Found 2 benchmarks:
//   ReflectionGetAndSetMethods.FuncAndAction: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ReflectionGetAndSetMethods.Reflection: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ReflectionGetAndSetMethods.FuncAndAction: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ReflectionGetAndSetMethods.FuncAndAction" --job "ID" --benchmarkId 23 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 588500.00 ns, 588.5000 us/op
WorkloadJitting  1: 1 op, 318545800.00 ns, 318.5458 ms/op

OverheadWarmup   1: 1 op, 3900.00 ns, 3.9000 us/op
OverheadWarmup   2: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   3: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   6: 1 op, 500.00 ns, 500.0000 ns/op

OverheadActual   1: 1 op, 1900.00 ns, 1.9000 us/op
OverheadActual   2: 1 op, 500.00 ns, 500.0000 ns/op

WorkloadWarmup   1: 1 op, 300770000.00 ns, 300.7700 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 302363100.00 ns, 302.3631 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 302361900.00 ns, 302.3619 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 302.3619 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 302.3619 ms, Q1 = 302.3619 ms, Median = 302.3619 ms, Q3 = 302.3619 ms, Max = 302.3619 ms
IQR = 0.0000 ms, LowerFence = 302.3619 ms, UpperFence = 302.3619 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ReflectionGetAndSetMethods.Reflection: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.ReflectionGetAndSetMethods.Reflection" --job "ID" --benchmarkId 24 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 560900.00 ns, 560.9000 us/op
WorkloadJitting  1: 1 op, 10745742800.00 ns, 10.7457 s/op

OverheadWarmup   1: 1 op, 3900.00 ns, 3.9000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 1800.00 ns, 1.8000 us/op

OverheadActual   1: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 11004619200.00 ns, 11.0046 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 10787174600.00 ns, 10.7872 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 10787174150.00 ns, 10.7872 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 10.7872 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 10.7872 s, Q1 = 10.7872 s, Median = 10.7872 s, Q3 = 10.7872 s, Max = 10.7872 s
IQR = 0.0000 s, LowerFence = 10.7872 s, UpperFence = 10.7872 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ReflectionGetAndSetMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ReflectionGetAndSetMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ReflectionGetAndSetMethods-report.html

// * Detailed results *
ReflectionGetAndSetMethods.FuncAndAction: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 302.3619 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 302.3619 ms, Q1 = 302.3619 ms, Median = 302.3619 ms, Q3 = 302.3619 ms, Max = 302.3619 ms
IQR = 0.0000 ms, LowerFence = 302.3619 ms, UpperFence = 302.3619 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[302.362 ms ; 302.362 ms) | @
---------------------------------------------------

ReflectionGetAndSetMethods.Reflection: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 10.7872 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 10.7872 s, Q1 = 10.7872 s, Median = 10.7872 s, Q3 = 10.7872 s, Max = 10.7872 s
IQR = 0.0000 s, LowerFence = 10.7872 s, UpperFence = 10.7872 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[10.787 s ; 10.787 s) | @
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host] : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  ID     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Job=ID  MinInvokeCount=1  Server=True  
InvocationCount=1  IterationCount=1  LaunchCount=1  
MaxIterationCount=2  MaxWarmupIterationCount=2  MinIterationCount=1  
MinWarmupIterationCount=1  UnrollFactor=1  WarmupCount=1  

|        Method |        Mean | Error | Ratio |
|-------------- |------------:|------:|------:|
| FuncAndAction |    302.4 ms |    NA |  1.00 |
|    Reflection | 10,787.2 ms |    NA | 35.68 |

// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  Ratio : Mean of the ratio distribution ([Current]/[Baseline])
  1 ms  : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 9 benchmark(s) to run **
Run time: 00:00:34 (34.27 sec), executed benchmarks: 2

// Found 9 benchmarks:
//   ListAccessMethods.ForSumCacheArray: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.FastLinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.FastLinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ListAccessMethods.ForSumCacheArray: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods.ForSumCacheArray" --job "ID" --benchmarkId 25 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 501900.00 ns, 501.9000 us/op
WorkloadJitting  1: 1 op, 2629536500.00 ns, 2.6295 s/op

OverheadWarmup   1: 1 op, 4400.00 ns, 4.4000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 400.00 ns, 400.0000 ns/op

OverheadActual   1: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 2591576400.00 ns, 2.5916 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 2563752100.00 ns, 2.5638 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 2563751750.00 ns, 2.5638 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 2.5638 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 2.5638 s, Q1 = 2.5638 s, Median = 2.5638 s, Q3 = 2.5638 s, Max = 2.5638 s
IQR = 0.0000 s, LowerFence = 2.5638 s, UpperFence = 2.5638 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods.ForSum" --job "ID" --benchmarkId 26 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 421700.00 ns, 421.7000 us/op
WorkloadJitting  1: 1 op, 2575823000.00 ns, 2.5758 s/op

OverheadWarmup   1: 1 op, 5200.00 ns, 5.2000 us/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   6: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 2612045500.00 ns, 2.6120 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 2630882900.00 ns, 2.6309 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 2630882650.00 ns, 2.6309 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 2.6309 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 2.6309 s, Q1 = 2.6309 s, Median = 2.6309 s, Q3 = 2.6309 s, Max = 2.6309 s
IQR = 0.0000 s, LowerFence = 2.6309 s, UpperFence = 2.6309 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods.ForEachSum" --job "ID" --benchmarkId 27 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 530800.00 ns, 530.8000 us/op
WorkloadJitting  1: 1 op, 5290690100.00 ns, 5.2907 s/op

OverheadWarmup   1: 1 op, 5500.00 ns, 5.5000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   7: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual   2: 1 op, 400.00 ns, 400.0000 ns/op

WorkloadWarmup   1: 1 op, 5029790700.00 ns, 5.0298 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4855609800.00 ns, 4.8556 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4855609400.00 ns, 4.8556 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 4.8556 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.8556 s, Q1 = 4.8556 s, Median = 4.8556 s, Q3 = 4.8556 s, Max = 4.8556 s
IQR = 0.0000 s, LowerFence = 4.8556 s, UpperFence = 4.8556 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods.LinqAggregateSum" --job "ID" --benchmarkId 28 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 448000.00 ns, 448.0000 us/op
WorkloadJitting  1: 1 op, 5677007200.00 ns, 5.6770 s/op

OverheadWarmup   1: 1 op, 3900.00 ns, 3.9000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 5681427500.00 ns, 5.6814 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 5643565200.00 ns, 5.6436 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 5643564900.00 ns, 5.6436 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 5.6436 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 5.6436 s, Q1 = 5.6436 s, Median = 5.6436 s, Q3 = 5.6436 s, Max = 5.6436 s
IQR = 0.0000 s, LowerFence = 5.6436 s, UpperFence = 5.6436 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods.LinqSum" --job "ID" --benchmarkId 29 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 418900.00 ns, 418.9000 us/op
WorkloadJitting  1: 1 op, 6408847200.00 ns, 6.4088 s/op

OverheadWarmup   1: 1 op, 3900.00 ns, 3.9000 us/op
OverheadWarmup   2: 1 op, 1900.00 ns, 1.9000 us/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   6: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   7: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 1800.00 ns, 1.8000 us/op

WorkloadWarmup   1: 1 op, 6437926500.00 ns, 6.4379 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6444576600.00 ns, 6.4446 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6444575550.00 ns, 6.4446 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.4446 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4446 s, Q1 = 6.4446 s, Median = 6.4446 s, Q3 = 6.4446 s, Max = 6.4446 s
IQR = 0.0000 s, LowerFence = 6.4446 s, UpperFence = 6.4446 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods.LinqAll" --job "ID" --benchmarkId 30 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 434300.00 ns, 434.3000 us/op
WorkloadJitting  1: 1 op, 6431956800.00 ns, 6.4320 s/op

OverheadWarmup   1: 1 op, 3000.00 ns, 3.0000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 1900.00 ns, 1.9000 us/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 6436167500.00 ns, 6.4362 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6590741700.00 ns, 6.5907 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6590741500.00 ns, 6.5907 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.5907 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.5907 s, Q1 = 6.5907 s, Median = 6.5907 s, Q3 = 6.5907 s, Max = 6.5907 s
IQR = 0.0000 s, LowerFence = 6.5907 s, UpperFence = 6.5907 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.FastLinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods.FastLinqAll" --job "ID" --benchmarkId 31 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 429500.00 ns, 429.5000 us/op
WorkloadJitting  1: 1 op, 6526122200.00 ns, 6.5261 s/op

OverheadWarmup   1: 1 op, 3500.00 ns, 3.5000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 400.00 ns, 400.0000 ns/op

OverheadActual   1: 1 op, 1800.00 ns, 1.8000 us/op
OverheadActual   2: 1 op, 600.00 ns, 600.0000 ns/op

WorkloadWarmup   1: 1 op, 6806033900.00 ns, 6.8060 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6446669900.00 ns, 6.4467 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6446668700.00 ns, 6.4467 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.4467 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4467 s, Q1 = 6.4467 s, Median = 6.4467 s, Q3 = 6.4467 s, Max = 6.4467 s
IQR = 0.0000 s, LowerFence = 6.4467 s, UpperFence = 6.4467 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods.LinqAny" --job "ID" --benchmarkId 32 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 461600.00 ns, 461.6000 us/op
WorkloadJitting  1: 1 op, 6570427700.00 ns, 6.5704 s/op

OverheadWarmup   1: 1 op, 3700.00 ns, 3.7000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 600.00 ns, 600.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   7: 1 op, 200.00 ns, 200.0000 ns/op

OverheadActual   1: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 6565587300.00 ns, 6.5656 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6601993800.00 ns, 6.6020 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6601993400.00 ns, 6.6020 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.6020 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.6020 s, Q1 = 6.6020 s, Median = 6.6020 s, Q3 = 6.6020 s, Max = 6.6020 s
IQR = 0.0000 s, LowerFence = 6.6020 s, UpperFence = 6.6020 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.FastLinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "47769351-7df5-4844-9593-2e1d601083fb.dll" --benchmarkName "CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods.FastLinqAny" --job "ID" --benchmarkId 33 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\47769351-7df5-4844-9593-2e1d601083fb\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 454700.00 ns, 454.7000 us/op
WorkloadJitting  1: 1 op, 6648300000.00 ns, 6.6483 s/op

OverheadWarmup   1: 1 op, 4500.00 ns, 4.5000 us/op
OverheadWarmup   2: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   7: 1 op, 1900.00 ns, 1.9000 us/op
OverheadWarmup   8: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 6546172900.00 ns, 6.5462 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6589340500.00 ns, 6.5893 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6589340250.00 ns, 6.5893 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.5893 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.5893 s, Q1 = 6.5893 s, Median = 6.5893 s, Q3 = 6.5893 s, Max = 6.5893 s
IQR = 0.0000 s, LowerFence = 6.5893 s, UpperFence = 6.5893 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.Benchmarks.Collections.IListAccessMethods.ListAccessMethods-report.html

// * Detailed results *
ListAccessMethods.ForSumCacheArray: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 2.5638 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 2.5638 s, Q1 = 2.5638 s, Median = 2.5638 s, Q3 = 2.5638 s, Max = 2.5638 s
IQR = 0.0000 s, LowerFence = 2.5638 s, UpperFence = 2.5638 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[2.564 s ; 2.564 s) | @
---------------------------------------------------

ListAccessMethods.ForSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 2.6309 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 2.6309 s, Q1 = 2.6309 s, Median = 2.6309 s, Q3 = 2.6309 s, Max = 2.6309 s
IQR = 0.0000 s, LowerFence = 2.6309 s, UpperFence = 2.6309 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[2.631 s ; 2.631 s) | @
---------------------------------------------------

ListAccessMethods.ForEachSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 4.8556 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 4.8556 s, Q1 = 4.8556 s, Median = 4.8556 s, Q3 = 4.8556 s, Max = 4.8556 s
IQR = 0.0000 s, LowerFence = 4.8556 s, UpperFence = 4.8556 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[4.856 s ; 4.856 s) | @
---------------------------------------------------

ListAccessMethods.LinqAggregateSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 5.6436 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 5.6436 s, Q1 = 5.6436 s, Median = 5.6436 s, Q3 = 5.6436 s, Max = 5.6436 s
IQR = 0.0000 s, LowerFence = 5.6436 s, UpperFence = 5.6436 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[5.644 s ; 5.644 s) | @
---------------------------------------------------

ListAccessMethods.LinqSum: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.4446 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4446 s, Q1 = 6.4446 s, Median = 6.4446 s, Q3 = 6.4446 s, Max = 6.4446 s
IQR = 0.0000 s, LowerFence = 6.4446 s, UpperFence = 6.4446 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.445 s ; 6.445 s) | @
---------------------------------------------------

ListAccessMethods.LinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.5907 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.5907 s, Q1 = 6.5907 s, Median = 6.5907 s, Q3 = 6.5907 s, Max = 6.5907 s
IQR = 0.0000 s, LowerFence = 6.5907 s, UpperFence = 6.5907 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.591 s ; 6.591 s) | @
---------------------------------------------------

ListAccessMethods.FastLinqAll: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.4467 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4467 s, Q1 = 6.4467 s, Median = 6.4467 s, Q3 = 6.4467 s, Max = 6.4467 s
IQR = 0.0000 s, LowerFence = 6.4467 s, UpperFence = 6.4467 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.447 s ; 6.447 s) | @
---------------------------------------------------

ListAccessMethods.LinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.6020 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.6020 s, Q1 = 6.6020 s, Median = 6.6020 s, Q3 = 6.6020 s, Max = 6.6020 s
IQR = 0.0000 s, LowerFence = 6.6020 s, UpperFence = 6.6020 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.602 s ; 6.602 s) | @
---------------------------------------------------

ListAccessMethods.FastLinqAny: ID(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.5893 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.5893 s, Q1 = 6.5893 s, Median = 6.5893 s, Q3 = 6.5893 s, Max = 6.5893 s
IQR = 0.0000 s, LowerFence = 6.5893 s, UpperFence = 6.5893 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.589 s ; 6.589 s) | @
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host] : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  ID     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Job=ID  MinInvokeCount=1  Server=True  
InvocationCount=1  IterationCount=1  LaunchCount=1  
MaxIterationCount=2  MaxWarmupIterationCount=2  MinIterationCount=1  
MinWarmupIterationCount=1  UnrollFactor=1  WarmupCount=1  

|           Method |    Mean | Error | Ratio |
|----------------- |--------:|------:|------:|
| ForSumCacheArray | 2.564 s |    NA |  1.00 |
|           ForSum | 2.631 s |    NA |  1.03 |
|       ForEachSum | 4.856 s |    NA |  1.89 |
| LinqAggregateSum | 5.644 s |    NA |  2.20 |
|          LinqSum | 6.445 s |    NA |  2.51 |
|          LinqAll | 6.591 s |    NA |  2.57 |
|      FastLinqAll | 6.447 s |    NA |  2.51 |
|          LinqAny | 6.602 s |    NA |  2.58 |
|      FastLinqAny | 6.589 s |    NA |  2.57 |

// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  Ratio : Mean of the ratio distribution ([Current]/[Baseline])
  1 s   : 1 Second (1 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:02:30 (150.08 sec), executed benchmarks: 9

Global total time: 00:07:37 (457.05 sec), executed benchmarks: 34
// * Artifacts cleanup *
