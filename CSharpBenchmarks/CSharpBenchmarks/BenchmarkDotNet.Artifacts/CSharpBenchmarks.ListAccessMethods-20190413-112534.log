// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 9 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c
// command took 2,03s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c
// command took 3,3s and exited with 0
// ***** Done, took 00:00:05 (5.53 sec)   *****
// Found 9 benchmarks:
//   ListAccessMethods.ForCacheArray: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.For: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.ForEach: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.LinqAggregate: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.LinqSum: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.LinqAll: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.FastLinqAll: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.LinqAny: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.FastLinqAny: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ListAccessMethods.ForCacheArray: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "b305ee65-3d86-4148-abf6-11003b64f03c.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForCacheArray" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 0 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-CRDRKZ(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 509600.00 ns, 509.6000 us/op
WorkloadJitting  1: 1 op, 342767500.00 ns, 342.7675 ms/op

WorkloadWarmup   1: 1 op, 347712400.00 ns, 347.7124 ms/op
WorkloadWarmup   2: 1 op, 347211600.00 ns, 347.2116 ms/op
WorkloadWarmup   3: 1 op, 342813100.00 ns, 342.8131 ms/op
WorkloadWarmup   4: 1 op, 341121700.00 ns, 341.1217 ms/op
WorkloadWarmup   5: 1 op, 343680200.00 ns, 343.6802 ms/op
WorkloadWarmup   6: 1 op, 341426800.00 ns, 341.4268 ms/op
WorkloadWarmup   7: 1 op, 342949200.00 ns, 342.9492 ms/op
WorkloadWarmup   8: 1 op, 342999000.00 ns, 342.9990 ms/op
WorkloadWarmup   9: 1 op, 342108700.00 ns, 342.1087 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 340875100.00 ns, 340.8751 ms/op
WorkloadActual   2: 1 op, 341774500.00 ns, 341.7745 ms/op
WorkloadActual   3: 1 op, 343044400.00 ns, 343.0444 ms/op
WorkloadActual   4: 1 op, 340907600.00 ns, 340.9076 ms/op
WorkloadActual   5: 1 op, 341967500.00 ns, 341.9675 ms/op
WorkloadActual   6: 1 op, 341405100.00 ns, 341.4051 ms/op
WorkloadActual   7: 1 op, 340780000.00 ns, 340.7800 ms/op
WorkloadActual   8: 1 op, 343894300.00 ns, 343.8943 ms/op
WorkloadActual   9: 1 op, 341255800.00 ns, 341.2558 ms/op
WorkloadActual  10: 1 op, 344665000.00 ns, 344.6650 ms/op
WorkloadActual  11: 1 op, 341020500.00 ns, 341.0205 ms/op
WorkloadActual  12: 1 op, 344684000.00 ns, 344.6840 ms/op
WorkloadActual  13: 1 op, 340007200.00 ns, 340.0072 ms/op
WorkloadActual  14: 1 op, 345477900.00 ns, 345.4779 ms/op
WorkloadActual  15: 1 op, 340672900.00 ns, 340.6729 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 340875100.00 ns, 340.8751 ms/op
WorkloadResult   2: 1 op, 341774500.00 ns, 341.7745 ms/op
WorkloadResult   3: 1 op, 343044400.00 ns, 343.0444 ms/op
WorkloadResult   4: 1 op, 340907600.00 ns, 340.9076 ms/op
WorkloadResult   5: 1 op, 341967500.00 ns, 341.9675 ms/op
WorkloadResult   6: 1 op, 341405100.00 ns, 341.4051 ms/op
WorkloadResult   7: 1 op, 340780000.00 ns, 340.7800 ms/op
WorkloadResult   8: 1 op, 343894300.00 ns, 343.8943 ms/op
WorkloadResult   9: 1 op, 341255800.00 ns, 341.2558 ms/op
WorkloadResult  10: 1 op, 344665000.00 ns, 344.6650 ms/op
WorkloadResult  11: 1 op, 341020500.00 ns, 341.0205 ms/op
WorkloadResult  12: 1 op, 344684000.00 ns, 344.6840 ms/op
WorkloadResult  13: 1 op, 340007200.00 ns, 340.0072 ms/op
WorkloadResult  14: 1 op, 345477900.00 ns, 345.4779 ms/op
WorkloadResult  15: 1 op, 340672900.00 ns, 340.6729 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 342.1621 ms, StdErr = 0.4487 ms (0.13%); N = 15, StdDev = 1.7379 ms
Min = 340.0072 ms, Q1 = 340.8751 ms, Median = 341.4051 ms, Q3 = 343.8943 ms, Max = 345.4779 ms
IQR = 3.0192 ms, LowerFence = 336.3463 ms, UpperFence = 348.4231 ms
ConfidenceInterval = [340.3042 ms; 344.0201 ms] (CI 99.9%), Margin = 1.8579 ms (0.54% of Mean)
Skewness = 0.65, Kurtosis = 1.81, MValue = 2

// **************************
// Benchmark: ListAccessMethods.For: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "b305ee65-3d86-4148-abf6-11003b64f03c.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.For" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-GCEBNL(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 463600.00 ns, 463.6000 us/op
WorkloadJitting  1: 1 op, 341584500.00 ns, 341.5845 ms/op

WorkloadWarmup   1: 1 op, 340530300.00 ns, 340.5303 ms/op
WorkloadWarmup   2: 1 op, 345086300.00 ns, 345.0863 ms/op
WorkloadWarmup   3: 1 op, 342119600.00 ns, 342.1196 ms/op
WorkloadWarmup   4: 1 op, 344001100.00 ns, 344.0011 ms/op
WorkloadWarmup   5: 1 op, 340177800.00 ns, 340.1778 ms/op
WorkloadWarmup   6: 1 op, 340595500.00 ns, 340.5955 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 341431100.00 ns, 341.4311 ms/op
WorkloadActual   2: 1 op, 342208100.00 ns, 342.2081 ms/op
WorkloadActual   3: 1 op, 343149200.00 ns, 343.1492 ms/op
WorkloadActual   4: 1 op, 340543200.00 ns, 340.5432 ms/op
WorkloadActual   5: 1 op, 340456700.00 ns, 340.4567 ms/op
WorkloadActual   6: 1 op, 341542600.00 ns, 341.5426 ms/op
WorkloadActual   7: 1 op, 340487100.00 ns, 340.4871 ms/op
WorkloadActual   8: 1 op, 342144100.00 ns, 342.1441 ms/op
WorkloadActual   9: 1 op, 340605100.00 ns, 340.6051 ms/op
WorkloadActual  10: 1 op, 340238100.00 ns, 340.2381 ms/op
WorkloadActual  11: 1 op, 340393900.00 ns, 340.3939 ms/op
WorkloadActual  12: 1 op, 343169200.00 ns, 343.1692 ms/op
WorkloadActual  13: 1 op, 342823300.00 ns, 342.8233 ms/op
WorkloadActual  14: 1 op, 343972800.00 ns, 343.9728 ms/op
WorkloadActual  15: 1 op, 344758600.00 ns, 344.7586 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 341431100.00 ns, 341.4311 ms/op
WorkloadResult   2: 1 op, 342208100.00 ns, 342.2081 ms/op
WorkloadResult   3: 1 op, 343149200.00 ns, 343.1492 ms/op
WorkloadResult   4: 1 op, 340543200.00 ns, 340.5432 ms/op
WorkloadResult   5: 1 op, 340456700.00 ns, 340.4567 ms/op
WorkloadResult   6: 1 op, 341542600.00 ns, 341.5426 ms/op
WorkloadResult   7: 1 op, 340487100.00 ns, 340.4871 ms/op
WorkloadResult   8: 1 op, 342144100.00 ns, 342.1441 ms/op
WorkloadResult   9: 1 op, 340605100.00 ns, 340.6051 ms/op
WorkloadResult  10: 1 op, 340238100.00 ns, 340.2381 ms/op
WorkloadResult  11: 1 op, 340393900.00 ns, 340.3939 ms/op
WorkloadResult  12: 1 op, 343169200.00 ns, 343.1692 ms/op
WorkloadResult  13: 1 op, 342823300.00 ns, 342.8233 ms/op
WorkloadResult  14: 1 op, 343972800.00 ns, 343.9728 ms/op
WorkloadResult  15: 1 op, 344758600.00 ns, 344.7586 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 341.8615 ms, StdErr = 0.3754 ms (0.11%); N = 15, StdDev = 1.4540 ms
Min = 340.2381 ms, Q1 = 340.4871 ms, Median = 341.5426 ms, Q3 = 343.1492 ms, Max = 344.7586 ms
IQR = 2.6621 ms, LowerFence = 336.4940 ms, UpperFence = 347.1424 ms
ConfidenceInterval = [340.3071 ms; 343.4160 ms] (CI 99.9%), Margin = 1.5545 ms (0.45% of Mean)
Skewness = 0.47, Kurtosis = 1.81, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForEach: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "b305ee65-3d86-4148-abf6-11003b64f03c.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForEach" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 2 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-LTPTRV(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 482300.00 ns, 482.3000 us/op
WorkloadJitting  1: 1 op, 613303500.00 ns, 613.3035 ms/op

WorkloadWarmup   1: 1 op, 613290800.00 ns, 613.2908 ms/op
WorkloadWarmup   2: 1 op, 620997200.00 ns, 620.9972 ms/op
WorkloadWarmup   3: 1 op, 613362200.00 ns, 613.3622 ms/op
WorkloadWarmup   4: 1 op, 614974100.00 ns, 614.9741 ms/op
WorkloadWarmup   5: 1 op, 613238800.00 ns, 613.2388 ms/op
WorkloadWarmup   6: 1 op, 611961500.00 ns, 611.9615 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 615045300.00 ns, 615.0453 ms/op
WorkloadActual   2: 1 op, 612588500.00 ns, 612.5885 ms/op
WorkloadActual   3: 1 op, 612691000.00 ns, 612.6910 ms/op
WorkloadActual   4: 1 op, 611940100.00 ns, 611.9401 ms/op
WorkloadActual   5: 1 op, 613302400.00 ns, 613.3024 ms/op
WorkloadActual   6: 1 op, 612974000.00 ns, 612.9740 ms/op
WorkloadActual   7: 1 op, 611091800.00 ns, 611.0918 ms/op
WorkloadActual   8: 1 op, 611438900.00 ns, 611.4389 ms/op
WorkloadActual   9: 1 op, 613969200.00 ns, 613.9692 ms/op
WorkloadActual  10: 1 op, 613086600.00 ns, 613.0866 ms/op
WorkloadActual  11: 1 op, 613410800.00 ns, 613.4108 ms/op
WorkloadActual  12: 1 op, 619080700.00 ns, 619.0807 ms/op
WorkloadActual  13: 1 op, 615743600.00 ns, 615.7436 ms/op
WorkloadActual  14: 1 op, 610473300.00 ns, 610.4733 ms/op
WorkloadActual  15: 1 op, 615885700.00 ns, 615.8857 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 615045300.00 ns, 615.0453 ms/op
WorkloadResult   2: 1 op, 612588500.00 ns, 612.5885 ms/op
WorkloadResult   3: 1 op, 612691000.00 ns, 612.6910 ms/op
WorkloadResult   4: 1 op, 611940100.00 ns, 611.9401 ms/op
WorkloadResult   5: 1 op, 613302400.00 ns, 613.3024 ms/op
WorkloadResult   6: 1 op, 612974000.00 ns, 612.9740 ms/op
WorkloadResult   7: 1 op, 611091800.00 ns, 611.0918 ms/op
WorkloadResult   8: 1 op, 611438900.00 ns, 611.4389 ms/op
WorkloadResult   9: 1 op, 613969200.00 ns, 613.9692 ms/op
WorkloadResult  10: 1 op, 613086600.00 ns, 613.0866 ms/op
WorkloadResult  11: 1 op, 613410800.00 ns, 613.4108 ms/op
WorkloadResult  12: 1 op, 619080700.00 ns, 619.0807 ms/op
WorkloadResult  13: 1 op, 615743600.00 ns, 615.7436 ms/op
WorkloadResult  14: 1 op, 610473300.00 ns, 610.4733 ms/op
WorkloadResult  15: 1 op, 615885700.00 ns, 615.8857 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 613.5148 ms, StdErr = 0.5694 ms (0.09%); N = 15, StdDev = 2.2054 ms
Min = 610.4733 ms, Q1 = 611.9401 ms, Median = 613.0866 ms, Q3 = 615.0453 ms, Max = 619.0807 ms
IQR = 3.1052 ms, LowerFence = 607.2823 ms, UpperFence = 619.7031 ms
ConfidenceInterval = [611.1570 ms; 615.8726 ms] (CI 99.9%), Margin = 2.3578 ms (0.38% of Mean)
Skewness = 0.89, Kurtosis = 3.29, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAggregate: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "b305ee65-3d86-4148-abf6-11003b64f03c.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAggregate" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 3 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-ESYLLT(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 452400.00 ns, 452.4000 us/op
WorkloadJitting  1: 1 op, 711060100.00 ns, 711.0601 ms/op

WorkloadWarmup   1: 1 op, 704474000.00 ns, 704.4740 ms/op
WorkloadWarmup   2: 1 op, 707200700.00 ns, 707.2007 ms/op
WorkloadWarmup   3: 1 op, 702198800.00 ns, 702.1988 ms/op
WorkloadWarmup   4: 1 op, 707488100.00 ns, 707.4881 ms/op
WorkloadWarmup   5: 1 op, 708213100.00 ns, 708.2131 ms/op
WorkloadWarmup   6: 1 op, 704544000.00 ns, 704.5440 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 705743800.00 ns, 705.7438 ms/op
WorkloadActual   2: 1 op, 710618900.00 ns, 710.6189 ms/op
WorkloadActual   3: 1 op, 704917500.00 ns, 704.9175 ms/op
WorkloadActual   4: 1 op, 707207500.00 ns, 707.2075 ms/op
WorkloadActual   5: 1 op, 700453100.00 ns, 700.4531 ms/op
WorkloadActual   6: 1 op, 704389200.00 ns, 704.3892 ms/op
WorkloadActual   7: 1 op, 712689300.00 ns, 712.6893 ms/op
WorkloadActual   8: 1 op, 710301200.00 ns, 710.3012 ms/op
WorkloadActual   9: 1 op, 705381000.00 ns, 705.3810 ms/op
WorkloadActual  10: 1 op, 715429600.00 ns, 715.4296 ms/op
WorkloadActual  11: 1 op, 711424700.00 ns, 711.4247 ms/op
WorkloadActual  12: 1 op, 699916700.00 ns, 699.9167 ms/op
WorkloadActual  13: 1 op, 699788500.00 ns, 699.7885 ms/op
WorkloadActual  14: 1 op, 707974700.00 ns, 707.9747 ms/op
WorkloadActual  15: 1 op, 710855600.00 ns, 710.8556 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 705743800.00 ns, 705.7438 ms/op
WorkloadResult   2: 1 op, 710618900.00 ns, 710.6189 ms/op
WorkloadResult   3: 1 op, 704917500.00 ns, 704.9175 ms/op
WorkloadResult   4: 1 op, 707207500.00 ns, 707.2075 ms/op
WorkloadResult   5: 1 op, 700453100.00 ns, 700.4531 ms/op
WorkloadResult   6: 1 op, 704389200.00 ns, 704.3892 ms/op
WorkloadResult   7: 1 op, 712689300.00 ns, 712.6893 ms/op
WorkloadResult   8: 1 op, 710301200.00 ns, 710.3012 ms/op
WorkloadResult   9: 1 op, 705381000.00 ns, 705.3810 ms/op
WorkloadResult  10: 1 op, 715429600.00 ns, 715.4296 ms/op
WorkloadResult  11: 1 op, 711424700.00 ns, 711.4247 ms/op
WorkloadResult  12: 1 op, 699916700.00 ns, 699.9167 ms/op
WorkloadResult  13: 1 op, 699788500.00 ns, 699.7885 ms/op
WorkloadResult  14: 1 op, 707974700.00 ns, 707.9747 ms/op
WorkloadResult  15: 1 op, 710855600.00 ns, 710.8556 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 707.1394 ms, StdErr = 1.2401 ms (0.18%); N = 15, StdDev = 4.8030 ms
Min = 699.7885 ms, Q1 = 704.3892 ms, Median = 707.2075 ms, Q3 = 710.8556 ms, Max = 715.4296 ms
IQR = 6.4664 ms, LowerFence = 694.6896 ms, UpperFence = 720.5552 ms
ConfidenceInterval = [702.0048 ms; 712.2741 ms] (CI 99.9%), Margin = 5.1347 ms (0.73% of Mean)
Skewness = -0.1, Kurtosis = 1.78, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqSum: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "b305ee65-3d86-4148-abf6-11003b64f03c.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqSum" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 4 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-ZOTPFQ(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 466600.00 ns, 466.6000 us/op
WorkloadJitting  1: 1 op, 803237800.00 ns, 803.2378 ms/op

WorkloadWarmup   1: 1 op, 793934000.00 ns, 793.9340 ms/op
WorkloadWarmup   2: 1 op, 801084100.00 ns, 801.0841 ms/op
WorkloadWarmup   3: 1 op, 795008400.00 ns, 795.0084 ms/op
WorkloadWarmup   4: 1 op, 799405300.00 ns, 799.4053 ms/op
WorkloadWarmup   5: 1 op, 793288600.00 ns, 793.2886 ms/op
WorkloadWarmup   6: 1 op, 796572300.00 ns, 796.5723 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 803370800.00 ns, 803.3708 ms/op
WorkloadActual   2: 1 op, 799753200.00 ns, 799.7532 ms/op
WorkloadActual   3: 1 op, 793451600.00 ns, 793.4516 ms/op
WorkloadActual   4: 1 op, 793195600.00 ns, 793.1956 ms/op
WorkloadActual   5: 1 op, 792577000.00 ns, 792.5770 ms/op
WorkloadActual   6: 1 op, 801269100.00 ns, 801.2691 ms/op
WorkloadActual   7: 1 op, 794424300.00 ns, 794.4243 ms/op
WorkloadActual   8: 1 op, 793274300.00 ns, 793.2743 ms/op
WorkloadActual   9: 1 op, 800296400.00 ns, 800.2964 ms/op
WorkloadActual  10: 1 op, 792519900.00 ns, 792.5199 ms/op
WorkloadActual  11: 1 op, 791077300.00 ns, 791.0773 ms/op
WorkloadActual  12: 1 op, 1638825400.00 ns, 1.6388 s/op
WorkloadActual  13: 1 op, 800893600.00 ns, 800.8936 ms/op
WorkloadActual  14: 1 op, 802969300.00 ns, 802.9693 ms/op
WorkloadActual  15: 1 op, 807741400.00 ns, 807.7414 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 803370800.00 ns, 803.3708 ms/op
WorkloadResult   2: 1 op, 799753200.00 ns, 799.7532 ms/op
WorkloadResult   3: 1 op, 793451600.00 ns, 793.4516 ms/op
WorkloadResult   4: 1 op, 793195600.00 ns, 793.1956 ms/op
WorkloadResult   5: 1 op, 792577000.00 ns, 792.5770 ms/op
WorkloadResult   6: 1 op, 801269100.00 ns, 801.2691 ms/op
WorkloadResult   7: 1 op, 794424300.00 ns, 794.4243 ms/op
WorkloadResult   8: 1 op, 793274300.00 ns, 793.2743 ms/op
WorkloadResult   9: 1 op, 800296400.00 ns, 800.2964 ms/op
WorkloadResult  10: 1 op, 792519900.00 ns, 792.5199 ms/op
WorkloadResult  11: 1 op, 791077300.00 ns, 791.0773 ms/op
WorkloadResult  12: 1 op, 800893600.00 ns, 800.8936 ms/op
WorkloadResult  13: 1 op, 802969300.00 ns, 802.9693 ms/op
WorkloadResult  14: 1 op, 807741400.00 ns, 807.7414 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 797.6296 ms, StdErr = 1.4068 ms (0.18%); N = 14, StdDev = 5.2636 ms
Min = 791.0773 ms, Q1 = 793.1956 ms, Median = 797.0888 ms, Q3 = 801.2691 ms, Max = 807.7414 ms
IQR = 8.0735 ms, LowerFence = 781.0854 ms, UpperFence = 813.3794 ms
ConfidenceInterval = [791.6919 ms; 803.5672 ms] (CI 99.9%), Margin = 5.9377 ms (0.74% of Mean)
Skewness = 0.33, Kurtosis = 1.59, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAll: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "b305ee65-3d86-4148-abf6-11003b64f03c.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAll" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 5 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-CYCURV(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 479100.00 ns, 479.1000 us/op
WorkloadJitting  1: 1 op, 786196400.00 ns, 786.1964 ms/op

WorkloadWarmup   1: 1 op, 779125000.00 ns, 779.1250 ms/op
WorkloadWarmup   2: 1 op, 777381200.00 ns, 777.3812 ms/op
WorkloadWarmup   3: 1 op, 775393500.00 ns, 775.3935 ms/op
WorkloadWarmup   4: 1 op, 777971600.00 ns, 777.9716 ms/op
WorkloadWarmup   5: 1 op, 780067400.00 ns, 780.0674 ms/op
WorkloadWarmup   6: 1 op, 775022500.00 ns, 775.0225 ms/op
WorkloadWarmup   7: 1 op, 785604800.00 ns, 785.6048 ms/op
WorkloadWarmup   8: 1 op, 777004800.00 ns, 777.0048 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 774836400.00 ns, 774.8364 ms/op
WorkloadActual   2: 1 op, 774811700.00 ns, 774.8117 ms/op
WorkloadActual   3: 1 op, 774733400.00 ns, 774.7334 ms/op
WorkloadActual   4: 1 op, 774214400.00 ns, 774.2144 ms/op
WorkloadActual   5: 1 op, 787799300.00 ns, 787.7993 ms/op
WorkloadActual   6: 1 op, 778088300.00 ns, 778.0883 ms/op
WorkloadActual   7: 1 op, 774493100.00 ns, 774.4931 ms/op
WorkloadActual   8: 1 op, 776433000.00 ns, 776.4330 ms/op
WorkloadActual   9: 1 op, 779514000.00 ns, 779.5140 ms/op
WorkloadActual  10: 1 op, 775647200.00 ns, 775.6472 ms/op
WorkloadActual  11: 1 op, 774695300.00 ns, 774.6953 ms/op
WorkloadActual  12: 1 op, 776738300.00 ns, 776.7383 ms/op
WorkloadActual  13: 1 op, 775846200.00 ns, 775.8462 ms/op
WorkloadActual  14: 1 op, 775420000.00 ns, 775.4200 ms/op
WorkloadActual  15: 1 op, 774335300.00 ns, 774.3353 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 774836400.00 ns, 774.8364 ms/op
WorkloadResult   2: 1 op, 774811700.00 ns, 774.8117 ms/op
WorkloadResult   3: 1 op, 774733400.00 ns, 774.7334 ms/op
WorkloadResult   4: 1 op, 774214400.00 ns, 774.2144 ms/op
WorkloadResult   5: 1 op, 778088300.00 ns, 778.0883 ms/op
WorkloadResult   6: 1 op, 774493100.00 ns, 774.4931 ms/op
WorkloadResult   7: 1 op, 776433000.00 ns, 776.4330 ms/op
WorkloadResult   8: 1 op, 779514000.00 ns, 779.5140 ms/op
WorkloadResult   9: 1 op, 775647200.00 ns, 775.6472 ms/op
WorkloadResult  10: 1 op, 774695300.00 ns, 774.6953 ms/op
WorkloadResult  11: 1 op, 776738300.00 ns, 776.7383 ms/op
WorkloadResult  12: 1 op, 775846200.00 ns, 775.8462 ms/op
WorkloadResult  13: 1 op, 775420000.00 ns, 775.4200 ms/op
WorkloadResult  14: 1 op, 774335300.00 ns, 774.3353 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 775.7005 ms, StdErr = 0.4125 ms (0.05%); N = 14, StdDev = 1.5436 ms
Min = 774.2144 ms, Q1 = 774.6953 ms, Median = 775.1282 ms, Q3 = 776.4330 ms, Max = 779.5140 ms
IQR = 1.7377 ms, LowerFence = 772.0888 ms, UpperFence = 779.0396 ms
ConfidenceInterval = [773.9592 ms; 777.4417 ms] (CI 99.9%), Margin = 1.7412 ms (0.22% of Mean)
Skewness = 1.16, Kurtosis = 3.26, MValue = 2

// **************************
// Benchmark: ListAccessMethods.FastLinqAll: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "b305ee65-3d86-4148-abf6-11003b64f03c.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.FastLinqAll" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 6 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-ZMKBDT(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 457700.00 ns, 457.7000 us/op
WorkloadJitting  1: 1 op, 486861100.00 ns, 486.8611 ms/op

WorkloadWarmup   1: 1 op, 485703100.00 ns, 485.7031 ms/op
WorkloadWarmup   2: 1 op, 485578000.00 ns, 485.5780 ms/op
WorkloadWarmup   3: 1 op, 485358100.00 ns, 485.3581 ms/op
WorkloadWarmup   4: 1 op, 491332200.00 ns, 491.3322 ms/op
WorkloadWarmup   5: 1 op, 486527200.00 ns, 486.5272 ms/op
WorkloadWarmup   6: 1 op, 490306300.00 ns, 490.3063 ms/op
WorkloadWarmup   7: 1 op, 484828100.00 ns, 484.8281 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 486190500.00 ns, 486.1905 ms/op
WorkloadActual   2: 1 op, 484785500.00 ns, 484.7855 ms/op
WorkloadActual   3: 1 op, 485239500.00 ns, 485.2395 ms/op
WorkloadActual   4: 1 op, 485583100.00 ns, 485.5831 ms/op
WorkloadActual   5: 1 op, 485627800.00 ns, 485.6278 ms/op
WorkloadActual   6: 1 op, 485335700.00 ns, 485.3357 ms/op
WorkloadActual   7: 1 op, 489504200.00 ns, 489.5042 ms/op
WorkloadActual   8: 1 op, 490306800.00 ns, 490.3068 ms/op
WorkloadActual   9: 1 op, 485016200.00 ns, 485.0162 ms/op
WorkloadActual  10: 1 op, 485769200.00 ns, 485.7692 ms/op
WorkloadActual  11: 1 op, 484380300.00 ns, 484.3803 ms/op
WorkloadActual  12: 1 op, 485316200.00 ns, 485.3162 ms/op
WorkloadActual  13: 1 op, 487988000.00 ns, 487.9880 ms/op
WorkloadActual  14: 1 op, 486296700.00 ns, 486.2967 ms/op
WorkloadActual  15: 1 op, 485219000.00 ns, 485.2190 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 486190500.00 ns, 486.1905 ms/op
WorkloadResult   2: 1 op, 484785500.00 ns, 484.7855 ms/op
WorkloadResult   3: 1 op, 485239500.00 ns, 485.2395 ms/op
WorkloadResult   4: 1 op, 485583100.00 ns, 485.5831 ms/op
WorkloadResult   5: 1 op, 485627800.00 ns, 485.6278 ms/op
WorkloadResult   6: 1 op, 485335700.00 ns, 485.3357 ms/op
WorkloadResult   7: 1 op, 485016200.00 ns, 485.0162 ms/op
WorkloadResult   8: 1 op, 485769200.00 ns, 485.7692 ms/op
WorkloadResult   9: 1 op, 484380300.00 ns, 484.3803 ms/op
WorkloadResult  10: 1 op, 485316200.00 ns, 485.3162 ms/op
WorkloadResult  11: 1 op, 486296700.00 ns, 486.2967 ms/op
WorkloadResult  12: 1 op, 485219000.00 ns, 485.2190 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 485.3966 ms, StdErr = 0.1578 ms (0.03%); N = 12, StdDev = 0.5465 ms
Min = 484.3803 ms, Q1 = 485.1176 ms, Median = 485.3260 ms, Q3 = 485.6985 ms, Max = 486.2967 ms
IQR = 0.5809 ms, LowerFence = 484.2463 ms, UpperFence = 486.5699 ms
ConfidenceInterval = [484.6967 ms; 486.0966 ms] (CI 99.9%), Margin = 0.6999 ms (0.14% of Mean)
Skewness = -0.02, Kurtosis = 2.15, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAny: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "b305ee65-3d86-4148-abf6-11003b64f03c.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAny" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 7 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-RUFWFT(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 453000.00 ns, 453.0000 us/op
WorkloadJitting  1: 1 op, 795997900.00 ns, 795.9979 ms/op

WorkloadWarmup   1: 1 op, 790849900.00 ns, 790.8499 ms/op
WorkloadWarmup   2: 1 op, 793350200.00 ns, 793.3502 ms/op
WorkloadWarmup   3: 1 op, 798420000.00 ns, 798.4200 ms/op
WorkloadWarmup   4: 1 op, 794202200.00 ns, 794.2022 ms/op
WorkloadWarmup   5: 1 op, 797351400.00 ns, 797.3514 ms/op
WorkloadWarmup   6: 1 op, 798100900.00 ns, 798.1009 ms/op
WorkloadWarmup   7: 1 op, 794989700.00 ns, 794.9897 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 791423000.00 ns, 791.4230 ms/op
WorkloadActual   2: 1 op, 791278500.00 ns, 791.2785 ms/op
WorkloadActual   3: 1 op, 791293900.00 ns, 791.2939 ms/op
WorkloadActual   4: 1 op, 790547900.00 ns, 790.5479 ms/op
WorkloadActual   5: 1 op, 793581800.00 ns, 793.5818 ms/op
WorkloadActual   6: 1 op, 802928400.00 ns, 802.9284 ms/op
WorkloadActual   7: 1 op, 791943100.00 ns, 791.9431 ms/op
WorkloadActual   8: 1 op, 799539700.00 ns, 799.5397 ms/op
WorkloadActual   9: 1 op, 791864700.00 ns, 791.8647 ms/op
WorkloadActual  10: 1 op, 795043200.00 ns, 795.0432 ms/op
WorkloadActual  11: 1 op, 800447200.00 ns, 800.4472 ms/op
WorkloadActual  12: 1 op, 798709100.00 ns, 798.7091 ms/op
WorkloadActual  13: 1 op, 799769000.00 ns, 799.7690 ms/op
WorkloadActual  14: 1 op, 793735500.00 ns, 793.7355 ms/op
WorkloadActual  15: 1 op, 791321500.00 ns, 791.3215 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 791423000.00 ns, 791.4230 ms/op
WorkloadResult   2: 1 op, 791278500.00 ns, 791.2785 ms/op
WorkloadResult   3: 1 op, 791293900.00 ns, 791.2939 ms/op
WorkloadResult   4: 1 op, 790547900.00 ns, 790.5479 ms/op
WorkloadResult   5: 1 op, 793581800.00 ns, 793.5818 ms/op
WorkloadResult   6: 1 op, 802928400.00 ns, 802.9284 ms/op
WorkloadResult   7: 1 op, 791943100.00 ns, 791.9431 ms/op
WorkloadResult   8: 1 op, 799539700.00 ns, 799.5397 ms/op
WorkloadResult   9: 1 op, 791864700.00 ns, 791.8647 ms/op
WorkloadResult  10: 1 op, 795043200.00 ns, 795.0432 ms/op
WorkloadResult  11: 1 op, 800447200.00 ns, 800.4472 ms/op
WorkloadResult  12: 1 op, 798709100.00 ns, 798.7091 ms/op
WorkloadResult  13: 1 op, 799769000.00 ns, 799.7690 ms/op
WorkloadResult  14: 1 op, 793735500.00 ns, 793.7355 ms/op
WorkloadResult  15: 1 op, 791321500.00 ns, 791.3215 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 794.8951 ms, StdErr = 1.0823 ms (0.14%); N = 15, StdDev = 4.1918 ms
Min = 790.5479 ms, Q1 = 791.3215 ms, Median = 793.5818 ms, Q3 = 799.5397 ms, Max = 802.9284 ms
IQR = 8.2182 ms, LowerFence = 778.9942 ms, UpperFence = 811.8670 ms
ConfidenceInterval = [790.4138 ms; 799.3764 ms] (CI 99.9%), Margin = 4.4813 ms (0.56% of Mean)
Skewness = 0.58, Kurtosis = 1.63, MValue = 2

// **************************
// Benchmark: ListAccessMethods.FastLinqAny: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "b305ee65-3d86-4148-abf6-11003b64f03c.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.FastLinqAny" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 8 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\b305ee65-3d86-4148-abf6-11003b64f03c\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-NVJWUJ(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 466900.00 ns, 466.9000 us/op
WorkloadJitting  1: 1 op, 467904600.00 ns, 467.9046 ms/op

WorkloadWarmup   1: 1 op, 467263500.00 ns, 467.2635 ms/op
WorkloadWarmup   2: 1 op, 472408600.00 ns, 472.4086 ms/op
WorkloadWarmup   3: 1 op, 470955300.00 ns, 470.9553 ms/op
WorkloadWarmup   4: 1 op, 468484300.00 ns, 468.4843 ms/op
WorkloadWarmup   5: 1 op, 470114700.00 ns, 470.1147 ms/op
WorkloadWarmup   6: 1 op, 467171900.00 ns, 467.1719 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 472676400.00 ns, 472.6764 ms/op
WorkloadActual   2: 1 op, 467835800.00 ns, 467.8358 ms/op
WorkloadActual   3: 1 op, 463287200.00 ns, 463.2872 ms/op
WorkloadActual   4: 1 op, 474117500.00 ns, 474.1175 ms/op
WorkloadActual   5: 1 op, 467793600.00 ns, 467.7936 ms/op
WorkloadActual   6: 1 op, 466569200.00 ns, 466.5692 ms/op
WorkloadActual   7: 1 op, 468804800.00 ns, 468.8048 ms/op
WorkloadActual   8: 1 op, 471145200.00 ns, 471.1452 ms/op
WorkloadActual   9: 1 op, 467783400.00 ns, 467.7834 ms/op
WorkloadActual  10: 1 op, 468935500.00 ns, 468.9355 ms/op
WorkloadActual  11: 1 op, 473034800.00 ns, 473.0348 ms/op
WorkloadActual  12: 1 op, 467922400.00 ns, 467.9224 ms/op
WorkloadActual  13: 1 op, 469348200.00 ns, 469.3482 ms/op
WorkloadActual  14: 1 op, 467536500.00 ns, 467.5365 ms/op
WorkloadActual  15: 1 op, 469776300.00 ns, 469.7763 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 472676400.00 ns, 472.6764 ms/op
WorkloadResult   2: 1 op, 467835800.00 ns, 467.8358 ms/op
WorkloadResult   3: 1 op, 463287200.00 ns, 463.2872 ms/op
WorkloadResult   4: 1 op, 474117500.00 ns, 474.1175 ms/op
WorkloadResult   5: 1 op, 467793600.00 ns, 467.7936 ms/op
WorkloadResult   6: 1 op, 466569200.00 ns, 466.5692 ms/op
WorkloadResult   7: 1 op, 468804800.00 ns, 468.8048 ms/op
WorkloadResult   8: 1 op, 471145200.00 ns, 471.1452 ms/op
WorkloadResult   9: 1 op, 467783400.00 ns, 467.7834 ms/op
WorkloadResult  10: 1 op, 468935500.00 ns, 468.9355 ms/op
WorkloadResult  11: 1 op, 473034800.00 ns, 473.0348 ms/op
WorkloadResult  12: 1 op, 467922400.00 ns, 467.9224 ms/op
WorkloadResult  13: 1 op, 469348200.00 ns, 469.3482 ms/op
WorkloadResult  14: 1 op, 467536500.00 ns, 467.5365 ms/op
WorkloadResult  15: 1 op, 469776300.00 ns, 469.7763 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 469.1045 ms, StdErr = 0.7149 ms (0.15%); N = 15, StdDev = 2.7688 ms
Min = 463.2872 ms, Q1 = 467.7834 ms, Median = 468.8048 ms, Q3 = 471.1452 ms, Max = 474.1175 ms
IQR = 3.3618 ms, LowerFence = 462.7407 ms, UpperFence = 476.1879 ms
ConfidenceInterval = [466.1444 ms; 472.0645 ms] (CI 99.9%), Margin = 2.9600 ms (0.63% of Mean)
Skewness = 0.05, Kurtosis = 2.56, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report.html
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report.txt

// * Detailed results *
ListAccessMethods.ForCacheArray: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 342.1621 ms, StdErr = 0.4487 ms (0.13%); N = 15, StdDev = 1.7379 ms
Min = 340.0072 ms, Q1 = 340.8751 ms, Median = 341.4051 ms, Q3 = 343.8943 ms, Max = 345.4779 ms
IQR = 3.0192 ms, LowerFence = 336.3463 ms, UpperFence = 348.4231 ms
ConfidenceInterval = [340.3042 ms; 344.0201 ms] (CI 99.9%), Margin = 1.8579 ms (0.54% of Mean)
Skewness = 0.65, Kurtosis = 1.81, MValue = 2
-------------------- Histogram --------------------
[339.391 ms ; 346.095 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.For: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 341.8615 ms, StdErr = 0.3754 ms (0.11%); N = 15, StdDev = 1.4540 ms
Min = 340.2381 ms, Q1 = 340.4871 ms, Median = 341.5426 ms, Q3 = 343.1492 ms, Max = 344.7586 ms
IQR = 2.6621 ms, LowerFence = 336.4940 ms, UpperFence = 347.1424 ms
ConfidenceInterval = [340.3071 ms; 343.4160 ms] (CI 99.9%), Margin = 1.5545 ms (0.45% of Mean)
Skewness = 0.47, Kurtosis = 1.81, MValue = 2
-------------------- Histogram --------------------
[339.722 ms ; 345.274 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.ForEach: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 613.5148 ms, StdErr = 0.5694 ms (0.09%); N = 15, StdDev = 2.2054 ms
Min = 610.4733 ms, Q1 = 611.9401 ms, Median = 613.0866 ms, Q3 = 615.0453 ms, Max = 619.0807 ms
IQR = 3.1052 ms, LowerFence = 607.2823 ms, UpperFence = 619.7031 ms
ConfidenceInterval = [611.1570 ms; 615.8726 ms] (CI 99.9%), Margin = 2.3578 ms (0.38% of Mean)
Skewness = 0.89, Kurtosis = 3.29, MValue = 2
-------------------- Histogram --------------------
[609.691 ms ; 619.863 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.LinqAggregate: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 707.1394 ms, StdErr = 1.2401 ms (0.18%); N = 15, StdDev = 4.8030 ms
Min = 699.7885 ms, Q1 = 704.3892 ms, Median = 707.2075 ms, Q3 = 710.8556 ms, Max = 715.4296 ms
IQR = 6.4664 ms, LowerFence = 694.6896 ms, UpperFence = 720.5552 ms
ConfidenceInterval = [702.0048 ms; 712.2741 ms] (CI 99.9%), Margin = 5.1347 ms (0.73% of Mean)
Skewness = -0.1, Kurtosis = 1.78, MValue = 2
-------------------- Histogram --------------------
[698.084 ms ; 717.134 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.LinqSum: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 797.6296 ms, StdErr = 1.4068 ms (0.18%); N = 14, StdDev = 5.2636 ms
Min = 791.0773 ms, Q1 = 793.1956 ms, Median = 797.0888 ms, Q3 = 801.2691 ms, Max = 807.7414 ms
IQR = 8.0735 ms, LowerFence = 781.0854 ms, UpperFence = 813.3794 ms
ConfidenceInterval = [791.6919 ms; 803.5672 ms] (CI 99.9%), Margin = 5.9377 ms (0.74% of Mean)
Skewness = 0.33, Kurtosis = 1.59, MValue = 2
-------------------- Histogram --------------------
[789.166 ms ; 809.652 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.LinqAll: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 775.7005 ms, StdErr = 0.4125 ms (0.05%); N = 14, StdDev = 1.5436 ms
Min = 774.2144 ms, Q1 = 774.6953 ms, Median = 775.1282 ms, Q3 = 776.4330 ms, Max = 779.5140 ms
IQR = 1.7377 ms, LowerFence = 772.0888 ms, UpperFence = 779.0396 ms
ConfidenceInterval = [773.9592 ms; 777.4417 ms] (CI 99.9%), Margin = 1.7412 ms (0.22% of Mean)
Skewness = 1.16, Kurtosis = 3.26, MValue = 2
-------------------- Histogram --------------------
[773.654 ms ; 780.074 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.FastLinqAll: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 485.3966 ms, StdErr = 0.1578 ms (0.03%); N = 12, StdDev = 0.5465 ms
Min = 484.3803 ms, Q1 = 485.1176 ms, Median = 485.3260 ms, Q3 = 485.6985 ms, Max = 486.2967 ms
IQR = 0.5809 ms, LowerFence = 484.2463 ms, UpperFence = 486.5699 ms
ConfidenceInterval = [484.6967 ms; 486.0966 ms] (CI 99.9%), Margin = 0.6999 ms (0.14% of Mean)
Skewness = -0.02, Kurtosis = 2.15, MValue = 2
-------------------- Histogram --------------------
[484.171 ms ; 486.506 ms) | @@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.LinqAny: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 794.8951 ms, StdErr = 1.0823 ms (0.14%); N = 15, StdDev = 4.1918 ms
Min = 790.5479 ms, Q1 = 791.3215 ms, Median = 793.5818 ms, Q3 = 799.5397 ms, Max = 802.9284 ms
IQR = 8.2182 ms, LowerFence = 778.9942 ms, UpperFence = 811.8670 ms
ConfidenceInterval = [790.4138 ms; 799.3764 ms] (CI 99.9%), Margin = 4.4813 ms (0.56% of Mean)
Skewness = 0.58, Kurtosis = 1.63, MValue = 2
-------------------- Histogram --------------------
[789.061 ms ; 804.416 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.FastLinqAny: Job-CZKOFT(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 469.1045 ms, StdErr = 0.7149 ms (0.15%); N = 15, StdDev = 2.7688 ms
Min = 463.2872 ms, Q1 = 467.7834 ms, Median = 468.8048 ms, Q3 = 471.1452 ms, Max = 474.1175 ms
IQR = 3.3618 ms, LowerFence = 462.7407 ms, UpperFence = 476.1879 ms
ConfidenceInterval = [466.1444 ms; 472.0645 ms] (CI 99.9%), Margin = 2.9600 ms (0.63% of Mean)
Skewness = 0.05, Kurtosis = 2.56, MValue = 2
-------------------- Histogram --------------------
[462.305 ms ; 475.100 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host]     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  Job-CZKOFT : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Jit=RyuJit  Platform=X64  Server=True  

|        Method |     Mean |     Error |    StdDev | Ratio | RatioSD |
|-------------- |---------:|----------:|----------:|------:|--------:|
| ForCacheArray | 342.2 ms | 1.8579 ms | 1.7379 ms |  1.00 |    0.00 |
|           For | 341.9 ms | 1.5545 ms | 1.4540 ms |  1.00 |    0.01 |
|       ForEach | 613.5 ms | 2.3578 ms | 2.2054 ms |  1.79 |    0.01 |
| LinqAggregate | 707.1 ms | 5.1347 ms | 4.8030 ms |  2.07 |    0.02 |
|       LinqSum | 797.6 ms | 5.9377 ms | 5.2636 ms |  2.33 |    0.02 |
|       LinqAll | 775.7 ms | 1.7412 ms | 1.5436 ms |  2.27 |    0.01 |
|   FastLinqAll | 485.4 ms | 0.6999 ms | 0.5465 ms |  1.42 |    0.01 |
|       LinqAny | 794.9 ms | 4.4813 ms | 4.1918 ms |  2.32 |    0.02 |
|   FastLinqAny | 469.1 ms | 2.9600 ms | 2.7688 ms |  1.37 |    0.01 |

// * Hints *
Outliers
  ListAccessMethods.LinqSum: Jit=RyuJit, Platform=X64, Server=True     -> 1 outlier  was  removed (1.64 s)
  ListAccessMethods.LinqAll: Jit=RyuJit, Platform=X64, Server=True     -> 1 outlier  was  removed (787.80 ms)
  ListAccessMethods.FastLinqAll: Jit=RyuJit, Platform=X64, Server=True -> 3 outliers were removed (487.99 ms..490.31 ms)

// * Legends *
  Mean    : Arithmetic mean of all measurements
  Error   : Half of 99.9% confidence interval
  StdDev  : Standard deviation of all measurements
  Ratio   : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD : Standard deviation of the ratio distribution ([Current]/[Baseline])
  1 ms    : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:02:06 (126.33 sec), executed benchmarks: 9

Global total time: 00:02:11 (131.87 sec), executed benchmarks: 9
// * Artifacts cleanup *
