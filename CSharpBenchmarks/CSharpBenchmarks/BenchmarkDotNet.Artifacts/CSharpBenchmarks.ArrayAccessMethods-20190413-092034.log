// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 6 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f5a1d62c-c390-42d0-b26a-bfed21348d5b
// command took 2,1s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f5a1d62c-c390-42d0-b26a-bfed21348d5b
// command took 3,17s and exited with 0
// ***** Done, took 00:00:05 (5.44 sec)   *****
// Found 6 benchmarks:
//   ArrayAccessMethods.ForCacheArray: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.For: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.ForEach: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqAggregate: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqSum: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqAll: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ArrayAccessMethods.ForCacheArray: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f5a1d62c-c390-42d0-b26a-bfed21348d5b.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForCacheArray" --job "Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 0 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f5a1d62c-c390-42d0-b26a-bfed21348d5b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-VEARKI(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 446300.00 ns, 446.3000 us/op
WorkloadJitting  1: 1 op, 29035800.00 ns, 29.0358 ms/op

OverheadWarmup   1: 2 op, 3900.00 ns, 1.9500 us/op
OverheadWarmup   2: 2 op, 2000.00 ns, 1.0000 us/op
OverheadWarmup   3: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   4: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   5: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   6: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   7: 2 op, 400.00 ns, 200.0000 ns/op

OverheadActual   1: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   2: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   3: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   4: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   5: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   6: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   7: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   8: 2 op, 100.00 ns, 50.0000 ns/op
OverheadActual   9: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  10: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  11: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual  12: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  13: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual  14: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  15: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  16: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual  17: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  18: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  19: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  20: 2 op, 400.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 2 op, 55797800.00 ns, 27.8989 ms/op

// BeforeActualRun
WorkloadActual   1: 2 op, 56454600.00 ns, 28.2273 ms/op
WorkloadActual   2: 2 op, 56048900.00 ns, 28.0245 ms/op
WorkloadActual   3: 2 op, 55728600.00 ns, 27.8643 ms/op
WorkloadActual   4: 2 op, 56547400.00 ns, 28.2737 ms/op
WorkloadActual   5: 2 op, 55266000.00 ns, 27.6330 ms/op
WorkloadActual   6: 2 op, 55969800.00 ns, 27.9849 ms/op
WorkloadActual   7: 2 op, 56290100.00 ns, 28.1451 ms/op
WorkloadActual   8: 2 op, 55902400.00 ns, 27.9512 ms/op
WorkloadActual   9: 2 op, 58196200.00 ns, 29.0981 ms/op
WorkloadActual  10: 2 op, 55576100.00 ns, 27.7881 ms/op

// AfterActualRun
WorkloadResult   1: 2 op, 56454250.00 ns, 28.2271 ms/op
WorkloadResult   2: 2 op, 56048550.00 ns, 28.0243 ms/op
WorkloadResult   3: 2 op, 55728250.00 ns, 27.8641 ms/op
WorkloadResult   4: 2 op, 56547050.00 ns, 28.2735 ms/op
WorkloadResult   5: 2 op, 55265650.00 ns, 27.6328 ms/op
WorkloadResult   6: 2 op, 55969450.00 ns, 27.9847 ms/op
WorkloadResult   7: 2 op, 56289750.00 ns, 28.1449 ms/op
WorkloadResult   8: 2 op, 55902050.00 ns, 27.9510 ms/op
WorkloadResult   9: 2 op, 55575750.00 ns, 27.7879 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 27.9878 ms, StdErr = 0.0695 ms (0.25%); N = 9, StdDev = 0.2084 ms
Min = 27.6328 ms, Q1 = 27.8260 ms, Median = 27.9847 ms, Q3 = 28.1860 ms, Max = 28.2735 ms
IQR = 0.3600 ms, LowerFence = 27.2860 ms, UpperFence = 28.7260 ms
ConfidenceInterval = [27.6376 ms; 28.3381 ms] (CI 99.9%), Margin = 0.3503 ms (1.25% of Mean)
Skewness = -0.17, Kurtosis = 1.66, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.For: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f5a1d62c-c390-42d0-b26a-bfed21348d5b.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.For" --job "Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f5a1d62c-c390-42d0-b26a-bfed21348d5b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-FEOIJJ(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 428600.00 ns, 428.6000 us/op
WorkloadJitting  1: 1 op, 42156900.00 ns, 42.1569 ms/op

OverheadWarmup   1: 2 op, 4200.00 ns, 2.1000 us/op
OverheadWarmup   2: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   3: 2 op, 1900.00 ns, 950.0000 ns/op
OverheadWarmup   4: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   5: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   6: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   7: 2 op, 500.00 ns, 250.0000 ns/op

OverheadActual   1: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   2: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   3: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   4: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   5: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   6: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   7: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   8: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   9: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  10: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  11: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  12: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  13: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  14: 2 op, 1700.00 ns, 850.0000 ns/op
OverheadActual  15: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  16: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual  17: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual  18: 2 op, 600.00 ns, 300.0000 ns/op
OverheadActual  19: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  20: 2 op, 200.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 2 op, 83812800.00 ns, 41.9064 ms/op

// BeforeActualRun
WorkloadActual   1: 2 op, 82957200.00 ns, 41.4786 ms/op
WorkloadActual   2: 2 op, 83334200.00 ns, 41.6671 ms/op
WorkloadActual   3: 2 op, 83615000.00 ns, 41.8075 ms/op
WorkloadActual   4: 2 op, 83641100.00 ns, 41.8206 ms/op
WorkloadActual   5: 2 op, 83063100.00 ns, 41.5316 ms/op
WorkloadActual   6: 2 op, 82874000.00 ns, 41.4370 ms/op
WorkloadActual   7: 2 op, 82917000.00 ns, 41.4585 ms/op
WorkloadActual   8: 2 op, 82986000.00 ns, 41.4930 ms/op
WorkloadActual   9: 2 op, 83035500.00 ns, 41.5178 ms/op
WorkloadActual  10: 2 op, 83241400.00 ns, 41.6207 ms/op

// AfterActualRun
WorkloadResult   1: 2 op, 82956900.00 ns, 41.4785 ms/op
WorkloadResult   2: 2 op, 83333900.00 ns, 41.6670 ms/op
WorkloadResult   3: 2 op, 83614700.00 ns, 41.8074 ms/op
WorkloadResult   4: 2 op, 83640800.00 ns, 41.8204 ms/op
WorkloadResult   5: 2 op, 83062800.00 ns, 41.5314 ms/op
WorkloadResult   6: 2 op, 82873700.00 ns, 41.4369 ms/op
WorkloadResult   7: 2 op, 82916700.00 ns, 41.4584 ms/op
WorkloadResult   8: 2 op, 82985700.00 ns, 41.4929 ms/op
WorkloadResult   9: 2 op, 83035200.00 ns, 41.5176 ms/op
WorkloadResult  10: 2 op, 83241100.00 ns, 41.6206 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 41.5831 ms, StdErr = 0.0445 ms (0.11%); N = 10, StdDev = 0.1407 ms
Min = 41.4369 ms, Q1 = 41.4785 ms, Median = 41.5245 ms, Q3 = 41.6670 ms, Max = 41.8204 ms
IQR = 0.1885 ms, LowerFence = 41.1957 ms, UpperFence = 41.9497 ms
ConfidenceInterval = [41.3704 ms; 41.7957 ms] (CI 99.9%), Margin = 0.2126 ms (0.51% of Mean)
Skewness = 0.64, Kurtosis = 1.7, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.ForEach: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f5a1d62c-c390-42d0-b26a-bfed21348d5b.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForEach" --job "Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 2 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f5a1d62c-c390-42d0-b26a-bfed21348d5b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-ORGVQD(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 484600.00 ns, 484.6000 us/op
WorkloadJitting  1: 1 op, 29459000.00 ns, 29.4590 ms/op

OverheadWarmup   1: 2 op, 4200.00 ns, 2.1000 us/op
OverheadWarmup   2: 2 op, 1800.00 ns, 900.0000 ns/op
OverheadWarmup   3: 2 op, 1700.00 ns, 850.0000 ns/op
OverheadWarmup   4: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   5: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   6: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   7: 2 op, 500.00 ns, 250.0000 ns/op
OverheadWarmup   8: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   9: 2 op, 300.00 ns, 150.0000 ns/op

OverheadActual   1: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   2: 2 op, 1900.00 ns, 950.0000 ns/op
OverheadActual   3: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   4: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   5: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   6: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   7: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   8: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   9: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  10: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual  11: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  12: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  13: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  14: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  15: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  16: 2 op, 600.00 ns, 300.0000 ns/op
OverheadActual  17: 2 op, 600.00 ns, 300.0000 ns/op
OverheadActual  18: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  19: 2 op, 600.00 ns, 300.0000 ns/op
OverheadActual  20: 2 op, 300.00 ns, 150.0000 ns/op

WorkloadWarmup   1: 2 op, 57637100.00 ns, 28.8186 ms/op

// BeforeActualRun
WorkloadActual   1: 2 op, 57190000.00 ns, 28.5950 ms/op
WorkloadActual   2: 2 op, 57163200.00 ns, 28.5816 ms/op
WorkloadActual   3: 2 op, 58089900.00 ns, 29.0450 ms/op
WorkloadActual   4: 2 op, 57113200.00 ns, 28.5566 ms/op
WorkloadActual   5: 2 op, 57645500.00 ns, 28.8228 ms/op
WorkloadActual   6: 2 op, 56792300.00 ns, 28.3962 ms/op
WorkloadActual   7: 2 op, 57057400.00 ns, 28.5287 ms/op
WorkloadActual   8: 2 op, 58224000.00 ns, 29.1120 ms/op
WorkloadActual   9: 2 op, 57695800.00 ns, 28.8479 ms/op
WorkloadActual  10: 2 op, 57097300.00 ns, 28.5487 ms/op

// AfterActualRun
WorkloadResult   1: 2 op, 57189600.00 ns, 28.5948 ms/op
WorkloadResult   2: 2 op, 57162800.00 ns, 28.5814 ms/op
WorkloadResult   3: 2 op, 58089500.00 ns, 29.0448 ms/op
WorkloadResult   4: 2 op, 57112800.00 ns, 28.5564 ms/op
WorkloadResult   5: 2 op, 57645100.00 ns, 28.8226 ms/op
WorkloadResult   6: 2 op, 56791900.00 ns, 28.3960 ms/op
WorkloadResult   7: 2 op, 57057000.00 ns, 28.5285 ms/op
WorkloadResult   8: 2 op, 58223600.00 ns, 29.1118 ms/op
WorkloadResult   9: 2 op, 57695400.00 ns, 28.8477 ms/op
WorkloadResult  10: 2 op, 57096900.00 ns, 28.5485 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 28.7032 ms, StdErr = 0.0757 ms (0.26%); N = 10, StdDev = 0.2394 ms
Min = 28.3960 ms, Q1 = 28.5485 ms, Median = 28.5881 ms, Q3 = 28.8477 ms, Max = 29.1118 ms
IQR = 0.2993 ms, LowerFence = 28.0996 ms, UpperFence = 29.2966 ms
ConfidenceInterval = [28.3413 ms; 29.0651 ms] (CI 99.9%), Margin = 0.3619 ms (1.26% of Mean)
Skewness = 0.5, Kurtosis = 1.62, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqAggregate: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f5a1d62c-c390-42d0-b26a-bfed21348d5b.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqAggregate" --job "Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 3 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f5a1d62c-c390-42d0-b26a-bfed21348d5b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-YPAMOE(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 464600.00 ns, 464.6000 us/op
WorkloadJitting  1: 1 op, 432616200.00 ns, 432.6162 ms/op

OverheadWarmup   1: 2 op, 4200.00 ns, 2.1000 us/op
OverheadWarmup   2: 2 op, 200.00 ns, 100.0000 ns/op
OverheadWarmup   3: 2 op, 1900.00 ns, 950.0000 ns/op
OverheadWarmup   4: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   5: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   6: 2 op, 200.00 ns, 100.0000 ns/op

OverheadActual   1: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   2: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   3: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   4: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   5: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   6: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   7: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   8: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   9: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  10: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  11: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  12: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  13: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  14: 2 op, 600.00 ns, 300.0000 ns/op
OverheadActual  15: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  16: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  17: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  18: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  19: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  20: 2 op, 400.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 2 op, 867134300.00 ns, 433.5672 ms/op

// BeforeActualRun
WorkloadActual   1: 2 op, 858746500.00 ns, 429.3733 ms/op
WorkloadActual   2: 2 op, 898121500.00 ns, 449.0608 ms/op
WorkloadActual   3: 2 op, 884930600.00 ns, 442.4653 ms/op
WorkloadActual   4: 2 op, 865952300.00 ns, 432.9762 ms/op
WorkloadActual   5: 2 op, 892939100.00 ns, 446.4696 ms/op
WorkloadActual   6: 2 op, 869415900.00 ns, 434.7080 ms/op
WorkloadActual   7: 2 op, 874986800.00 ns, 437.4934 ms/op
WorkloadActual   8: 2 op, 859463400.00 ns, 429.7317 ms/op
WorkloadActual   9: 2 op, 860501400.00 ns, 430.2507 ms/op
WorkloadActual  10: 2 op, 867724800.00 ns, 433.8624 ms/op

// AfterActualRun
WorkloadResult   1: 2 op, 858746200.00 ns, 429.3731 ms/op
WorkloadResult   2: 2 op, 898121200.00 ns, 449.0606 ms/op
WorkloadResult   3: 2 op, 884930300.00 ns, 442.4652 ms/op
WorkloadResult   4: 2 op, 865952000.00 ns, 432.9760 ms/op
WorkloadResult   5: 2 op, 892938800.00 ns, 446.4694 ms/op
WorkloadResult   6: 2 op, 869415600.00 ns, 434.7078 ms/op
WorkloadResult   7: 2 op, 874986500.00 ns, 437.4933 ms/op
WorkloadResult   8: 2 op, 859463100.00 ns, 429.7316 ms/op
WorkloadResult   9: 2 op, 860501100.00 ns, 430.2506 ms/op
WorkloadResult  10: 2 op, 867724500.00 ns, 433.8623 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 436.6390 ms, StdErr = 2.2405 ms (0.51%); N = 10, StdDev = 7.0851 ms
Min = 429.3731 ms, Q1 = 430.2506 ms, Median = 434.2850 ms, Q3 = 442.4652 ms, Max = 449.0606 ms
IQR = 12.2146 ms, LowerFence = 411.9287 ms, UpperFence = 460.7871 ms
ConfidenceInterval = [425.9274 ms; 447.3506 ms] (CI 99.9%), Margin = 10.7116 ms (2.45% of Mean)
Skewness = 0.57, Kurtosis = 1.64, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqSum: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f5a1d62c-c390-42d0-b26a-bfed21348d5b.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqSum" --job "Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 4 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f5a1d62c-c390-42d0-b26a-bfed21348d5b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-MLAOGE(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 449300.00 ns, 449.3000 us/op
WorkloadJitting  1: 1 op, 540543900.00 ns, 540.5439 ms/op

OverheadWarmup   1: 2 op, 4800.00 ns, 2.4000 us/op
OverheadWarmup   2: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   3: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   4: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   5: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   6: 2 op, 300.00 ns, 150.0000 ns/op

OverheadActual   1: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   2: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   3: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   4: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   5: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   6: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   7: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   8: 2 op, 1800.00 ns, 900.0000 ns/op
OverheadActual   9: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual  10: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  11: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  12: 2 op, 2000.00 ns, 1.0000 us/op
OverheadActual  13: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  14: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  15: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  16: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  17: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  18: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  19: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  20: 2 op, 200.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 2 op, 1077926400.00 ns, 538.9632 ms/op

// BeforeActualRun
WorkloadActual   1: 2 op, 1072443100.00 ns, 536.2216 ms/op
WorkloadActual   2: 2 op, 1073606400.00 ns, 536.8032 ms/op
WorkloadActual   3: 2 op, 1071085700.00 ns, 535.5429 ms/op
WorkloadActual   4: 2 op, 1068926200.00 ns, 534.4631 ms/op
WorkloadActual   5: 2 op, 1073097200.00 ns, 536.5486 ms/op
WorkloadActual   6: 2 op, 1067851900.00 ns, 533.9260 ms/op
WorkloadActual   7: 2 op, 1067056900.00 ns, 533.5285 ms/op
WorkloadActual   8: 2 op, 1065319400.00 ns, 532.6597 ms/op
WorkloadActual   9: 2 op, 1073031700.00 ns, 536.5159 ms/op
WorkloadActual  10: 2 op, 1072383100.00 ns, 536.1916 ms/op

// AfterActualRun
WorkloadResult   1: 2 op, 1072442800.00 ns, 536.2214 ms/op
WorkloadResult   2: 2 op, 1073606100.00 ns, 536.8031 ms/op
WorkloadResult   3: 2 op, 1071085400.00 ns, 535.5427 ms/op
WorkloadResult   4: 2 op, 1068925900.00 ns, 534.4630 ms/op
WorkloadResult   5: 2 op, 1073096900.00 ns, 536.5485 ms/op
WorkloadResult   6: 2 op, 1067851600.00 ns, 533.9258 ms/op
WorkloadResult   7: 2 op, 1067056600.00 ns, 533.5283 ms/op
WorkloadResult   8: 2 op, 1065319100.00 ns, 532.6596 ms/op
WorkloadResult   9: 2 op, 1073031400.00 ns, 536.5157 ms/op
WorkloadResult  10: 2 op, 1072382800.00 ns, 536.1914 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 535.2399 ms, StdErr = 0.4674 ms (0.09%); N = 10, StdDev = 1.4781 ms
Min = 532.6596 ms, Q1 = 533.9258 ms, Median = 535.8671 ms, Q3 = 536.5157 ms, Max = 536.8031 ms
IQR = 2.5899 ms, LowerFence = 530.0410 ms, UpperFence = 540.4006 ms
ConfidenceInterval = [533.0053 ms; 537.4746 ms] (CI 99.9%), Margin = 2.2346 ms (0.42% of Mean)
Skewness = -0.46, Kurtosis = 1.46, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqAll: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f5a1d62c-c390-42d0-b26a-bfed21348d5b.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqAll" --job "Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 5 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f5a1d62c-c390-42d0-b26a-bfed21348d5b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-AOPCVG(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 475600.00 ns, 475.6000 us/op
WorkloadJitting  1: 1 op, 533255000.00 ns, 533.2550 ms/op

OverheadWarmup   1: 2 op, 6800.00 ns, 3.4000 us/op
OverheadWarmup   2: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   3: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   4: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   5: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   6: 2 op, 400.00 ns, 200.0000 ns/op

OverheadActual   1: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   2: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   3: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   4: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   5: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   6: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   7: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   8: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   9: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  10: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  11: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  12: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  13: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  14: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  15: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  16: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  17: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  18: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  19: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  20: 2 op, 300.00 ns, 150.0000 ns/op

WorkloadWarmup   1: 2 op, 1068531200.00 ns, 534.2656 ms/op

// BeforeActualRun
WorkloadActual   1: 2 op, 1050002600.00 ns, 525.0013 ms/op
WorkloadActual   2: 2 op, 1053935200.00 ns, 526.9676 ms/op
WorkloadActual   3: 2 op, 1059732500.00 ns, 529.8663 ms/op
WorkloadActual   4: 2 op, 1053364600.00 ns, 526.6823 ms/op
WorkloadActual   5: 2 op, 1055151300.00 ns, 527.5757 ms/op
WorkloadActual   6: 2 op, 1068589300.00 ns, 534.2947 ms/op
WorkloadActual   7: 2 op, 1057441900.00 ns, 528.7210 ms/op
WorkloadActual   8: 2 op, 1053192400.00 ns, 526.5962 ms/op
WorkloadActual   9: 2 op, 1050289000.00 ns, 525.1445 ms/op
WorkloadActual  10: 2 op, 1060218900.00 ns, 530.1095 ms/op

// AfterActualRun
WorkloadResult   1: 2 op, 1050002250.00 ns, 525.0011 ms/op
WorkloadResult   2: 2 op, 1053934850.00 ns, 526.9674 ms/op
WorkloadResult   3: 2 op, 1059732150.00 ns, 529.8661 ms/op
WorkloadResult   4: 2 op, 1053364250.00 ns, 526.6821 ms/op
WorkloadResult   5: 2 op, 1055150950.00 ns, 527.5755 ms/op
WorkloadResult   6: 2 op, 1068588950.00 ns, 534.2945 ms/op
WorkloadResult   7: 2 op, 1057441550.00 ns, 528.7208 ms/op
WorkloadResult   8: 2 op, 1053192050.00 ns, 526.5960 ms/op
WorkloadResult   9: 2 op, 1050288650.00 ns, 525.1443 ms/op
WorkloadResult  10: 2 op, 1060218550.00 ns, 530.1093 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 528.0957 ms, StdErr = 0.8824 ms (0.17%); N = 10, StdDev = 2.7905 ms
Min = 525.0011 ms, Q1 = 526.5960 ms, Median = 527.2715 ms, Q3 = 529.8661 ms, Max = 534.2945 ms
IQR = 3.2701 ms, LowerFence = 521.6910 ms, UpperFence = 534.7712 ms
ConfidenceInterval = [523.8769 ms; 532.3146 ms] (CI 99.9%), Margin = 4.2188 ms (0.80% of Mean)
Skewness = 0.87, Kurtosis = 2.77, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.html

// * Detailed results *
ArrayAccessMethods.ForCacheArray: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 27.9878 ms, StdErr = 0.0695 ms (0.25%); N = 9, StdDev = 0.2084 ms
Min = 27.6328 ms, Q1 = 27.8260 ms, Median = 27.9847 ms, Q3 = 28.1860 ms, Max = 28.2735 ms
IQR = 0.3600 ms, LowerFence = 27.2860 ms, UpperFence = 28.7260 ms
ConfidenceInterval = [27.6376 ms; 28.3381 ms] (CI 99.9%), Margin = 0.3503 ms (1.25% of Mean)
Skewness = -0.17, Kurtosis = 1.66, MValue = 2
-------------------- Histogram --------------------
[27.545 ms ; 28.361 ms) | @@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.For: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 41.5831 ms, StdErr = 0.0445 ms (0.11%); N = 10, StdDev = 0.1407 ms
Min = 41.4369 ms, Q1 = 41.4785 ms, Median = 41.5245 ms, Q3 = 41.6670 ms, Max = 41.8204 ms
IQR = 0.1885 ms, LowerFence = 41.1957 ms, UpperFence = 41.9497 ms
ConfidenceInterval = [41.3704 ms; 41.7957 ms] (CI 99.9%), Margin = 0.2126 ms (0.51% of Mean)
Skewness = 0.64, Kurtosis = 1.7, MValue = 2
-------------------- Histogram --------------------
[41.380 ms ; 41.878 ms) | @@@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.ForEach: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 28.7032 ms, StdErr = 0.0757 ms (0.26%); N = 10, StdDev = 0.2394 ms
Min = 28.3960 ms, Q1 = 28.5485 ms, Median = 28.5881 ms, Q3 = 28.8477 ms, Max = 29.1118 ms
IQR = 0.2993 ms, LowerFence = 28.0996 ms, UpperFence = 29.2966 ms
ConfidenceInterval = [28.3413 ms; 29.0651 ms] (CI 99.9%), Margin = 0.3619 ms (1.26% of Mean)
Skewness = 0.5, Kurtosis = 1.62, MValue = 2
-------------------- Histogram --------------------
[28.299 ms ; 29.209 ms) | @@@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.LinqAggregate: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 436.6390 ms, StdErr = 2.2405 ms (0.51%); N = 10, StdDev = 7.0851 ms
Min = 429.3731 ms, Q1 = 430.2506 ms, Median = 434.2850 ms, Q3 = 442.4652 ms, Max = 449.0606 ms
IQR = 12.2146 ms, LowerFence = 411.9287 ms, UpperFence = 460.7871 ms
ConfidenceInterval = [425.9274 ms; 447.3506 ms] (CI 99.9%), Margin = 10.7116 ms (2.45% of Mean)
Skewness = 0.57, Kurtosis = 1.64, MValue = 2
-------------------- Histogram --------------------
[427.720 ms ; 451.938 ms) | @@@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.LinqSum: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 535.2399 ms, StdErr = 0.4674 ms (0.09%); N = 10, StdDev = 1.4781 ms
Min = 532.6596 ms, Q1 = 533.9258 ms, Median = 535.8671 ms, Q3 = 536.5157 ms, Max = 536.8031 ms
IQR = 2.5899 ms, LowerFence = 530.0410 ms, UpperFence = 540.4006 ms
ConfidenceInterval = [533.0053 ms; 537.4746 ms] (CI 99.9%), Margin = 2.2346 ms (0.42% of Mean)
Skewness = -0.46, Kurtosis = 1.46, MValue = 2
-------------------- Histogram --------------------
[532.059 ms ; 537.403 ms) | @@@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.LinqAll: Job-QNDYYO(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 528.0957 ms, StdErr = 0.8824 ms (0.17%); N = 10, StdDev = 2.7905 ms
Min = 525.0011 ms, Q1 = 526.5960 ms, Median = 527.2715 ms, Q3 = 529.8661 ms, Max = 534.2945 ms
IQR = 3.2701 ms, LowerFence = 521.6910 ms, UpperFence = 534.7712 ms
ConfidenceInterval = [523.8769 ms; 532.3146 ms] (CI 99.9%), Margin = 4.2188 ms (0.80% of Mean)
Skewness = 0.87, Kurtosis = 2.77, MValue = 2
-------------------- Histogram --------------------
[523.868 ms ; 535.428 ms) | @@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host]     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  Job-QNDYYO : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Server=True  InvocationCount=2  IterationCount=10  
LaunchCount=1  RunStrategy=Throughput  UnrollFactor=1  
WarmupCount=1  

|        Method |      Mean |      Error |    StdDev | Ratio | RatioSD |
|-------------- |----------:|-----------:|----------:|------:|--------:|
| ForCacheArray |  27.99 ms |  0.3503 ms | 0.2084 ms |  1.00 |    0.00 |
|           For |  41.58 ms |  0.2126 ms | 0.1407 ms |  1.49 |    0.01 |
|       ForEach |  28.70 ms |  0.3619 ms | 0.2394 ms |  1.03 |    0.01 |
| LinqAggregate | 436.64 ms | 10.7116 ms | 7.0851 ms | 15.61 |    0.33 |
|       LinqSum | 535.24 ms |  2.2346 ms | 1.4781 ms | 19.12 |    0.17 |
|       LinqAll | 528.10 ms |  4.2188 ms | 2.7905 ms | 18.86 |    0.18 |

// * Warnings *
MinIterationTime
  ArrayAccessMethods.ForCacheArray: Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1 -> The minimum observed iteration time is 55.2660 ms which is very small. It's recommended to increase it.
  ArrayAccessMethods.For: Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1           -> The minimum observed iteration time is 82.8740 ms which is very small. It's recommended to increase it.
  ArrayAccessMethods.ForEach: Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1       -> The minimum observed iteration time is 56.7923 ms which is very small. It's recommended to increase it.

// * Hints *
Outliers
  ArrayAccessMethods.ForCacheArray: Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1 -> 1 outlier  was  removed (29.10 ms)

// * Legends *
  Mean    : Arithmetic mean of all measurements
  Error   : Half of 99.9% confidence interval
  StdDev  : Standard deviation of all measurements
  Ratio   : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD : Standard deviation of the ratio distribution ([Current]/[Baseline])
  1 ms    : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:41 (41.23 sec), executed benchmarks: 6

Global total time: 00:00:46 (46.68 sec), executed benchmarks: 6
// * Artifacts cleanup *
