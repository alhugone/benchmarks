// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 5 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f0cbb4aa-0eb0-404d-9c83-97243059a812
// command took 2,06s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f0cbb4aa-0eb0-404d-9c83-97243059a812
// command took 3,27s and exited with 0
// ***** Done, took 00:00:05 (5.49 sec)   *****
// Found 5 benchmarks:
//   ArrayAccessMethods.ForCacheArray: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.For: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.ForEach: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqAggregate: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqSum: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ArrayAccessMethods.ForCacheArray: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f0cbb4aa-0eb0-404d-9c83-97243059a812.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForCacheArray" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 0 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f0cbb4aa-0eb0-404d-9c83-97243059a812\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-ZSSFEJ(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 477000.00 ns, 477.0000 us/op
WorkloadJitting  1: 1 op, 654607200.00 ns, 654.6072 ms/op

OverheadWarmup   1: 3 op, 4200.00 ns, 1.4000 us/op
OverheadWarmup   2: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   4: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   5: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   6: 3 op, 300.00 ns, 100.0000 ns/op

OverheadActual   1: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   2: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   4: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   5: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   6: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   7: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   8: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   9: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  10: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  11: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  12: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  13: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  14: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  15: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  16: 3 op, 100.00 ns, 33.3333 ns/op
OverheadActual  17: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  18: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  19: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  20: 3 op, 200.00 ns, 66.6667 ns/op

WorkloadWarmup   1: 3 op, 1955652500.00 ns, 651.8842 ms/op

// BeforeActualRun
WorkloadActual   1: 3 op, 2003353600.00 ns, 667.7845 ms/op
WorkloadActual   2: 3 op, 1989200400.00 ns, 663.0668 ms/op
WorkloadActual   3: 3 op, 1949563700.00 ns, 649.8546 ms/op
WorkloadActual   4: 3 op, 1947579600.00 ns, 649.1932 ms/op
WorkloadActual   5: 3 op, 1942029000.00 ns, 647.3430 ms/op
WorkloadActual   6: 3 op, 1943245300.00 ns, 647.7484 ms/op
WorkloadActual   7: 3 op, 1963832800.00 ns, 654.6109 ms/op
WorkloadActual   8: 3 op, 1952761200.00 ns, 650.9204 ms/op
WorkloadActual   9: 3 op, 1950744500.00 ns, 650.2482 ms/op
WorkloadActual  10: 3 op, 1943485200.00 ns, 647.8284 ms/op

// AfterActualRun
WorkloadResult   1: 3 op, 1989200100.00 ns, 663.0667 ms/op
WorkloadResult   2: 3 op, 1949563400.00 ns, 649.8545 ms/op
WorkloadResult   3: 3 op, 1947579300.00 ns, 649.1931 ms/op
WorkloadResult   4: 3 op, 1942028700.00 ns, 647.3429 ms/op
WorkloadResult   5: 3 op, 1943245000.00 ns, 647.7483 ms/op
WorkloadResult   6: 3 op, 1963832500.00 ns, 654.6108 ms/op
WorkloadResult   7: 3 op, 1952760900.00 ns, 650.9203 ms/op
WorkloadResult   8: 3 op, 1950744200.00 ns, 650.2481 ms/op
WorkloadResult   9: 3 op, 1943484900.00 ns, 647.8283 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 651.2014 ms, StdErr = 1.6559 ms (0.25%); N = 9, StdDev = 4.9678 ms
Min = 647.3429 ms, Q1 = 647.7883 ms, Median = 649.8545 ms, Q3 = 652.7656 ms, Max = 663.0667 ms
IQR = 4.9773 ms, LowerFence = 640.3224 ms, UpperFence = 660.2314 ms
ConfidenceInterval = [642.8533 ms; 659.5496 ms] (CI 99.9%), Margin = 8.3481 ms (1.28% of Mean)
Skewness = 1.42, Kurtosis = 3.73, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.For: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f0cbb4aa-0eb0-404d-9c83-97243059a812.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.For" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f0cbb4aa-0eb0-404d-9c83-97243059a812\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-RCVZES(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 435600.00 ns, 435.6000 us/op
WorkloadJitting  1: 1 op, 634339700.00 ns, 634.3397 ms/op

OverheadWarmup   1: 3 op, 4500.00 ns, 1.5000 us/op
OverheadWarmup   2: 3 op, 1800.00 ns, 600.0000 ns/op
OverheadWarmup   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   4: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   5: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   6: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   7: 3 op, 400.00 ns, 133.3333 ns/op

OverheadActual   1: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   2: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   3: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   4: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   5: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   6: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   7: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   8: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   9: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  10: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  11: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  12: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  13: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  14: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  15: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  16: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  17: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  18: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  19: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  20: 3 op, 400.00 ns, 133.3333 ns/op

WorkloadWarmup   1: 3 op, 1902337800.00 ns, 634.1126 ms/op

// BeforeActualRun
WorkloadActual   1: 3 op, 1901503900.00 ns, 633.8346 ms/op
WorkloadActual   2: 3 op, 1904388500.00 ns, 634.7962 ms/op
WorkloadActual   3: 3 op, 1904048500.00 ns, 634.6828 ms/op
WorkloadActual   4: 3 op, 1902528700.00 ns, 634.1762 ms/op
WorkloadActual   5: 3 op, 1904314300.00 ns, 634.7714 ms/op
WorkloadActual   6: 3 op, 1903872500.00 ns, 634.6242 ms/op
WorkloadActual   7: 3 op, 1899309300.00 ns, 633.1031 ms/op
WorkloadActual   8: 3 op, 1900508800.00 ns, 633.5029 ms/op
WorkloadActual   9: 3 op, 1898607000.00 ns, 632.8690 ms/op
WorkloadActual  10: 3 op, 1912657400.00 ns, 637.5525 ms/op

// AfterActualRun
WorkloadResult   1: 3 op, 1901503600.00 ns, 633.8345 ms/op
WorkloadResult   2: 3 op, 1904388200.00 ns, 634.7961 ms/op
WorkloadResult   3: 3 op, 1904048200.00 ns, 634.6827 ms/op
WorkloadResult   4: 3 op, 1902528400.00 ns, 634.1761 ms/op
WorkloadResult   5: 3 op, 1904314000.00 ns, 634.7713 ms/op
WorkloadResult   6: 3 op, 1903872200.00 ns, 634.6241 ms/op
WorkloadResult   7: 3 op, 1899309000.00 ns, 633.1030 ms/op
WorkloadResult   8: 3 op, 1900508500.00 ns, 633.5028 ms/op
WorkloadResult   9: 3 op, 1898606700.00 ns, 632.8689 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 634.0400 ms, StdErr = 0.2489 ms (0.04%); N = 9, StdDev = 0.7466 ms
Min = 632.8689 ms, Q1 = 633.3029 ms, Median = 634.1761 ms, Q3 = 634.7270 ms, Max = 634.7961 ms
IQR = 1.4241 ms, LowerFence = 631.1667 ms, UpperFence = 636.8632 ms
ConfidenceInterval = [632.7853 ms; 635.2946 ms] (CI 99.9%), Margin = 1.2546 ms (0.20% of Mean)
Skewness = -0.35, Kurtosis = 1.3, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.ForEach: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f0cbb4aa-0eb0-404d-9c83-97243059a812.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForEach" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 2 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f0cbb4aa-0eb0-404d-9c83-97243059a812\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-AZSZQB(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 421800.00 ns, 421.8000 us/op
WorkloadJitting  1: 1 op, 474199100.00 ns, 474.1991 ms/op

OverheadWarmup   1: 3 op, 3700.00 ns, 1.2333 us/op
OverheadWarmup   2: 3 op, 500.00 ns, 166.6667 ns/op
OverheadWarmup   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   4: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   5: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   6: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   7: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   8: 3 op, 300.00 ns, 100.0000 ns/op

OverheadActual   1: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   2: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   4: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   5: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   6: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   7: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   8: 3 op, 1800.00 ns, 600.0000 ns/op
OverheadActual   9: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  10: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  11: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  12: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  13: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  14: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  15: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  16: 3 op, 1800.00 ns, 600.0000 ns/op
OverheadActual  17: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  18: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  19: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  20: 3 op, 200.00 ns, 66.6667 ns/op

WorkloadWarmup   1: 3 op, 1354334900.00 ns, 451.4450 ms/op

// BeforeActualRun
WorkloadActual   1: 3 op, 1356997600.00 ns, 452.3325 ms/op
WorkloadActual   2: 3 op, 1350824700.00 ns, 450.2749 ms/op
WorkloadActual   3: 3 op, 1363650100.00 ns, 454.5500 ms/op
WorkloadActual   4: 3 op, 1354187200.00 ns, 451.3957 ms/op
WorkloadActual   5: 3 op, 1349440400.00 ns, 449.8135 ms/op
WorkloadActual   6: 3 op, 1352896800.00 ns, 450.9656 ms/op
WorkloadActual   7: 3 op, 1372619100.00 ns, 457.5397 ms/op
WorkloadActual   8: 3 op, 1349964700.00 ns, 449.9882 ms/op
WorkloadActual   9: 3 op, 1348280600.00 ns, 449.4269 ms/op
WorkloadActual  10: 3 op, 1353741200.00 ns, 451.2471 ms/op

// AfterActualRun
WorkloadResult   1: 3 op, 1356997300.00 ns, 452.3324 ms/op
WorkloadResult   2: 3 op, 1350824400.00 ns, 450.2748 ms/op
WorkloadResult   3: 3 op, 1363649800.00 ns, 454.5499 ms/op
WorkloadResult   4: 3 op, 1354186900.00 ns, 451.3956 ms/op
WorkloadResult   5: 3 op, 1349440100.00 ns, 449.8134 ms/op
WorkloadResult   6: 3 op, 1352896500.00 ns, 450.9655 ms/op
WorkloadResult   7: 3 op, 1349964400.00 ns, 449.9881 ms/op
WorkloadResult   8: 3 op, 1348280300.00 ns, 449.4268 ms/op
WorkloadResult   9: 3 op, 1353740900.00 ns, 451.2470 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 451.1104 ms, StdErr = 0.5260 ms (0.12%); N = 9, StdDev = 1.5779 ms
Min = 449.4268 ms, Q1 = 449.9008 ms, Median = 450.9655 ms, Q3 = 451.8640 ms, Max = 454.5499 ms
IQR = 1.9633 ms, LowerFence = 446.9558 ms, UpperFence = 454.8090 ms
ConfidenceInterval = [448.4588 ms; 453.7620 ms] (CI 99.9%), Margin = 2.6516 ms (0.59% of Mean)
Skewness = 0.95, Kurtosis = 2.78, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqAggregate: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f0cbb4aa-0eb0-404d-9c83-97243059a812.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqAggregate" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 3 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f0cbb4aa-0eb0-404d-9c83-97243059a812\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-VLJCNI(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 432200.00 ns, 432.2000 us/op
WorkloadJitting  1: 1 op, 7011734300.00 ns, 7.0117 s/op

OverheadWarmup   1: 3 op, 6500.00 ns, 2.1667 us/op
OverheadWarmup   2: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   4: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   5: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   6: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   7: 3 op, 400.00 ns, 133.3333 ns/op

OverheadActual   1: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   2: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   4: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   5: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   6: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   7: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   8: 3 op, 1800.00 ns, 600.0000 ns/op
OverheadActual   9: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  10: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  11: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  12: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  13: 3 op, 2000.00 ns, 666.6667 ns/op
OverheadActual  14: 3 op, 1900.00 ns, 633.3333 ns/op
OverheadActual  15: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  16: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  17: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  18: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  19: 3 op, 600.00 ns, 200.0000 ns/op
OverheadActual  20: 3 op, 400.00 ns, 133.3333 ns/op

WorkloadWarmup   1: 3 op, 20977693600.00 ns, 6.9926 s/op

// BeforeActualRun
WorkloadActual   1: 3 op, 20954590300.00 ns, 6.9849 s/op
WorkloadActual   2: 3 op, 21006598200.00 ns, 7.0022 s/op
WorkloadActual   3: 3 op, 21097401300.00 ns, 7.0325 s/op
WorkloadActual   4: 3 op, 21405997700.00 ns, 7.1353 s/op
WorkloadActual   5: 3 op, 21005270400.00 ns, 7.0018 s/op
WorkloadActual   6: 3 op, 21016888700.00 ns, 7.0056 s/op
WorkloadActual   7: 3 op, 21218648200.00 ns, 7.0729 s/op
WorkloadActual   8: 3 op, 21103002400.00 ns, 7.0343 s/op
WorkloadActual   9: 3 op, 21064224400.00 ns, 7.0214 s/op
WorkloadActual  10: 3 op, 21202635400.00 ns, 7.0675 s/op

// AfterActualRun
WorkloadResult   1: 3 op, 20954589950.00 ns, 6.9849 s/op
WorkloadResult   2: 3 op, 21006597850.00 ns, 7.0022 s/op
WorkloadResult   3: 3 op, 21097400950.00 ns, 7.0325 s/op
WorkloadResult   4: 3 op, 21405997350.00 ns, 7.1353 s/op
WorkloadResult   5: 3 op, 21005270050.00 ns, 7.0018 s/op
WorkloadResult   6: 3 op, 21016888350.00 ns, 7.0056 s/op
WorkloadResult   7: 3 op, 21218647850.00 ns, 7.0729 s/op
WorkloadResult   8: 3 op, 21103002050.00 ns, 7.0343 s/op
WorkloadResult   9: 3 op, 21064224050.00 ns, 7.0214 s/op
WorkloadResult  10: 3 op, 21202635050.00 ns, 7.0675 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 7.0358 s, StdErr = 0.0143 s (0.20%); N = 10, StdDev = 0.0451 s
Min = 6.9849 s, Q1 = 7.0022 s, Median = 7.0269 s, Q3 = 7.0675 s, Max = 7.1353 s
IQR = 0.0653 s, LowerFence = 6.9042 s, UpperFence = 7.1656 s
ConfidenceInterval = [6.9677 s; 7.1040 s] (CI 99.9%), Margin = 0.0682 s (0.97% of Mean)
Skewness = 0.9, Kurtosis = 2.69, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqSum: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f0cbb4aa-0eb0-404d-9c83-97243059a812.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqSum" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 4 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\f0cbb4aa-0eb0-404d-9c83-97243059a812\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-QIDKCA(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 428100.00 ns, 428.1000 us/op
WorkloadJitting  1: 1 op, 7690419500.00 ns, 7.6904 s/op

OverheadWarmup   1: 3 op, 4100.00 ns, 1.3667 us/op
OverheadWarmup   2: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   3: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   4: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   5: 3 op, 1900.00 ns, 633.3333 ns/op
OverheadWarmup   6: 3 op, 200.00 ns, 66.6667 ns/op

OverheadActual   1: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   2: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   3: 3 op, 1900.00 ns, 633.3333 ns/op
OverheadActual   4: 3 op, 1800.00 ns, 600.0000 ns/op
OverheadActual   5: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   6: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   7: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   8: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   9: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  10: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  11: 3 op, 1900.00 ns, 633.3333 ns/op
OverheadActual  12: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  13: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  14: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  15: 3 op, 1900.00 ns, 633.3333 ns/op
OverheadActual  16: 3 op, 1900.00 ns, 633.3333 ns/op
OverheadActual  17: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  18: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  19: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  20: 3 op, 200.00 ns, 66.6667 ns/op

WorkloadWarmup   1: 3 op, 22981209900.00 ns, 7.6604 s/op

// BeforeActualRun
WorkloadActual   1: 3 op, 22443941000.00 ns, 7.4813 s/op
WorkloadActual   2: 3 op, 22417842900.00 ns, 7.4726 s/op
WorkloadActual   3: 3 op, 22367418500.00 ns, 7.4558 s/op
WorkloadActual   4: 3 op, 22437526000.00 ns, 7.4792 s/op
WorkloadActual   5: 3 op, 22371032100.00 ns, 7.4570 s/op
WorkloadActual   6: 3 op, 22434573000.00 ns, 7.4782 s/op
WorkloadActual   7: 3 op, 22337456700.00 ns, 7.4458 s/op
WorkloadActual   8: 3 op, 22340105300.00 ns, 7.4467 s/op
WorkloadActual   9: 3 op, 22473947300.00 ns, 7.4913 s/op
WorkloadActual  10: 3 op, 25221661900.00 ns, 8.4072 s/op

// AfterActualRun
WorkloadResult   1: 3 op, 22443940600.00 ns, 7.4813 s/op
WorkloadResult   2: 3 op, 22417842500.00 ns, 7.4726 s/op
WorkloadResult   3: 3 op, 22367418100.00 ns, 7.4558 s/op
WorkloadResult   4: 3 op, 22437525600.00 ns, 7.4792 s/op
WorkloadResult   5: 3 op, 22371031700.00 ns, 7.4570 s/op
WorkloadResult   6: 3 op, 22434572600.00 ns, 7.4782 s/op
WorkloadResult   7: 3 op, 22337456300.00 ns, 7.4458 s/op
WorkloadResult   8: 3 op, 22340104900.00 ns, 7.4467 s/op
WorkloadResult   9: 3 op, 22473946900.00 ns, 7.4913 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 7.4675 s, StdErr = 0.0055 s (0.07%); N = 9, StdDev = 0.0165 s
Min = 7.4458 s, Q1 = 7.4513 s, Median = 7.4726 s, Q3 = 7.4802 s, Max = 7.4913 s
IQR = 0.0290 s, LowerFence = 7.4078 s, UpperFence = 7.5237 s
ConfidenceInterval = [7.4398 s; 7.4953 s] (CI 99.9%), Margin = 0.0278 s (0.37% of Mean)
Skewness = -0.08, Kurtosis = 1.24, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.html

// * Detailed results *
ArrayAccessMethods.ForCacheArray: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 651.2014 ms, StdErr = 1.6559 ms (0.25%); N = 9, StdDev = 4.9678 ms
Min = 647.3429 ms, Q1 = 647.7883 ms, Median = 649.8545 ms, Q3 = 652.7656 ms, Max = 663.0667 ms
IQR = 4.9773 ms, LowerFence = 640.3224 ms, UpperFence = 660.2314 ms
ConfidenceInterval = [642.8533 ms; 659.5496 ms] (CI 99.9%), Margin = 8.3481 ms (1.28% of Mean)
Skewness = 1.42, Kurtosis = 3.73, MValue = 2
-------------------- Histogram --------------------
[645.253 ms ; 665.156 ms) | @@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.For: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 634.0400 ms, StdErr = 0.2489 ms (0.04%); N = 9, StdDev = 0.7466 ms
Min = 632.8689 ms, Q1 = 633.3029 ms, Median = 634.1761 ms, Q3 = 634.7270 ms, Max = 634.7961 ms
IQR = 1.4241 ms, LowerFence = 631.1667 ms, UpperFence = 636.8632 ms
ConfidenceInterval = [632.7853 ms; 635.2946 ms] (CI 99.9%), Margin = 1.2546 ms (0.20% of Mean)
Skewness = -0.35, Kurtosis = 1.3, MValue = 2
-------------------- Histogram --------------------
[632.555 ms ; 635.110 ms) | @@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.ForEach: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 451.1104 ms, StdErr = 0.5260 ms (0.12%); N = 9, StdDev = 1.5779 ms
Min = 449.4268 ms, Q1 = 449.9008 ms, Median = 450.9655 ms, Q3 = 451.8640 ms, Max = 454.5499 ms
IQR = 1.9633 ms, LowerFence = 446.9558 ms, UpperFence = 454.8090 ms
ConfidenceInterval = [448.4588 ms; 453.7620 ms] (CI 99.9%), Margin = 2.6516 ms (0.59% of Mean)
Skewness = 0.95, Kurtosis = 2.78, MValue = 2
-------------------- Histogram --------------------
[448.763 ms ; 455.214 ms) | @@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.LinqAggregate: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 7.0358 s, StdErr = 0.0143 s (0.20%); N = 10, StdDev = 0.0451 s
Min = 6.9849 s, Q1 = 7.0022 s, Median = 7.0269 s, Q3 = 7.0675 s, Max = 7.1353 s
IQR = 0.0653 s, LowerFence = 6.9042 s, UpperFence = 7.1656 s
ConfidenceInterval = [6.9677 s; 7.1040 s] (CI 99.9%), Margin = 0.0682 s (0.97% of Mean)
Skewness = 0.9, Kurtosis = 2.69, MValue = 2
-------------------- Histogram --------------------
[6.967 s ; 7.154 s) | @@@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.LinqSum: Job-IWUTFX(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 7.4675 s, StdErr = 0.0055 s (0.07%); N = 9, StdDev = 0.0165 s
Min = 7.4458 s, Q1 = 7.4513 s, Median = 7.4726 s, Q3 = 7.4802 s, Max = 7.4913 s
IQR = 0.0290 s, LowerFence = 7.4078 s, UpperFence = 7.5237 s
ConfidenceInterval = [7.4398 s; 7.4953 s] (CI 99.9%), Margin = 0.0278 s (0.37% of Mean)
Skewness = -0.08, Kurtosis = 1.24, MValue = 2
-------------------- Histogram --------------------
[7.439 s ; 7.498 s) | @@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host]     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  Job-IWUTFX : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Server=True  InvocationCount=3  IterationCount=10  
LaunchCount=1  RunStrategy=Throughput  UnrollFactor=1  
WarmupCount=1  

|        Method |       Mean |     Error |     StdDev | Ratio | RatioSD |
|-------------- |-----------:|----------:|-----------:|------:|--------:|
| ForCacheArray |   651.2 ms |  8.348 ms |  4.9678 ms |  1.00 |    0.00 |
|           For |   634.0 ms |  1.255 ms |  0.7466 ms |  0.97 |    0.01 |
|       ForEach |   451.1 ms |  2.652 ms |  1.5779 ms |  0.69 |    0.01 |
| LinqAggregate | 7,035.8 ms | 68.178 ms | 45.0958 ms | 10.80 |    0.13 |
|       LinqSum | 7,467.5 ms | 27.766 ms | 16.5233 ms | 11.47 |    0.08 |

// * Hints *
Outliers
  ArrayAccessMethods.ForCacheArray: Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1 -> 1 outlier  was  removed (667.78 ms)
  ArrayAccessMethods.For: Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1           -> 1 outlier  was  removed (637.55 ms)
  ArrayAccessMethods.ForEach: Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1       -> 1 outlier  was  removed (457.54 ms)
  ArrayAccessMethods.LinqSum: Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1       -> 1 outlier  was  removed (8.41 s)

// * Legends *
  Mean    : Arithmetic mean of all measurements
  Error   : Half of 99.9% confidence interval
  StdDev  : Standard deviation of all measurements
  Ratio   : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD : Standard deviation of the ratio distribution ([Current]/[Baseline])
  1 ms    : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:09:19 (559.66 sec), executed benchmarks: 5

Global total time: 00:09:25 (565.16 sec), executed benchmarks: 5
// * Artifacts cleanup *
