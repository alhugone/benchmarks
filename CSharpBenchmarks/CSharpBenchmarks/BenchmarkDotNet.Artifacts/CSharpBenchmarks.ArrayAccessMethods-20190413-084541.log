// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 5 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\18b607a7-4d38-4433-8760-ac3069f5e038
// command took 2,09s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\18b607a7-4d38-4433-8760-ac3069f5e038
// command took 3,17s and exited with 0
// ***** Done, took 00:00:05 (5.43 sec)   *****
// Found 5 benchmarks:
//   ArrayAccessMethods.ForCacheArray: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.For: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.ForEach: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqAggregate: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqSum: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ArrayAccessMethods.ForCacheArray: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18b607a7-4d38-4433-8760-ac3069f5e038.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForCacheArray" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 0 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\18b607a7-4d38-4433-8760-ac3069f5e038\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-SRLLWL(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 653000.00 ns, 653.0000 us/op
WorkloadJitting  1: 1 op, 91554200.00 ns, 91.5542 ms/op

OverheadWarmup   1: 3 op, 2900.00 ns, 966.6667 ns/op
OverheadWarmup   2: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   3: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   4: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   5: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   6: 3 op, 200.00 ns, 66.6667 ns/op

OverheadActual   1: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   2: 3 op, 600.00 ns, 200.0000 ns/op
OverheadActual   3: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   4: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   5: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   6: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   7: 3 op, 1800.00 ns, 600.0000 ns/op
OverheadActual   8: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   9: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  10: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  11: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  12: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  13: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  14: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  15: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  16: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  17: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  18: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  19: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  20: 3 op, 400.00 ns, 133.3333 ns/op

WorkloadWarmup   1: 3 op, 270788600.00 ns, 90.2629 ms/op

// BeforeActualRun
WorkloadActual   1: 3 op, 271686500.00 ns, 90.5622 ms/op
WorkloadActual   2: 3 op, 270499200.00 ns, 90.1664 ms/op
WorkloadActual   3: 3 op, 266951600.00 ns, 88.9839 ms/op
WorkloadActual   4: 3 op, 271209200.00 ns, 90.4031 ms/op
WorkloadActual   5: 3 op, 266433400.00 ns, 88.8111 ms/op
WorkloadActual   6: 3 op, 266454400.00 ns, 88.8181 ms/op
WorkloadActual   7: 3 op, 266762400.00 ns, 88.9208 ms/op
WorkloadActual   8: 3 op, 266171900.00 ns, 88.7240 ms/op
WorkloadActual   9: 3 op, 266395500.00 ns, 88.7985 ms/op
WorkloadActual  10: 3 op, 269345400.00 ns, 89.7818 ms/op

// AfterActualRun
WorkloadResult   1: 3 op, 271686100.00 ns, 90.5620 ms/op
WorkloadResult   2: 3 op, 270498800.00 ns, 90.1663 ms/op
WorkloadResult   3: 3 op, 266951200.00 ns, 88.9837 ms/op
WorkloadResult   4: 3 op, 271208800.00 ns, 90.4029 ms/op
WorkloadResult   5: 3 op, 266433000.00 ns, 88.8110 ms/op
WorkloadResult   6: 3 op, 266454000.00 ns, 88.8180 ms/op
WorkloadResult   7: 3 op, 266762000.00 ns, 88.9207 ms/op
WorkloadResult   8: 3 op, 266171500.00 ns, 88.7238 ms/op
WorkloadResult   9: 3 op, 266395100.00 ns, 88.7984 ms/op
WorkloadResult  10: 3 op, 269345000.00 ns, 89.7817 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 89.3969 ms, StdErr = 0.2356 ms (0.26%); N = 10, StdDev = 0.7451 ms
Min = 88.7238 ms, Q1 = 88.8110 ms, Median = 88.9522 ms, Q3 = 90.1663 ms, Max = 90.5620 ms
IQR = 1.3553 ms, LowerFence = 86.7781 ms, UpperFence = 92.1992 ms
ConfidenceInterval = [88.2703 ms; 90.5234 ms] (CI 99.9%), Margin = 1.1265 ms (1.26% of Mean)
Skewness = 0.49, Kurtosis = 1.26, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.For: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18b607a7-4d38-4433-8760-ac3069f5e038.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.For" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\18b607a7-4d38-4433-8760-ac3069f5e038\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-UNBQLD(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 426300.00 ns, 426.3000 us/op
WorkloadJitting  1: 1 op, 102998200.00 ns, 102.9982 ms/op

OverheadWarmup   1: 3 op, 4100.00 ns, 1.3667 us/op
OverheadWarmup   2: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   4: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   5: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   6: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   7: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   8: 3 op, 400.00 ns, 133.3333 ns/op

OverheadActual   1: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   2: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   3: 3 op, 600.00 ns, 200.0000 ns/op
OverheadActual   4: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   5: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   6: 3 op, 1900.00 ns, 633.3333 ns/op
OverheadActual   7: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   8: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   9: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  10: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  11: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  12: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  13: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  14: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  15: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  16: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  17: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  18: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  19: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  20: 3 op, 400.00 ns, 133.3333 ns/op

WorkloadWarmup   1: 3 op, 300319800.00 ns, 100.1066 ms/op

// BeforeActualRun
WorkloadActual   1: 3 op, 303722500.00 ns, 101.2408 ms/op
WorkloadActual   2: 3 op, 299800400.00 ns, 99.9335 ms/op
WorkloadActual   3: 3 op, 301047700.00 ns, 100.3492 ms/op
WorkloadActual   4: 3 op, 305085400.00 ns, 101.6951 ms/op
WorkloadActual   5: 3 op, 299489400.00 ns, 99.8298 ms/op
WorkloadActual   6: 3 op, 303836900.00 ns, 101.2790 ms/op
WorkloadActual   7: 3 op, 301066300.00 ns, 100.3554 ms/op
WorkloadActual   8: 3 op, 299583100.00 ns, 99.8610 ms/op
WorkloadActual   9: 3 op, 300028200.00 ns, 100.0094 ms/op
WorkloadActual  10: 3 op, 306488100.00 ns, 102.1627 ms/op

// AfterActualRun
WorkloadResult   1: 3 op, 303722200.00 ns, 101.2407 ms/op
WorkloadResult   2: 3 op, 299800100.00 ns, 99.9334 ms/op
WorkloadResult   3: 3 op, 301047400.00 ns, 100.3491 ms/op
WorkloadResult   4: 3 op, 305085100.00 ns, 101.6950 ms/op
WorkloadResult   5: 3 op, 299489100.00 ns, 99.8297 ms/op
WorkloadResult   6: 3 op, 303836600.00 ns, 101.2789 ms/op
WorkloadResult   7: 3 op, 301066000.00 ns, 100.3553 ms/op
WorkloadResult   8: 3 op, 299582800.00 ns, 99.8609 ms/op
WorkloadResult   9: 3 op, 300027900.00 ns, 100.0093 ms/op
WorkloadResult  10: 3 op, 306487800.00 ns, 102.1626 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 100.6715 ms, StdErr = 0.2691 ms (0.27%); N = 10, StdDev = 0.8509 ms
Min = 99.8297 ms, Q1 = 99.9334 ms, Median = 100.3522 ms, Q3 = 101.2789 ms, Max = 102.1626 ms
IQR = 1.3455 ms, LowerFence = 97.9151 ms, UpperFence = 103.2971 ms
ConfidenceInterval = [99.3850 ms; 101.9580 ms] (CI 99.9%), Margin = 1.2865 ms (1.28% of Mean)
Skewness = 0.47, Kurtosis = 1.47, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.ForEach: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18b607a7-4d38-4433-8760-ac3069f5e038.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForEach" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 2 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\18b607a7-4d38-4433-8760-ac3069f5e038\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-LMSSAB(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 455400.00 ns, 455.4000 us/op
WorkloadJitting  1: 1 op, 87714600.00 ns, 87.7146 ms/op

OverheadWarmup   1: 3 op, 9800.00 ns, 3.2667 us/op
OverheadWarmup   2: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   3: 3 op, 500.00 ns, 166.6667 ns/op
OverheadWarmup   4: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   5: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   6: 3 op, 400.00 ns, 133.3333 ns/op

OverheadActual   1: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   2: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   4: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   5: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   6: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   7: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   8: 3 op, 100.00 ns, 33.3333 ns/op
OverheadActual   9: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  10: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  11: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  12: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  13: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  14: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  15: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  16: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  17: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  18: 3 op, 1700.00 ns, 566.6667 ns/op
OverheadActual  19: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  20: 3 op, 400.00 ns, 133.3333 ns/op

WorkloadWarmup   1: 3 op, 264628600.00 ns, 88.2095 ms/op

// BeforeActualRun
WorkloadActual   1: 3 op, 266126500.00 ns, 88.7088 ms/op
WorkloadActual   2: 3 op, 265817300.00 ns, 88.6058 ms/op
WorkloadActual   3: 3 op, 265708200.00 ns, 88.5694 ms/op
WorkloadActual   4: 3 op, 261350300.00 ns, 87.1168 ms/op
WorkloadActual   5: 3 op, 261730000.00 ns, 87.2433 ms/op
WorkloadActual   6: 3 op, 266113100.00 ns, 88.7044 ms/op
WorkloadActual   7: 3 op, 264736200.00 ns, 88.2454 ms/op
WorkloadActual   8: 3 op, 265619100.00 ns, 88.5397 ms/op
WorkloadActual   9: 3 op, 264913900.00 ns, 88.3046 ms/op
WorkloadActual  10: 3 op, 265786800.00 ns, 88.5956 ms/op

// AfterActualRun
WorkloadResult   1: 3 op, 266126200.00 ns, 88.7087 ms/op
WorkloadResult   2: 3 op, 265817000.00 ns, 88.6057 ms/op
WorkloadResult   3: 3 op, 265707900.00 ns, 88.5693 ms/op
WorkloadResult   4: 3 op, 261350000.00 ns, 87.1167 ms/op
WorkloadResult   5: 3 op, 261729700.00 ns, 87.2432 ms/op
WorkloadResult   6: 3 op, 266112800.00 ns, 88.7043 ms/op
WorkloadResult   7: 3 op, 264735900.00 ns, 88.2453 ms/op
WorkloadResult   8: 3 op, 265618800.00 ns, 88.5396 ms/op
WorkloadResult   9: 3 op, 264913600.00 ns, 88.3045 ms/op
WorkloadResult  10: 3 op, 265786500.00 ns, 88.5955 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 88.2633 ms, StdErr = 0.1870 ms (0.21%); N = 10, StdDev = 0.5914 ms
Min = 87.1167 ms, Q1 = 88.2453 ms, Median = 88.5545 ms, Q3 = 88.6057 ms, Max = 88.7087 ms
IQR = 0.3604 ms, LowerFence = 87.7048 ms, UpperFence = 89.1462 ms
ConfidenceInterval = [87.3692 ms; 89.1574 ms] (CI 99.9%), Margin = 0.8941 ms (1.01% of Mean)
Skewness = -1.1, Kurtosis = 2.39, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqAggregate: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18b607a7-4d38-4433-8760-ac3069f5e038.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqAggregate" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 3 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\18b607a7-4d38-4433-8760-ac3069f5e038\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-NMVPCR(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 449300.00 ns, 449.3000 us/op
WorkloadJitting  1: 1 op, 701076800.00 ns, 701.0768 ms/op

OverheadWarmup   1: 3 op, 4400.00 ns, 1.4667 us/op
OverheadWarmup   2: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   3: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   4: 3 op, 500.00 ns, 166.6667 ns/op
OverheadWarmup   5: 3 op, 500.00 ns, 166.6667 ns/op
OverheadWarmup   6: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   7: 3 op, 300.00 ns, 100.0000 ns/op
OverheadWarmup   8: 3 op, 2000.00 ns, 666.6667 ns/op

OverheadActual   1: 3 op, 2000.00 ns, 666.6667 ns/op
OverheadActual   2: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   4: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   5: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   6: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   7: 3 op, 600.00 ns, 200.0000 ns/op
OverheadActual   8: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   9: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  10: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  11: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  12: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  13: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  14: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  15: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  16: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  17: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  18: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  19: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  20: 3 op, 300.00 ns, 100.0000 ns/op

WorkloadWarmup   1: 3 op, 2093681700.00 ns, 697.8939 ms/op

// BeforeActualRun
WorkloadActual   1: 3 op, 2092664300.00 ns, 697.5548 ms/op
WorkloadActual   2: 3 op, 2087094500.00 ns, 695.6982 ms/op
WorkloadActual   3: 3 op, 2104393700.00 ns, 701.4646 ms/op
WorkloadActual   4: 3 op, 2085530700.00 ns, 695.1769 ms/op
WorkloadActual   5: 3 op, 2084864500.00 ns, 694.9548 ms/op
WorkloadActual   6: 3 op, 2094295100.00 ns, 698.0984 ms/op
WorkloadActual   7: 3 op, 2088272900.00 ns, 696.0910 ms/op
WorkloadActual   8: 3 op, 2091960700.00 ns, 697.3202 ms/op
WorkloadActual   9: 3 op, 2098046900.00 ns, 699.3490 ms/op
WorkloadActual  10: 3 op, 2097031200.00 ns, 699.0104 ms/op

// AfterActualRun
WorkloadResult   1: 3 op, 2092664000.00 ns, 697.5547 ms/op
WorkloadResult   2: 3 op, 2087094200.00 ns, 695.6981 ms/op
WorkloadResult   3: 3 op, 2104393400.00 ns, 701.4645 ms/op
WorkloadResult   4: 3 op, 2085530400.00 ns, 695.1768 ms/op
WorkloadResult   5: 3 op, 2084864200.00 ns, 694.9547 ms/op
WorkloadResult   6: 3 op, 2094294800.00 ns, 698.0983 ms/op
WorkloadResult   7: 3 op, 2088272600.00 ns, 696.0909 ms/op
WorkloadResult   8: 3 op, 2091960400.00 ns, 697.3201 ms/op
WorkloadResult   9: 3 op, 2098046600.00 ns, 699.3489 ms/op
WorkloadResult  10: 3 op, 2097030900.00 ns, 699.0103 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 697.4717 ms, StdErr = 0.6575 ms (0.09%); N = 10, StdDev = 2.0793 ms
Min = 694.9547 ms, Q1 = 695.6981 ms, Median = 697.4374 ms, Q3 = 699.0103 ms, Max = 701.4645 ms
IQR = 3.3122 ms, LowerFence = 690.7297 ms, UpperFence = 703.9787 ms
ConfidenceInterval = [694.3282 ms; 700.6153 ms] (CI 99.9%), Margin = 3.1435 ms (0.45% of Mean)
Skewness = 0.42, Kurtosis = 1.89, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqSum: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "18b607a7-4d38-4433-8760-ac3069f5e038.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqSum" --job "Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 4 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\18b607a7-4d38-4433-8760-ac3069f5e038\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-QMJKKP(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 427700.00 ns, 427.7000 us/op
WorkloadJitting  1: 1 op, 864203500.00 ns, 864.2035 ms/op

OverheadWarmup   1: 3 op, 3500.00 ns, 1.1667 us/op
OverheadWarmup   2: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   3: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   4: 3 op, 400.00 ns, 133.3333 ns/op
OverheadWarmup   5: 3 op, 200.00 ns, 66.6667 ns/op
OverheadWarmup   6: 3 op, 1700.00 ns, 566.6667 ns/op

OverheadActual   1: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual   2: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   3: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   4: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual   5: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual   6: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   7: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   8: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual   9: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  10: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  11: 3 op, 600.00 ns, 200.0000 ns/op
OverheadActual  12: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  13: 3 op, 600.00 ns, 200.0000 ns/op
OverheadActual  14: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  15: 3 op, 200.00 ns, 66.6667 ns/op
OverheadActual  16: 3 op, 500.00 ns, 166.6667 ns/op
OverheadActual  17: 3 op, 400.00 ns, 133.3333 ns/op
OverheadActual  18: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  19: 3 op, 300.00 ns, 100.0000 ns/op
OverheadActual  20: 3 op, 600.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 3 op, 2591318600.00 ns, 863.7729 ms/op

// BeforeActualRun
WorkloadActual   1: 3 op, 2590676500.00 ns, 863.5588 ms/op
WorkloadActual   2: 3 op, 2585863200.00 ns, 861.9544 ms/op
WorkloadActual   3: 3 op, 2595525500.00 ns, 865.1752 ms/op
WorkloadActual   4: 3 op, 2598290700.00 ns, 866.0969 ms/op
WorkloadActual   5: 3 op, 2635236000.00 ns, 878.4120 ms/op
WorkloadActual   6: 3 op, 2588691900.00 ns, 862.8973 ms/op
WorkloadActual   7: 3 op, 2589653000.00 ns, 863.2177 ms/op
WorkloadActual   8: 3 op, 2662809600.00 ns, 887.6032 ms/op
WorkloadActual   9: 3 op, 2655708100.00 ns, 885.2360 ms/op
WorkloadActual  10: 3 op, 2601481900.00 ns, 867.1606 ms/op

// AfterActualRun
WorkloadResult   1: 3 op, 2590676200.00 ns, 863.5587 ms/op
WorkloadResult   2: 3 op, 2585862900.00 ns, 861.9543 ms/op
WorkloadResult   3: 3 op, 2595525200.00 ns, 865.1751 ms/op
WorkloadResult   4: 3 op, 2598290400.00 ns, 866.0968 ms/op
WorkloadResult   5: 3 op, 2635235700.00 ns, 878.4119 ms/op
WorkloadResult   6: 3 op, 2588691600.00 ns, 862.8972 ms/op
WorkloadResult   7: 3 op, 2589652700.00 ns, 863.2176 ms/op
WorkloadResult   8: 3 op, 2662809300.00 ns, 887.6031 ms/op
WorkloadResult   9: 3 op, 2655707800.00 ns, 885.2359 ms/op
WorkloadResult  10: 3 op, 2601481600.00 ns, 867.1605 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 870.1311 ms, StdErr = 3.0945 ms (0.36%); N = 10, StdDev = 9.7857 ms
Min = 861.9543 ms, Q1 = 863.2176 ms, Median = 865.6359 ms, Q3 = 878.4119 ms, Max = 887.6031 ms
IQR = 15.1943 ms, LowerFence = 840.4261 ms, UpperFence = 901.2034 ms
ConfidenceInterval = [855.3365 ms; 884.9257 ms] (CI 99.9%), Margin = 14.7946 ms (1.70% of Mean)
Skewness = 0.81, Kurtosis = 1.77, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.html

// * Detailed results *
ArrayAccessMethods.ForCacheArray: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 89.3969 ms, StdErr = 0.2356 ms (0.26%); N = 10, StdDev = 0.7451 ms
Min = 88.7238 ms, Q1 = 88.8110 ms, Median = 88.9522 ms, Q3 = 90.1663 ms, Max = 90.5620 ms
IQR = 1.3553 ms, LowerFence = 86.7781 ms, UpperFence = 92.1992 ms
ConfidenceInterval = [88.2703 ms; 90.5234 ms] (CI 99.9%), Margin = 1.1265 ms (1.26% of Mean)
Skewness = 0.49, Kurtosis = 1.26, MValue = 2
-------------------- Histogram --------------------
[88.421 ms ; 90.865 ms) | @@@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.For: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 100.6715 ms, StdErr = 0.2691 ms (0.27%); N = 10, StdDev = 0.8509 ms
Min = 99.8297 ms, Q1 = 99.9334 ms, Median = 100.3522 ms, Q3 = 101.2789 ms, Max = 102.1626 ms
IQR = 1.3455 ms, LowerFence = 97.9151 ms, UpperFence = 103.2971 ms
ConfidenceInterval = [99.3850 ms; 101.9580 ms] (CI 99.9%), Margin = 1.2865 ms (1.28% of Mean)
Skewness = 0.47, Kurtosis = 1.47, MValue = 2
-------------------- Histogram --------------------
[99.484 ms ; 102.508 ms) | @@@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.ForEach: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 88.2633 ms, StdErr = 0.1870 ms (0.21%); N = 10, StdDev = 0.5914 ms
Min = 87.1167 ms, Q1 = 88.2453 ms, Median = 88.5545 ms, Q3 = 88.6057 ms, Max = 88.7087 ms
IQR = 0.3604 ms, LowerFence = 87.7048 ms, UpperFence = 89.1462 ms
ConfidenceInterval = [87.3692 ms; 89.1574 ms] (CI 99.9%), Margin = 0.8941 ms (1.01% of Mean)
Skewness = -1.1, Kurtosis = 2.39, MValue = 2
-------------------- Histogram --------------------
[86.876 ms ; 88.949 ms) | @@@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.LinqAggregate: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 697.4717 ms, StdErr = 0.6575 ms (0.09%); N = 10, StdDev = 2.0793 ms
Min = 694.9547 ms, Q1 = 695.6981 ms, Median = 697.4374 ms, Q3 = 699.0103 ms, Max = 701.4645 ms
IQR = 3.3122 ms, LowerFence = 690.7297 ms, UpperFence = 703.9787 ms
ConfidenceInterval = [694.3282 ms; 700.6153 ms] (CI 99.9%), Margin = 3.1435 ms (0.45% of Mean)
Skewness = 0.42, Kurtosis = 1.89, MValue = 2
-------------------- Histogram --------------------
[694.110 ms ; 702.309 ms) | @@@@@@@@@@
---------------------------------------------------

ArrayAccessMethods.LinqSum: Job-PRYTGM(Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 870.1311 ms, StdErr = 3.0945 ms (0.36%); N = 10, StdDev = 9.7857 ms
Min = 861.9543 ms, Q1 = 863.2176 ms, Median = 865.6359 ms, Q3 = 878.4119 ms, Max = 887.6031 ms
IQR = 15.1943 ms, LowerFence = 840.4261 ms, UpperFence = 901.2034 ms
ConfidenceInterval = [855.3365 ms; 884.9257 ms] (CI 99.9%), Margin = 14.7946 ms (1.70% of Mean)
Skewness = 0.81, Kurtosis = 1.77, MValue = 2
-------------------- Histogram --------------------
[857.980 ms ; 891.577 ms) | @@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host]     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  Job-PRYTGM : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Server=True  InvocationCount=3  IterationCount=10  
LaunchCount=1  RunStrategy=Throughput  UnrollFactor=1  
WarmupCount=1  

|        Method |      Mean |      Error |    StdDev | Ratio | RatioSD |
|-------------- |----------:|-----------:|----------:|------:|--------:|
| ForCacheArray |  89.40 ms |  1.1265 ms | 0.7451 ms |  1.00 |    0.00 |
|           For | 100.67 ms |  1.2865 ms | 0.8509 ms |  1.13 |    0.01 |
|       ForEach |  88.26 ms |  0.8941 ms | 0.5914 ms |  0.99 |    0.01 |
| LinqAggregate | 697.47 ms |  3.1435 ms | 2.0793 ms |  7.80 |    0.07 |
|       LinqSum | 870.13 ms | 14.7946 ms | 9.7857 ms |  9.73 |    0.17 |

// * Hints *
Outliers
  ArrayAccessMethods.ForEach: Server=True, InvocationCount=3, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1 -> 2 outliers were detected (87.12 ms, 87.24 ms)

// * Legends *
  Mean    : Arithmetic mean of all measurements
  Error   : Half of 99.9% confidence interval
  StdDev  : Standard deviation of all measurements
  Ratio   : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD : Standard deviation of the ratio distribution ([Current]/[Baseline])
  1 ms    : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:01:06 (66.41 sec), executed benchmarks: 5

Global total time: 00:01:11 (71.85 sec), executed benchmarks: 5
// * Artifacts cleanup *
