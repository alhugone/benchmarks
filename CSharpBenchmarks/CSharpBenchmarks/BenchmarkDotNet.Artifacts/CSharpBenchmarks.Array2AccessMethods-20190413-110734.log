// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 7 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0fbd8eb4-ab71-41a8-b0eb-563146d15e1a
// command took 2s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0fbd8eb4-ab71-41a8-b0eb-563146d15e1a
// command took 3,17s and exited with 0
// ***** Done, took 00:00:05 (5.35 sec)   *****
// Found 7 benchmarks:
//   Array2AccessMethods.ForCacheArray: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
//   Array2AccessMethods.For: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
//   Array2AccessMethods.ForEach: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
//   Array2AccessMethods.LinqAggregate: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
//   Array2AccessMethods.LinqSum: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
//   Array2AccessMethods.LinqAll: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
//   Array2AccessMethods.LinqAny: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: Array2AccessMethods.ForCacheArray: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0fbd8eb4-ab71-41a8-b0eb-563146d15e1a.dll" --benchmarkName "CSharpBenchmarks.Array2AccessMethods.ForCacheArray" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 0 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0fbd8eb4-ab71-41a8-b0eb-563146d15e1a\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-KCCVJW(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 467300.00 ns, 467.3000 us/op
WorkloadJitting  1: 1 op, 451601600.00 ns, 451.6016 ms/op

WorkloadWarmup   1: 1 op, 452361100.00 ns, 452.3611 ms/op
WorkloadWarmup   2: 1 op, 449022900.00 ns, 449.0229 ms/op
WorkloadWarmup   3: 1 op, 448749300.00 ns, 448.7493 ms/op
WorkloadWarmup   4: 1 op, 450159400.00 ns, 450.1594 ms/op
WorkloadWarmup   5: 1 op, 450533900.00 ns, 450.5339 ms/op
WorkloadWarmup   6: 1 op, 450609600.00 ns, 450.6096 ms/op
WorkloadWarmup   7: 1 op, 454521300.00 ns, 454.5213 ms/op
WorkloadWarmup   8: 1 op, 449067100.00 ns, 449.0671 ms/op
WorkloadWarmup   9: 1 op, 452860700.00 ns, 452.8607 ms/op
WorkloadWarmup  10: 1 op, 453828000.00 ns, 453.8280 ms/op
WorkloadWarmup  11: 1 op, 448258400.00 ns, 448.2584 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 448033500.00 ns, 448.0335 ms/op
WorkloadActual   2: 1 op, 454237800.00 ns, 454.2378 ms/op
WorkloadActual   3: 1 op, 450243900.00 ns, 450.2439 ms/op
WorkloadActual   4: 1 op, 449811300.00 ns, 449.8113 ms/op
WorkloadActual   5: 1 op, 447797700.00 ns, 447.7977 ms/op
WorkloadActual   6: 1 op, 449900500.00 ns, 449.9005 ms/op
WorkloadActual   7: 1 op, 448285300.00 ns, 448.2853 ms/op
WorkloadActual   8: 1 op, 448199700.00 ns, 448.1997 ms/op
WorkloadActual   9: 1 op, 454524000.00 ns, 454.5240 ms/op
WorkloadActual  10: 1 op, 451929100.00 ns, 451.9291 ms/op
WorkloadActual  11: 1 op, 453844500.00 ns, 453.8445 ms/op
WorkloadActual  12: 1 op, 448932200.00 ns, 448.9322 ms/op
WorkloadActual  13: 1 op, 453001300.00 ns, 453.0013 ms/op
WorkloadActual  14: 1 op, 447590100.00 ns, 447.5901 ms/op
WorkloadActual  15: 1 op, 447440300.00 ns, 447.4403 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 448033500.00 ns, 448.0335 ms/op
WorkloadResult   2: 1 op, 454237800.00 ns, 454.2378 ms/op
WorkloadResult   3: 1 op, 450243900.00 ns, 450.2439 ms/op
WorkloadResult   4: 1 op, 449811300.00 ns, 449.8113 ms/op
WorkloadResult   5: 1 op, 447797700.00 ns, 447.7977 ms/op
WorkloadResult   6: 1 op, 449900500.00 ns, 449.9005 ms/op
WorkloadResult   7: 1 op, 448285300.00 ns, 448.2853 ms/op
WorkloadResult   8: 1 op, 448199700.00 ns, 448.1997 ms/op
WorkloadResult   9: 1 op, 454524000.00 ns, 454.5240 ms/op
WorkloadResult  10: 1 op, 451929100.00 ns, 451.9291 ms/op
WorkloadResult  11: 1 op, 453844500.00 ns, 453.8445 ms/op
WorkloadResult  12: 1 op, 448932200.00 ns, 448.9322 ms/op
WorkloadResult  13: 1 op, 453001300.00 ns, 453.0013 ms/op
WorkloadResult  14: 1 op, 447590100.00 ns, 447.5901 ms/op
WorkloadResult  15: 1 op, 447440300.00 ns, 447.4403 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 450.2514 ms, StdErr = 0.6672 ms (0.15%); N = 15, StdDev = 2.5842 ms
Min = 447.4403 ms, Q1 = 448.0335 ms, Median = 449.8113 ms, Q3 = 453.0013 ms, Max = 454.5240 ms
IQR = 4.9678 ms, LowerFence = 440.5818 ms, UpperFence = 460.4530 ms
ConfidenceInterval = [447.4888 ms; 453.0140 ms] (CI 99.9%), Margin = 2.7626 ms (0.61% of Mean)
Skewness = 0.49, Kurtosis = 1.53, MValue = 2

// **************************
// Benchmark: Array2AccessMethods.For: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0fbd8eb4-ab71-41a8-b0eb-563146d15e1a.dll" --benchmarkName "CSharpBenchmarks.Array2AccessMethods.For" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0fbd8eb4-ab71-41a8-b0eb-563146d15e1a\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-MHGCUD(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 459500.00 ns, 459.5000 us/op
WorkloadJitting  1: 1 op, 450046800.00 ns, 450.0468 ms/op

WorkloadWarmup   1: 1 op, 448697100.00 ns, 448.6971 ms/op
WorkloadWarmup   2: 1 op, 447643000.00 ns, 447.6430 ms/op
WorkloadWarmup   3: 1 op, 448330200.00 ns, 448.3302 ms/op
WorkloadWarmup   4: 1 op, 452452000.00 ns, 452.4520 ms/op
WorkloadWarmup   5: 1 op, 449317700.00 ns, 449.3177 ms/op
WorkloadWarmup   6: 1 op, 447860800.00 ns, 447.8608 ms/op
WorkloadWarmup   7: 1 op, 447403600.00 ns, 447.4036 ms/op
WorkloadWarmup   8: 1 op, 448822800.00 ns, 448.8228 ms/op
WorkloadWarmup   9: 1 op, 453327900.00 ns, 453.3279 ms/op
WorkloadWarmup  10: 1 op, 449136400.00 ns, 449.1364 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 450394900.00 ns, 450.3949 ms/op
WorkloadActual   2: 1 op, 470648500.00 ns, 470.6485 ms/op
WorkloadActual   3: 1 op, 449004300.00 ns, 449.0043 ms/op
WorkloadActual   4: 1 op, 449095800.00 ns, 449.0958 ms/op
WorkloadActual   5: 1 op, 447701800.00 ns, 447.7018 ms/op
WorkloadActual   6: 1 op, 450253400.00 ns, 450.2534 ms/op
WorkloadActual   7: 1 op, 448302800.00 ns, 448.3028 ms/op
WorkloadActual   8: 1 op, 447091300.00 ns, 447.0913 ms/op
WorkloadActual   9: 1 op, 448343700.00 ns, 448.3437 ms/op
WorkloadActual  10: 1 op, 449899700.00 ns, 449.8997 ms/op
WorkloadActual  11: 1 op, 447096100.00 ns, 447.0961 ms/op
WorkloadActual  12: 1 op, 449924100.00 ns, 449.9241 ms/op
WorkloadActual  13: 1 op, 449994900.00 ns, 449.9949 ms/op
WorkloadActual  14: 1 op, 449961100.00 ns, 449.9611 ms/op
WorkloadActual  15: 1 op, 448061600.00 ns, 448.0616 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 450394900.00 ns, 450.3949 ms/op
WorkloadResult   2: 1 op, 449004300.00 ns, 449.0043 ms/op
WorkloadResult   3: 1 op, 449095800.00 ns, 449.0958 ms/op
WorkloadResult   4: 1 op, 447701800.00 ns, 447.7018 ms/op
WorkloadResult   5: 1 op, 450253400.00 ns, 450.2534 ms/op
WorkloadResult   6: 1 op, 448302800.00 ns, 448.3028 ms/op
WorkloadResult   7: 1 op, 447091300.00 ns, 447.0913 ms/op
WorkloadResult   8: 1 op, 448343700.00 ns, 448.3437 ms/op
WorkloadResult   9: 1 op, 449899700.00 ns, 449.8997 ms/op
WorkloadResult  10: 1 op, 447096100.00 ns, 447.0961 ms/op
WorkloadResult  11: 1 op, 449924100.00 ns, 449.9241 ms/op
WorkloadResult  12: 1 op, 449994900.00 ns, 449.9949 ms/op
WorkloadResult  13: 1 op, 449961100.00 ns, 449.9611 ms/op
WorkloadResult  14: 1 op, 448061600.00 ns, 448.0616 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 448.9375 ms, StdErr = 0.3127 ms (0.07%); N = 14, StdDev = 1.1701 ms
Min = 447.0913 ms, Q1 = 448.0616 ms, Median = 449.0501 ms, Q3 = 449.9611 ms, Max = 450.3949 ms
IQR = 1.8995 ms, LowerFence = 445.2124 ms, UpperFence = 452.8104 ms
ConfidenceInterval = [447.6176 ms; 450.2575 ms] (CI 99.9%), Margin = 1.3200 ms (0.29% of Mean)
Skewness = -0.27, Kurtosis = 1.45, MValue = 2

// **************************
// Benchmark: Array2AccessMethods.ForEach: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0fbd8eb4-ab71-41a8-b0eb-563146d15e1a.dll" --benchmarkName "CSharpBenchmarks.Array2AccessMethods.ForEach" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 2 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0fbd8eb4-ab71-41a8-b0eb-563146d15e1a\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-WTZJLG(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 467100.00 ns, 467.1000 us/op
WorkloadJitting  1: 1 op, 379965100.00 ns, 379.9651 ms/op

WorkloadWarmup   1: 1 op, 391399100.00 ns, 391.3991 ms/op
WorkloadWarmup   2: 1 op, 394839400.00 ns, 394.8394 ms/op
WorkloadWarmup   3: 1 op, 383043000.00 ns, 383.0430 ms/op
WorkloadWarmup   4: 1 op, 385658500.00 ns, 385.6585 ms/op
WorkloadWarmup   5: 1 op, 382534000.00 ns, 382.5340 ms/op
WorkloadWarmup   6: 1 op, 387389900.00 ns, 387.3899 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 382559000.00 ns, 382.5590 ms/op
WorkloadActual   2: 1 op, 382283100.00 ns, 382.2831 ms/op
WorkloadActual   3: 1 op, 390605900.00 ns, 390.6059 ms/op
WorkloadActual   4: 1 op, 377721700.00 ns, 377.7217 ms/op
WorkloadActual   5: 1 op, 391204000.00 ns, 391.2040 ms/op
WorkloadActual   6: 1 op, 377343500.00 ns, 377.3435 ms/op
WorkloadActual   7: 1 op, 384623900.00 ns, 384.6239 ms/op
WorkloadActual   8: 1 op, 377426900.00 ns, 377.4269 ms/op
WorkloadActual   9: 1 op, 379169000.00 ns, 379.1690 ms/op
WorkloadActual  10: 1 op, 377793000.00 ns, 377.7930 ms/op
WorkloadActual  11: 1 op, 377619500.00 ns, 377.6195 ms/op
WorkloadActual  12: 1 op, 378570300.00 ns, 378.5703 ms/op
WorkloadActual  13: 1 op, 379982200.00 ns, 379.9822 ms/op
WorkloadActual  14: 1 op, 386259800.00 ns, 386.2598 ms/op
WorkloadActual  15: 1 op, 379557100.00 ns, 379.5571 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 382559000.00 ns, 382.5590 ms/op
WorkloadResult   2: 1 op, 382283100.00 ns, 382.2831 ms/op
WorkloadResult   3: 1 op, 390605900.00 ns, 390.6059 ms/op
WorkloadResult   4: 1 op, 377721700.00 ns, 377.7217 ms/op
WorkloadResult   5: 1 op, 391204000.00 ns, 391.2040 ms/op
WorkloadResult   6: 1 op, 377343500.00 ns, 377.3435 ms/op
WorkloadResult   7: 1 op, 384623900.00 ns, 384.6239 ms/op
WorkloadResult   8: 1 op, 377426900.00 ns, 377.4269 ms/op
WorkloadResult   9: 1 op, 379169000.00 ns, 379.1690 ms/op
WorkloadResult  10: 1 op, 377793000.00 ns, 377.7930 ms/op
WorkloadResult  11: 1 op, 377619500.00 ns, 377.6195 ms/op
WorkloadResult  12: 1 op, 378570300.00 ns, 378.5703 ms/op
WorkloadResult  13: 1 op, 379982200.00 ns, 379.9822 ms/op
WorkloadResult  14: 1 op, 386259800.00 ns, 386.2598 ms/op
WorkloadResult  15: 1 op, 379557100.00 ns, 379.5571 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 381.5146 ms, StdErr = 1.2116 ms (0.32%); N = 15, StdDev = 4.6925 ms
Min = 377.3435 ms, Q1 = 377.7217 ms, Median = 379.5571 ms, Q3 = 384.6239 ms, Max = 391.2040 ms
IQR = 6.9022 ms, LowerFence = 367.3684 ms, UpperFence = 394.9772 ms
ConfidenceInterval = [376.4981 ms; 386.5311 ms] (CI 99.9%), Margin = 5.0165 ms (1.31% of Mean)
Skewness = 0.93, Kurtosis = 2.42, MValue = 2

// **************************
// Benchmark: Array2AccessMethods.LinqAggregate: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0fbd8eb4-ab71-41a8-b0eb-563146d15e1a.dll" --benchmarkName "CSharpBenchmarks.Array2AccessMethods.LinqAggregate" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 3 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0fbd8eb4-ab71-41a8-b0eb-563146d15e1a\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-ZWLDFU(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 466500.00 ns, 466.5000 us/op
WorkloadJitting  1: 1 op, 471104600.00 ns, 471.1046 ms/op

WorkloadWarmup   1: 1 op, 466629000.00 ns, 466.6290 ms/op
WorkloadWarmup   2: 1 op, 471228100.00 ns, 471.2281 ms/op
WorkloadWarmup   3: 1 op, 464900200.00 ns, 464.9002 ms/op
WorkloadWarmup   4: 1 op, 470244100.00 ns, 470.2441 ms/op
WorkloadWarmup   5: 1 op, 466094700.00 ns, 466.0947 ms/op
WorkloadWarmup   6: 1 op, 467133400.00 ns, 467.1334 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 468521400.00 ns, 468.5214 ms/op
WorkloadActual   2: 1 op, 467312100.00 ns, 467.3121 ms/op
WorkloadActual   3: 1 op, 467745400.00 ns, 467.7454 ms/op
WorkloadActual   4: 1 op, 467181200.00 ns, 467.1812 ms/op
WorkloadActual   5: 1 op, 465592700.00 ns, 465.5927 ms/op
WorkloadActual   6: 1 op, 469211800.00 ns, 469.2118 ms/op
WorkloadActual   7: 1 op, 467180900.00 ns, 467.1809 ms/op
WorkloadActual   8: 1 op, 467180300.00 ns, 467.1803 ms/op
WorkloadActual   9: 1 op, 467220500.00 ns, 467.2205 ms/op
WorkloadActual  10: 1 op, 467908800.00 ns, 467.9088 ms/op
WorkloadActual  11: 1 op, 473656500.00 ns, 473.6565 ms/op
WorkloadActual  12: 1 op, 492082700.00 ns, 492.0827 ms/op
WorkloadActual  13: 1 op, 473220300.00 ns, 473.2203 ms/op
WorkloadActual  14: 1 op, 470178200.00 ns, 470.1782 ms/op
WorkloadActual  15: 1 op, 465682800.00 ns, 465.6828 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 468521400.00 ns, 468.5214 ms/op
WorkloadResult   2: 1 op, 467312100.00 ns, 467.3121 ms/op
WorkloadResult   3: 1 op, 467745400.00 ns, 467.7454 ms/op
WorkloadResult   4: 1 op, 467181200.00 ns, 467.1812 ms/op
WorkloadResult   5: 1 op, 465592700.00 ns, 465.5927 ms/op
WorkloadResult   6: 1 op, 469211800.00 ns, 469.2118 ms/op
WorkloadResult   7: 1 op, 467180900.00 ns, 467.1809 ms/op
WorkloadResult   8: 1 op, 467180300.00 ns, 467.1803 ms/op
WorkloadResult   9: 1 op, 467220500.00 ns, 467.2205 ms/op
WorkloadResult  10: 1 op, 467908800.00 ns, 467.9088 ms/op
WorkloadResult  11: 1 op, 473656500.00 ns, 473.6565 ms/op
WorkloadResult  12: 1 op, 473220300.00 ns, 473.2203 ms/op
WorkloadResult  13: 1 op, 470178200.00 ns, 470.1782 ms/op
WorkloadResult  14: 1 op, 465682800.00 ns, 465.6828 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 468.4138 ms, StdErr = 0.6533 ms (0.14%); N = 14, StdDev = 2.4443 ms
Min = 465.5927 ms, Q1 = 467.1809 ms, Median = 467.5288 ms, Q3 = 469.2118 ms, Max = 473.6565 ms
IQR = 2.0309 ms, LowerFence = 464.1346 ms, UpperFence = 472.2582 ms
ConfidenceInterval = [465.6565 ms; 471.1711 ms] (CI 99.9%), Margin = 2.7573 ms (0.59% of Mean)
Skewness = 1.02, Kurtosis = 2.86, MValue = 2

// **************************
// Benchmark: Array2AccessMethods.LinqSum: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0fbd8eb4-ab71-41a8-b0eb-563146d15e1a.dll" --benchmarkName "CSharpBenchmarks.Array2AccessMethods.LinqSum" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 4 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0fbd8eb4-ab71-41a8-b0eb-563146d15e1a\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-PVUCRY(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 459900.00 ns, 459.9000 us/op
WorkloadJitting  1: 1 op, 521756400.00 ns, 521.7564 ms/op

WorkloadWarmup   1: 1 op, 531175100.00 ns, 531.1751 ms/op
WorkloadWarmup   2: 1 op, 542686700.00 ns, 542.6867 ms/op
WorkloadWarmup   3: 1 op, 534828100.00 ns, 534.8281 ms/op
WorkloadWarmup   4: 1 op, 535816600.00 ns, 535.8166 ms/op
WorkloadWarmup   5: 1 op, 530685600.00 ns, 530.6856 ms/op
WorkloadWarmup   6: 1 op, 539943900.00 ns, 539.9439 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 527018800.00 ns, 527.0188 ms/op
WorkloadActual   2: 1 op, 524427700.00 ns, 524.4277 ms/op
WorkloadActual   3: 1 op, 524295400.00 ns, 524.2954 ms/op
WorkloadActual   4: 1 op, 534616000.00 ns, 534.6160 ms/op
WorkloadActual   5: 1 op, 534805800.00 ns, 534.8058 ms/op
WorkloadActual   6: 1 op, 522496100.00 ns, 522.4961 ms/op
WorkloadActual   7: 1 op, 527530800.00 ns, 527.5308 ms/op
WorkloadActual   8: 1 op, 522227500.00 ns, 522.2275 ms/op
WorkloadActual   9: 1 op, 531299600.00 ns, 531.2996 ms/op
WorkloadActual  10: 1 op, 521274700.00 ns, 521.2747 ms/op
WorkloadActual  11: 1 op, 528104200.00 ns, 528.1042 ms/op
WorkloadActual  12: 1 op, 518274200.00 ns, 518.2742 ms/op
WorkloadActual  13: 1 op, 525714800.00 ns, 525.7148 ms/op
WorkloadActual  14: 1 op, 522316200.00 ns, 522.3162 ms/op
WorkloadActual  15: 1 op, 528224600.00 ns, 528.2246 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 527018800.00 ns, 527.0188 ms/op
WorkloadResult   2: 1 op, 524427700.00 ns, 524.4277 ms/op
WorkloadResult   3: 1 op, 524295400.00 ns, 524.2954 ms/op
WorkloadResult   4: 1 op, 534616000.00 ns, 534.6160 ms/op
WorkloadResult   5: 1 op, 534805800.00 ns, 534.8058 ms/op
WorkloadResult   6: 1 op, 522496100.00 ns, 522.4961 ms/op
WorkloadResult   7: 1 op, 527530800.00 ns, 527.5308 ms/op
WorkloadResult   8: 1 op, 522227500.00 ns, 522.2275 ms/op
WorkloadResult   9: 1 op, 531299600.00 ns, 531.2996 ms/op
WorkloadResult  10: 1 op, 521274700.00 ns, 521.2747 ms/op
WorkloadResult  11: 1 op, 528104200.00 ns, 528.1042 ms/op
WorkloadResult  12: 1 op, 518274200.00 ns, 518.2742 ms/op
WorkloadResult  13: 1 op, 525714800.00 ns, 525.7148 ms/op
WorkloadResult  14: 1 op, 522316200.00 ns, 522.3162 ms/op
WorkloadResult  15: 1 op, 528224600.00 ns, 528.2246 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 526.1751 ms, StdErr = 1.2339 ms (0.23%); N = 15, StdDev = 4.7788 ms
Min = 518.2742 ms, Q1 = 522.3162 ms, Median = 525.7148 ms, Q3 = 528.2246 ms, Max = 534.8058 ms
IQR = 5.9084 ms, LowerFence = 513.4536 ms, UpperFence = 537.0872 ms
ConfidenceInterval = [521.0663 ms; 531.2839 ms] (CI 99.9%), Margin = 5.1088 ms (0.97% of Mean)
Skewness = 0.37, Kurtosis = 2.11, MValue = 2

// **************************
// Benchmark: Array2AccessMethods.LinqAll: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0fbd8eb4-ab71-41a8-b0eb-563146d15e1a.dll" --benchmarkName "CSharpBenchmarks.Array2AccessMethods.LinqAll" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 5 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0fbd8eb4-ab71-41a8-b0eb-563146d15e1a\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-MSNYBN(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 468200.00 ns, 468.2000 us/op
WorkloadJitting  1: 1 op, 545728600.00 ns, 545.7286 ms/op

WorkloadWarmup   1: 1 op, 538813100.00 ns, 538.8131 ms/op
WorkloadWarmup   2: 1 op, 543443600.00 ns, 543.4436 ms/op
WorkloadWarmup   3: 1 op, 539054900.00 ns, 539.0549 ms/op
WorkloadWarmup   4: 1 op, 540301200.00 ns, 540.3012 ms/op
WorkloadWarmup   5: 1 op, 537104000.00 ns, 537.1040 ms/op
WorkloadWarmup   6: 1 op, 538037600.00 ns, 538.0376 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 543651900.00 ns, 543.6519 ms/op
WorkloadActual   2: 1 op, 541835400.00 ns, 541.8354 ms/op
WorkloadActual   3: 1 op, 539344500.00 ns, 539.3445 ms/op
WorkloadActual   4: 1 op, 540955200.00 ns, 540.9552 ms/op
WorkloadActual   5: 1 op, 538308600.00 ns, 538.3086 ms/op
WorkloadActual   6: 1 op, 538957000.00 ns, 538.9570 ms/op
WorkloadActual   7: 1 op, 537238700.00 ns, 537.2387 ms/op
WorkloadActual   8: 1 op, 554172200.00 ns, 554.1722 ms/op
WorkloadActual   9: 1 op, 546518800.00 ns, 546.5188 ms/op
WorkloadActual  10: 1 op, 540809600.00 ns, 540.8096 ms/op
WorkloadActual  11: 1 op, 540532500.00 ns, 540.5325 ms/op
WorkloadActual  12: 1 op, 541447000.00 ns, 541.4470 ms/op
WorkloadActual  13: 1 op, 541456000.00 ns, 541.4560 ms/op
WorkloadActual  14: 1 op, 554135100.00 ns, 554.1351 ms/op
WorkloadActual  15: 1 op, 545656600.00 ns, 545.6566 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 543651900.00 ns, 543.6519 ms/op
WorkloadResult   2: 1 op, 541835400.00 ns, 541.8354 ms/op
WorkloadResult   3: 1 op, 539344500.00 ns, 539.3445 ms/op
WorkloadResult   4: 1 op, 540955200.00 ns, 540.9552 ms/op
WorkloadResult   5: 1 op, 538308600.00 ns, 538.3086 ms/op
WorkloadResult   6: 1 op, 538957000.00 ns, 538.9570 ms/op
WorkloadResult   7: 1 op, 537238700.00 ns, 537.2387 ms/op
WorkloadResult   8: 1 op, 554172200.00 ns, 554.1722 ms/op
WorkloadResult   9: 1 op, 546518800.00 ns, 546.5188 ms/op
WorkloadResult  10: 1 op, 540809600.00 ns, 540.8096 ms/op
WorkloadResult  11: 1 op, 540532500.00 ns, 540.5325 ms/op
WorkloadResult  12: 1 op, 541447000.00 ns, 541.4470 ms/op
WorkloadResult  13: 1 op, 541456000.00 ns, 541.4560 ms/op
WorkloadResult  14: 1 op, 554135100.00 ns, 554.1351 ms/op
WorkloadResult  15: 1 op, 545656600.00 ns, 545.6566 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 543.0013 ms, StdErr = 1.3360 ms (0.25%); N = 15, StdDev = 5.1741 ms
Min = 537.2387 ms, Q1 = 539.3445 ms, Median = 541.4470 ms, Q3 = 545.6566 ms, Max = 554.1722 ms
IQR = 6.3121 ms, LowerFence = 529.8764 ms, UpperFence = 555.1248 ms
ConfidenceInterval = [537.4698 ms; 548.5327 ms] (CI 99.9%), Margin = 5.5315 ms (1.02% of Mean)
Skewness = 1.15, Kurtosis = 3.09, MValue = 2

// **************************
// Benchmark: Array2AccessMethods.LinqAny: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0fbd8eb4-ab71-41a8-b0eb-563146d15e1a.dll" --benchmarkName "CSharpBenchmarks.Array2AccessMethods.LinqAny" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 6 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0fbd8eb4-ab71-41a8-b0eb-563146d15e1a\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-DACNFP(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 749700.00 ns, 749.7000 us/op
WorkloadJitting  1: 1 op, 551177600.00 ns, 551.1776 ms/op

WorkloadWarmup   1: 1 op, 547199500.00 ns, 547.1995 ms/op
WorkloadWarmup   2: 1 op, 545511400.00 ns, 545.5114 ms/op
WorkloadWarmup   3: 1 op, 542863200.00 ns, 542.8632 ms/op
WorkloadWarmup   4: 1 op, 545773800.00 ns, 545.7738 ms/op
WorkloadWarmup   5: 1 op, 543332600.00 ns, 543.3326 ms/op
WorkloadWarmup   6: 1 op, 547077200.00 ns, 547.0772 ms/op
WorkloadWarmup   7: 1 op, 539880200.00 ns, 539.8802 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 543561600.00 ns, 543.5616 ms/op
WorkloadActual   2: 1 op, 539897300.00 ns, 539.8973 ms/op
WorkloadActual   3: 1 op, 545480900.00 ns, 545.4809 ms/op
WorkloadActual   4: 1 op, 542828700.00 ns, 542.8287 ms/op
WorkloadActual   5: 1 op, 546796500.00 ns, 546.7965 ms/op
WorkloadActual   6: 1 op, 541453400.00 ns, 541.4534 ms/op
WorkloadActual   7: 1 op, 551225700.00 ns, 551.2257 ms/op
WorkloadActual   8: 1 op, 545990000.00 ns, 545.9900 ms/op
WorkloadActual   9: 1 op, 543544500.00 ns, 543.5445 ms/op
WorkloadActual  10: 1 op, 551429500.00 ns, 551.4295 ms/op
WorkloadActual  11: 1 op, 542032600.00 ns, 542.0326 ms/op
WorkloadActual  12: 1 op, 548855100.00 ns, 548.8551 ms/op
WorkloadActual  13: 1 op, 551271300.00 ns, 551.2713 ms/op
WorkloadActual  14: 1 op, 553748300.00 ns, 553.7483 ms/op
WorkloadActual  15: 1 op, 554361900.00 ns, 554.3619 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 543561600.00 ns, 543.5616 ms/op
WorkloadResult   2: 1 op, 539897300.00 ns, 539.8973 ms/op
WorkloadResult   3: 1 op, 545480900.00 ns, 545.4809 ms/op
WorkloadResult   4: 1 op, 542828700.00 ns, 542.8287 ms/op
WorkloadResult   5: 1 op, 546796500.00 ns, 546.7965 ms/op
WorkloadResult   6: 1 op, 541453400.00 ns, 541.4534 ms/op
WorkloadResult   7: 1 op, 551225700.00 ns, 551.2257 ms/op
WorkloadResult   8: 1 op, 545990000.00 ns, 545.9900 ms/op
WorkloadResult   9: 1 op, 543544500.00 ns, 543.5445 ms/op
WorkloadResult  10: 1 op, 551429500.00 ns, 551.4295 ms/op
WorkloadResult  11: 1 op, 542032600.00 ns, 542.0326 ms/op
WorkloadResult  12: 1 op, 548855100.00 ns, 548.8551 ms/op
WorkloadResult  13: 1 op, 551271300.00 ns, 551.2713 ms/op
WorkloadResult  14: 1 op, 553748300.00 ns, 553.7483 ms/op
WorkloadResult  15: 1 op, 554361900.00 ns, 554.3619 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 546.8318 ms, StdErr = 1.2128 ms (0.22%); N = 15, StdDev = 4.6972 ms
Min = 539.8973 ms, Q1 = 542.8287 ms, Median = 545.9900 ms, Q3 = 551.2713 ms, Max = 554.3619 ms
IQR = 8.4426 ms, LowerFence = 530.1648 ms, UpperFence = 563.9352 ms
ConfidenceInterval = [541.8102 ms; 551.8534 ms] (CI 99.9%), Margin = 5.0216 ms (0.92% of Mean)
Skewness = 0.19, Kurtosis = 1.49, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
Could not overwrite file E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.Array2AccessMethods-report.csv. Exporting to E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.Array2AccessMethods-report-20190413-230903.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.Array2AccessMethods-report-20190413-230903.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.Array2AccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.Array2AccessMethods-report.html
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.Array2AccessMethods-report.txt

// * Detailed results *
Array2AccessMethods.ForCacheArray: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 450.2514 ms, StdErr = 0.6672 ms (0.15%); N = 15, StdDev = 2.5842 ms
Min = 447.4403 ms, Q1 = 448.0335 ms, Median = 449.8113 ms, Q3 = 453.0013 ms, Max = 454.5240 ms
IQR = 4.9678 ms, LowerFence = 440.5818 ms, UpperFence = 460.4530 ms
ConfidenceInterval = [447.4888 ms; 453.0140 ms] (CI 99.9%), Margin = 2.7626 ms (0.61% of Mean)
Skewness = 0.49, Kurtosis = 1.53, MValue = 2
-------------------- Histogram --------------------
[446.523 ms ; 455.441 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

Array2AccessMethods.For: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 448.9375 ms, StdErr = 0.3127 ms (0.07%); N = 14, StdDev = 1.1701 ms
Min = 447.0913 ms, Q1 = 448.0616 ms, Median = 449.0501 ms, Q3 = 449.9611 ms, Max = 450.3949 ms
IQR = 1.8995 ms, LowerFence = 445.2124 ms, UpperFence = 452.8104 ms
ConfidenceInterval = [447.6176 ms; 450.2575 ms] (CI 99.9%), Margin = 1.3200 ms (0.29% of Mean)
Skewness = -0.27, Kurtosis = 1.45, MValue = 2
-------------------- Histogram --------------------
[446.666 ms ; 450.820 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

Array2AccessMethods.ForEach: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 381.5146 ms, StdErr = 1.2116 ms (0.32%); N = 15, StdDev = 4.6925 ms
Min = 377.3435 ms, Q1 = 377.7217 ms, Median = 379.5571 ms, Q3 = 384.6239 ms, Max = 391.2040 ms
IQR = 6.9022 ms, LowerFence = 367.3684 ms, UpperFence = 394.9772 ms
ConfidenceInterval = [376.4981 ms; 386.5311 ms] (CI 99.9%), Margin = 5.0165 ms (1.31% of Mean)
Skewness = 0.93, Kurtosis = 2.42, MValue = 2
-------------------- Histogram --------------------
[375.679 ms ; 392.869 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

Array2AccessMethods.LinqAggregate: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 468.4138 ms, StdErr = 0.6533 ms (0.14%); N = 14, StdDev = 2.4443 ms
Min = 465.5927 ms, Q1 = 467.1809 ms, Median = 467.5288 ms, Q3 = 469.2118 ms, Max = 473.6565 ms
IQR = 2.0309 ms, LowerFence = 464.1346 ms, UpperFence = 472.2582 ms
ConfidenceInterval = [465.6565 ms; 471.1711 ms] (CI 99.9%), Margin = 2.7573 ms (0.59% of Mean)
Skewness = 1.02, Kurtosis = 2.86, MValue = 2
-------------------- Histogram --------------------
[464.705 ms ; 474.544 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

Array2AccessMethods.LinqSum: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 526.1751 ms, StdErr = 1.2339 ms (0.23%); N = 15, StdDev = 4.7788 ms
Min = 518.2742 ms, Q1 = 522.3162 ms, Median = 525.7148 ms, Q3 = 528.2246 ms, Max = 534.8058 ms
IQR = 5.9084 ms, LowerFence = 513.4536 ms, UpperFence = 537.0872 ms
ConfidenceInterval = [521.0663 ms; 531.2839 ms] (CI 99.9%), Margin = 5.1088 ms (0.97% of Mean)
Skewness = 0.37, Kurtosis = 2.11, MValue = 2
-------------------- Histogram --------------------
[517.623 ms ; 536.501 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

Array2AccessMethods.LinqAll: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 543.0013 ms, StdErr = 1.3360 ms (0.25%); N = 15, StdDev = 5.1741 ms
Min = 537.2387 ms, Q1 = 539.3445 ms, Median = 541.4470 ms, Q3 = 545.6566 ms, Max = 554.1722 ms
IQR = 6.3121 ms, LowerFence = 529.8764 ms, UpperFence = 555.1248 ms
ConfidenceInterval = [537.4698 ms; 548.5327 ms] (CI 99.9%), Margin = 5.5315 ms (1.02% of Mean)
Skewness = 1.15, Kurtosis = 3.09, MValue = 2
-------------------- Histogram --------------------
[535.403 ms ; 556.008 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

Array2AccessMethods.LinqAny: Job-OSBOAB(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 546.8318 ms, StdErr = 1.2128 ms (0.22%); N = 15, StdDev = 4.6972 ms
Min = 539.8973 ms, Q1 = 542.8287 ms, Median = 545.9900 ms, Q3 = 551.2713 ms, Max = 554.3619 ms
IQR = 8.4426 ms, LowerFence = 530.1648 ms, UpperFence = 563.9352 ms
ConfidenceInterval = [541.8102 ms; 551.8534 ms] (CI 99.9%), Margin = 5.0216 ms (0.92% of Mean)
Skewness = 0.19, Kurtosis = 1.49, MValue = 2
-------------------- Histogram --------------------
[538.231 ms ; 556.028 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host]     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  Job-OSBOAB : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Jit=RyuJit  Platform=X64  Server=True  

|        Method |     Mean |    Error |   StdDev | Ratio |
|-------------- |---------:|---------:|---------:|------:|
| ForCacheArray | 450.3 ms | 2.763 ms | 2.584 ms |  1.00 |
|           For | 448.9 ms | 1.320 ms | 1.170 ms |  1.00 |
|       ForEach | 381.5 ms | 5.017 ms | 4.692 ms |  0.85 |
| LinqAggregate | 468.4 ms | 2.757 ms | 2.444 ms |  1.04 |
|       LinqSum | 526.2 ms | 5.109 ms | 4.779 ms |  1.17 |
|       LinqAll | 543.0 ms | 5.531 ms | 5.174 ms |  1.21 |
|       LinqAny | 546.8 ms | 5.022 ms | 4.697 ms |  1.21 |

// * Hints *
Outliers
  Array2AccessMethods.For: Jit=RyuJit, Platform=X64, Server=True           -> 1 outlier  was  removed (470.65 ms)
  Array2AccessMethods.LinqAggregate: Jit=RyuJit, Platform=X64, Server=True -> 1 outlier  was  removed (492.08 ms)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  Ratio  : Mean of the ratio distribution ([Current]/[Baseline])
  1 ms   : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:01:22 (82.88 sec), executed benchmarks: 7

Global total time: 00:01:28 (88.24 sec), executed benchmarks: 7
// * Artifacts cleanup *
