// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\e268f720-51c5-448a-8013-fd08339aabca
// command took 2,05s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\e268f720-51c5-448a-8013-fd08339aabca
// command took 3,13s and exited with 0
// ***** Done, took 00:00:05 (5.34 sec)   *****
// Found 2 benchmarks:
//   ArrayAccessMethods.ForCacheArray: Job-EDSYVA(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
//   ArrayAccessMethods.LinqSum: Job-EDSYVA(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ArrayAccessMethods.ForCacheArray: Job-EDSYVA(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e268f720-51c5-448a-8013-fd08339aabca.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.ForCacheArray" --job "Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 0 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\e268f720-51c5-448a-8013-fd08339aabca\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-DEGNGB(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 479200.00 ns, 479.2000 us/op
WorkloadJitting  1: 1 op, 2896494500.00 ns, 2.8965 s/op

OverheadWarmup   1: 2 op, 4200.00 ns, 2.1000 us/op
OverheadWarmup   2: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   3: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   4: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   5: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   6: 2 op, 500.00 ns, 250.0000 ns/op

OverheadActual   1: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   2: 2 op, 800.00 ns, 400.0000 ns/op
OverheadActual   3: 2 op, 2200.00 ns, 1.1000 us/op
OverheadActual   4: 2 op, 100.00 ns, 50.0000 ns/op
OverheadActual   5: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   6: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   7: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   8: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   9: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual  10: 2 op, 100.00 ns, 50.0000 ns/op
OverheadActual  11: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  12: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual  13: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  14: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  15: 2 op, 600.00 ns, 300.0000 ns/op
OverheadActual  16: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  17: 2 op, 0.00 ns, 0.0000 ns/op
OverheadActual  18: 2 op, 600.00 ns, 300.0000 ns/op
OverheadActual  19: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  20: 2 op, 300.00 ns, 150.0000 ns/op

WorkloadWarmup   1: 2 op, 5642577100.00 ns, 2.8213 s/op

// BeforeActualRun
WorkloadActual   1: 2 op, 5671033100.00 ns, 2.8355 s/op
WorkloadActual   2: 2 op, 5663379900.00 ns, 2.8317 s/op
WorkloadActual   3: 2 op, 5665756300.00 ns, 2.8329 s/op
WorkloadActual   4: 2 op, 5662753400.00 ns, 2.8314 s/op
WorkloadActual   5: 2 op, 5737121900.00 ns, 2.8686 s/op
WorkloadActual   6: 2 op, 5792968400.00 ns, 2.8965 s/op
WorkloadActual   7: 2 op, 5675001800.00 ns, 2.8375 s/op
WorkloadActual   8: 2 op, 5659122200.00 ns, 2.8296 s/op
WorkloadActual   9: 2 op, 5663238600.00 ns, 2.8316 s/op
WorkloadActual  10: 2 op, 5636423200.00 ns, 2.8182 s/op

// AfterActualRun
WorkloadResult   1: 2 op, 5671032700.00 ns, 2.8355 s/op
WorkloadResult   2: 2 op, 5663379500.00 ns, 2.8317 s/op
WorkloadResult   3: 2 op, 5665755900.00 ns, 2.8329 s/op
WorkloadResult   4: 2 op, 5662753000.00 ns, 2.8314 s/op
WorkloadResult   5: 2 op, 5675001400.00 ns, 2.8375 s/op
WorkloadResult   6: 2 op, 5659121800.00 ns, 2.8296 s/op
WorkloadResult   7: 2 op, 5663238200.00 ns, 2.8316 s/op
WorkloadResult   8: 2 op, 5636422800.00 ns, 2.8182 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 2.8310 s, StdErr = 0.0020 s (0.07%); N = 8, StdDev = 0.0058 s
Min = 2.8182 s, Q1 = 2.8305 s, Median = 2.8317 s, Q3 = 2.8342 s, Max = 2.8375 s
IQR = 0.0037 s, LowerFence = 2.8249 s, UpperFence = 2.8398 s
ConfidenceInterval = [2.8200 s; 2.8421 s] (CI 99.9%), Margin = 0.0110 s (0.39% of Mean)
Skewness = -1.14, Kurtosis = 3.31, MValue = 2

// **************************
// Benchmark: ArrayAccessMethods.LinqSum: Job-EDSYVA(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e268f720-51c5-448a-8013-fd08339aabca.dll" --benchmarkName "CSharpBenchmarks.ArrayAccessMethods.LinqSum" --job "Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1" --benchmarkId 1 in E:\git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\e268f720-51c5-448a-8013-fd08339aabca\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-KSJHTW(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 488400.00 ns, 488.4000 us/op
WorkloadJitting  1: 1 op, 56691422100.00 ns, 56.6914 s/op

OverheadWarmup   1: 2 op, 3800.00 ns, 1.9000 us/op
OverheadWarmup   2: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   3: 2 op, 400.00 ns, 200.0000 ns/op
OverheadWarmup   4: 2 op, 300.00 ns, 150.0000 ns/op
OverheadWarmup   5: 2 op, 200.00 ns, 100.0000 ns/op
OverheadWarmup   6: 2 op, 1900.00 ns, 950.0000 ns/op
OverheadWarmup   7: 2 op, 200.00 ns, 100.0000 ns/op

OverheadActual   1: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   2: 2 op, 500.00 ns, 250.0000 ns/op
OverheadActual   3: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual   4: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   5: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   6: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   7: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual   8: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual   9: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  10: 2 op, 1900.00 ns, 950.0000 ns/op
OverheadActual  11: 2 op, 400.00 ns, 200.0000 ns/op
OverheadActual  12: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  13: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  14: 2 op, 600.00 ns, 300.0000 ns/op
OverheadActual  15: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  16: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  17: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  18: 2 op, 200.00 ns, 100.0000 ns/op
OverheadActual  19: 2 op, 300.00 ns, 150.0000 ns/op
OverheadActual  20: 2 op, 400.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 2 op, 115849629800.00 ns, 57.9248 s/op

// BeforeActualRun
WorkloadActual   1: 2 op, 113174476300.00 ns, 56.5872 s/op
WorkloadActual   2: 2 op, 113344724500.00 ns, 56.6724 s/op
WorkloadActual   3: 2 op, 114005808900.00 ns, 57.0029 s/op
WorkloadActual   4: 2 op, 113419853600.00 ns, 56.7099 s/op
WorkloadActual   5: 2 op, 113125831600.00 ns, 56.5629 s/op
WorkloadActual   6: 2 op, 113146207800.00 ns, 56.5731 s/op
WorkloadActual   7: 2 op, 113262794300.00 ns, 56.6314 s/op
WorkloadActual   8: 2 op, 113340705700.00 ns, 56.6704 s/op
WorkloadActual   9: 2 op, 114013379500.00 ns, 57.0067 s/op
WorkloadActual  10: 2 op, 114738716100.00 ns, 57.3694 s/op

// AfterActualRun
WorkloadResult   1: 2 op, 113174475950.00 ns, 56.5872 s/op
WorkloadResult   2: 2 op, 113344724150.00 ns, 56.6724 s/op
WorkloadResult   3: 2 op, 114005808550.00 ns, 57.0029 s/op
WorkloadResult   4: 2 op, 113419853250.00 ns, 56.7099 s/op
WorkloadResult   5: 2 op, 113125831250.00 ns, 56.5629 s/op
WorkloadResult   6: 2 op, 113146207450.00 ns, 56.5731 s/op
WorkloadResult   7: 2 op, 113262793950.00 ns, 56.6314 s/op
WorkloadResult   8: 2 op, 113340705350.00 ns, 56.6704 s/op
WorkloadResult   9: 2 op, 114013379150.00 ns, 57.0067 s/op
WorkloadResult  10: 2 op, 114738715750.00 ns, 57.3694 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 56.7786 s, StdErr = 0.0834 s (0.15%); N = 10, StdDev = 0.2638 s
Min = 56.5629 s, Q1 = 56.5872 s, Median = 56.6714 s, Q3 = 57.0029 s, Max = 57.3694 s
IQR = 0.4157 s, LowerFence = 55.9637 s, UpperFence = 57.6264 s
ConfidenceInterval = [56.3799 s; 57.1774 s] (CI 99.9%), Margin = 0.3988 s (0.70% of Mean)
Skewness = 1.08, Kurtosis = 2.75, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ArrayAccessMethods-report.html

// * Detailed results *
ArrayAccessMethods.ForCacheArray: Job-EDSYVA(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 2.8310 s, StdErr = 0.0020 s (0.07%); N = 8, StdDev = 0.0058 s
Min = 2.8182 s, Q1 = 2.8305 s, Median = 2.8317 s, Q3 = 2.8342 s, Max = 2.8375 s
IQR = 0.0037 s, LowerFence = 2.8249 s, UpperFence = 2.8398 s
ConfidenceInterval = [2.8200 s; 2.8421 s] (CI 99.9%), Margin = 0.0110 s (0.39% of Mean)
Skewness = -1.14, Kurtosis = 3.31, MValue = 2
-------------------- Histogram --------------------
[2.816 s ; 2.840 s) | @@@@@@@@
---------------------------------------------------

ArrayAccessMethods.LinqSum: Job-EDSYVA(Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 56.7786 s, StdErr = 0.0834 s (0.15%); N = 10, StdDev = 0.2638 s
Min = 56.5629 s, Q1 = 56.5872 s, Median = 56.6714 s, Q3 = 57.0029 s, Max = 57.3694 s
IQR = 0.4157 s, LowerFence = 55.9637 s, UpperFence = 57.6264 s
ConfidenceInterval = [56.3799 s; 57.1774 s] (CI 99.9%), Margin = 0.3988 s (0.70% of Mean)
Skewness = 1.08, Kurtosis = 2.75, MValue = 2
-------------------- Histogram --------------------
[56.456 s ; 57.476 s) | @@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host]     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  Job-EDSYVA : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Server=True  InvocationCount=2  IterationCount=10  
LaunchCount=1  RunStrategy=Throughput  UnrollFactor=1  
WarmupCount=1  

|        Method |     Mean |    Error |   StdDev | Ratio | RatioSD |
|-------------- |---------:|---------:|---------:|------:|--------:|
| ForCacheArray |  2.831 s | 0.0110 s | 0.0058 s |  1.00 |    0.00 |
|       LinqSum | 56.779 s | 0.3988 s | 0.2638 s | 20.02 |    0.07 |

// * Hints *
Outliers
  ArrayAccessMethods.ForCacheArray: Server=True, InvocationCount=2, IterationCount=10, LaunchCount=1, RunStrategy=Throughput, UnrollFactor=1, WarmupCount=1 -> 2 outliers were removed, 3 outliers were detected (2.82 s, 2.87 s, 2.90 s)

// * Legends *
  Mean    : Arithmetic mean of all measurements
  Error   : Half of 99.9% confidence interval
  StdDev  : Standard deviation of all measurements
  Ratio   : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD : Standard deviation of the ratio distribution ([Current]/[Baseline])
  1 s     : 1 Second (1 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:22:55 (1375.72 sec), executed benchmarks: 2

Global total time: 00:23:01 (1381.07 sec), executed benchmarks: 2
// * Artifacts cleanup *
