// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\c09b30c4-8049-4e66-a08d-be8db219afb1
// command took 2,17s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\c09b30c4-8049-4e66-a08d-be8db219afb1
// command took 3,1s and exited with 0
// ***** Done, took 00:00:05 (5.29 sec)   *****
// Found 2 benchmarks:
//   ReflectionGetAndSetMethods.FuncAndAction: Job-SOBDEY(Jit=RyuJit, Platform=X64, Server=True)
//   ReflectionGetAndSetMethods.Reflection: Job-SOBDEY(Jit=RyuJit, Platform=X64, Server=True)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ReflectionGetAndSetMethods.FuncAndAction: Job-SOBDEY(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "c09b30c4-8049-4e66-a08d-be8db219afb1.dll" --benchmarkName "CSharpBenchmarks.ReflectionGetAndSetMethods.FuncAndAction" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 0 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\c09b30c4-8049-4e66-a08d-be8db219afb1\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-FNZOGZ(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 585000.00 ns, 585.0000 us/op
WorkloadJitting  1: 1 op, 29764100.00 ns, 29.7641 ms/op

OverheadJitting  2: 16 op, 2128000.00 ns, 133.0000 us/op
WorkloadJitting  2: 16 op, 458320500.00 ns, 28.6450 ms/op

WorkloadPilot    1: 16 op, 458787700.00 ns, 28.6742 ms/op
WorkloadPilot    2: 32 op, 926460700.00 ns, 28.9519 ms/op

OverheadWarmup   1: 32 op, 6500.00 ns, 203.1250 ns/op
OverheadWarmup   2: 32 op, 800.00 ns, 25.0000 ns/op
OverheadWarmup   3: 32 op, 900.00 ns, 28.1250 ns/op
OverheadWarmup   4: 32 op, 2500.00 ns, 78.1250 ns/op
OverheadWarmup   5: 32 op, 1000.00 ns, 31.2500 ns/op
OverheadWarmup   6: 32 op, 1300.00 ns, 40.6250 ns/op
OverheadWarmup   7: 32 op, 600.00 ns, 18.7500 ns/op

OverheadActual   1: 32 op, 600.00 ns, 18.7500 ns/op
OverheadActual   2: 32 op, 1300.00 ns, 40.6250 ns/op
OverheadActual   3: 32 op, 2600.00 ns, 81.2500 ns/op
OverheadActual   4: 32 op, 1400.00 ns, 43.7500 ns/op
OverheadActual   5: 32 op, 900.00 ns, 28.1250 ns/op
OverheadActual   6: 32 op, 1300.00 ns, 40.6250 ns/op
OverheadActual   7: 32 op, 500.00 ns, 15.6250 ns/op
OverheadActual   8: 32 op, 900.00 ns, 28.1250 ns/op
OverheadActual   9: 32 op, 600.00 ns, 18.7500 ns/op
OverheadActual  10: 32 op, 1200.00 ns, 37.5000 ns/op
OverheadActual  11: 32 op, 1400.00 ns, 43.7500 ns/op
OverheadActual  12: 32 op, 1300.00 ns, 40.6250 ns/op
OverheadActual  13: 32 op, 600.00 ns, 18.7500 ns/op
OverheadActual  14: 32 op, 1300.00 ns, 40.6250 ns/op
OverheadActual  15: 32 op, 500.00 ns, 15.6250 ns/op
OverheadActual  16: 32 op, 500.00 ns, 15.6250 ns/op
OverheadActual  17: 32 op, 900.00 ns, 28.1250 ns/op
OverheadActual  18: 32 op, 700.00 ns, 21.8750 ns/op
OverheadActual  19: 32 op, 700.00 ns, 21.8750 ns/op
OverheadActual  20: 32 op, 800.00 ns, 25.0000 ns/op

WorkloadWarmup   1: 32 op, 920264800.00 ns, 28.7583 ms/op
WorkloadWarmup   2: 32 op, 909956400.00 ns, 28.4361 ms/op
WorkloadWarmup   3: 32 op, 908706200.00 ns, 28.3971 ms/op
WorkloadWarmup   4: 32 op, 908963300.00 ns, 28.4051 ms/op
WorkloadWarmup   5: 32 op, 906725600.00 ns, 28.3352 ms/op
WorkloadWarmup   6: 32 op, 920078600.00 ns, 28.7525 ms/op
WorkloadWarmup   7: 32 op, 916796300.00 ns, 28.6499 ms/op

// BeforeActualRun
WorkloadActual   1: 32 op, 925135800.00 ns, 28.9105 ms/op
WorkloadActual   2: 32 op, 916849500.00 ns, 28.6515 ms/op
WorkloadActual   3: 32 op, 908736500.00 ns, 28.3980 ms/op
WorkloadActual   4: 32 op, 915592800.00 ns, 28.6123 ms/op
WorkloadActual   5: 32 op, 934404700.00 ns, 29.2001 ms/op
WorkloadActual   6: 32 op, 938057500.00 ns, 29.3143 ms/op
WorkloadActual   7: 32 op, 910119600.00 ns, 28.4412 ms/op
WorkloadActual   8: 32 op, 911773400.00 ns, 28.4929 ms/op
WorkloadActual   9: 32 op, 920306500.00 ns, 28.7596 ms/op
WorkloadActual  10: 32 op, 919838800.00 ns, 28.7450 ms/op
WorkloadActual  11: 32 op, 906843600.00 ns, 28.3389 ms/op
WorkloadActual  12: 32 op, 909714600.00 ns, 28.4286 ms/op
WorkloadActual  13: 32 op, 906009400.00 ns, 28.3128 ms/op
WorkloadActual  14: 32 op, 905298500.00 ns, 28.2906 ms/op
WorkloadActual  15: 32 op, 935172700.00 ns, 29.2241 ms/op

// AfterActualRun
WorkloadResult   1: 32 op, 925134900.00 ns, 28.9105 ms/op
WorkloadResult   2: 32 op, 916848600.00 ns, 28.6515 ms/op
WorkloadResult   3: 32 op, 908735600.00 ns, 28.3980 ms/op
WorkloadResult   4: 32 op, 915591900.00 ns, 28.6122 ms/op
WorkloadResult   5: 32 op, 934403800.00 ns, 29.2001 ms/op
WorkloadResult   6: 32 op, 938056600.00 ns, 29.3143 ms/op
WorkloadResult   7: 32 op, 910118700.00 ns, 28.4412 ms/op
WorkloadResult   8: 32 op, 911772500.00 ns, 28.4929 ms/op
WorkloadResult   9: 32 op, 920305600.00 ns, 28.7596 ms/op
WorkloadResult  10: 32 op, 919837900.00 ns, 28.7449 ms/op
WorkloadResult  11: 32 op, 906842700.00 ns, 28.3388 ms/op
WorkloadResult  12: 32 op, 909713700.00 ns, 28.4286 ms/op
WorkloadResult  13: 32 op, 906008500.00 ns, 28.3128 ms/op
WorkloadResult  14: 32 op, 905297600.00 ns, 28.2906 ms/op
WorkloadResult  15: 32 op, 935171800.00 ns, 29.2241 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 28.6747 ms, StdErr = 0.0893 ms (0.31%); N = 15, StdDev = 0.3459 ms
Min = 28.2906 ms, Q1 = 28.3980 ms, Median = 28.6122 ms, Q3 = 28.9105 ms, Max = 29.3143 ms
IQR = 0.5125 ms, LowerFence = 27.6293 ms, UpperFence = 29.6792 ms
ConfidenceInterval = [28.3049 ms; 29.0445 ms] (CI 99.9%), Margin = 0.3698 ms (1.29% of Mean)
Skewness = 0.63, Kurtosis = 1.88, MValue = 2

// **************************
// Benchmark: ReflectionGetAndSetMethods.Reflection: Job-SOBDEY(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "c09b30c4-8049-4e66-a08d-be8db219afb1.dll" --benchmarkName "CSharpBenchmarks.ReflectionGetAndSetMethods.Reflection" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 1 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\c09b30c4-8049-4e66-a08d-be8db219afb1\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-PAZITE(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 537900.00 ns, 537.9000 us/op
WorkloadJitting  1: 1 op, 1161480200.00 ns, 1.1615 s/op

WorkloadWarmup   1: 1 op, 1142481500.00 ns, 1.1425 s/op
WorkloadWarmup   2: 1 op, 1118698000.00 ns, 1.1187 s/op
WorkloadWarmup   3: 1 op, 1118018400.00 ns, 1.1180 s/op
WorkloadWarmup   4: 1 op, 1107475700.00 ns, 1.1075 s/op
WorkloadWarmup   5: 1 op, 1122576100.00 ns, 1.1226 s/op
WorkloadWarmup   6: 1 op, 1114185400.00 ns, 1.1142 s/op
WorkloadWarmup   7: 1 op, 1127365900.00 ns, 1.1274 s/op
WorkloadWarmup   8: 1 op, 1126279100.00 ns, 1.1263 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 1123078600.00 ns, 1.1231 s/op
WorkloadActual   2: 1 op, 1119393800.00 ns, 1.1194 s/op
WorkloadActual   3: 1 op, 1111395900.00 ns, 1.1114 s/op
WorkloadActual   4: 1 op, 1132378800.00 ns, 1.1324 s/op
WorkloadActual   5: 1 op, 1099848800.00 ns, 1.0998 s/op
WorkloadActual   6: 1 op, 1120296300.00 ns, 1.1203 s/op
WorkloadActual   7: 1 op, 1105383700.00 ns, 1.1054 s/op
WorkloadActual   8: 1 op, 1112062700.00 ns, 1.1121 s/op
WorkloadActual   9: 1 op, 1112914000.00 ns, 1.1129 s/op
WorkloadActual  10: 1 op, 1120050100.00 ns, 1.1201 s/op
WorkloadActual  11: 1 op, 1118461700.00 ns, 1.1185 s/op
WorkloadActual  12: 1 op, 1093601600.00 ns, 1.0936 s/op
WorkloadActual  13: 1 op, 1107753700.00 ns, 1.1078 s/op
WorkloadActual  14: 1 op, 1114965200.00 ns, 1.1150 s/op
WorkloadActual  15: 1 op, 1109649600.00 ns, 1.1096 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 1123078600.00 ns, 1.1231 s/op
WorkloadResult   2: 1 op, 1119393800.00 ns, 1.1194 s/op
WorkloadResult   3: 1 op, 1111395900.00 ns, 1.1114 s/op
WorkloadResult   4: 1 op, 1132378800.00 ns, 1.1324 s/op
WorkloadResult   5: 1 op, 1099848800.00 ns, 1.0998 s/op
WorkloadResult   6: 1 op, 1120296300.00 ns, 1.1203 s/op
WorkloadResult   7: 1 op, 1105383700.00 ns, 1.1054 s/op
WorkloadResult   8: 1 op, 1112062700.00 ns, 1.1121 s/op
WorkloadResult   9: 1 op, 1112914000.00 ns, 1.1129 s/op
WorkloadResult  10: 1 op, 1120050100.00 ns, 1.1201 s/op
WorkloadResult  11: 1 op, 1118461700.00 ns, 1.1185 s/op
WorkloadResult  12: 1 op, 1093601600.00 ns, 1.0936 s/op
WorkloadResult  13: 1 op, 1107753700.00 ns, 1.1078 s/op
WorkloadResult  14: 1 op, 1114965200.00 ns, 1.1150 s/op
WorkloadResult  15: 1 op, 1109649600.00 ns, 1.1096 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 1.1134 s, StdErr = 0.0025 s (0.22%); N = 15, StdDev = 0.0096 s
Min = 1.0936 s, Q1 = 1.1078 s, Median = 1.1129 s, Q3 = 1.1201 s, Max = 1.1324 s
IQR = 0.0123 s, LowerFence = 1.0893 s, UpperFence = 1.1385 s
ConfidenceInterval = [1.1031 s; 1.1237 s] (CI 99.9%), Margin = 0.0103 s (0.93% of Mean)
Skewness = -0.18, Kurtosis = 2.6, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ReflectionGetAndSetMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ReflectionGetAndSetMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ReflectionGetAndSetMethods-report.html

// * Detailed results *
ReflectionGetAndSetMethods.FuncAndAction: Job-SOBDEY(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 28.6747 ms, StdErr = 0.0893 ms (0.31%); N = 15, StdDev = 0.3459 ms
Min = 28.2906 ms, Q1 = 28.3980 ms, Median = 28.6122 ms, Q3 = 28.9105 ms, Max = 29.3143 ms
IQR = 0.5125 ms, LowerFence = 27.6293 ms, UpperFence = 29.6792 ms
ConfidenceInterval = [28.3049 ms; 29.0445 ms] (CI 99.9%), Margin = 0.3698 ms (1.29% of Mean)
Skewness = 0.63, Kurtosis = 1.88, MValue = 2
-------------------- Histogram --------------------
[28.168 ms ; 29.437 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

ReflectionGetAndSetMethods.Reflection: Job-SOBDEY(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 1.1134 s, StdErr = 0.0025 s (0.22%); N = 15, StdDev = 0.0096 s
Min = 1.0936 s, Q1 = 1.1078 s, Median = 1.1129 s, Q3 = 1.1201 s, Max = 1.1324 s
IQR = 0.0123 s, LowerFence = 1.0893 s, UpperFence = 1.1385 s
ConfidenceInterval = [1.1031 s; 1.1237 s] (CI 99.9%), Margin = 0.0103 s (0.93% of Mean)
Skewness = -0.18, Kurtosis = 2.6, MValue = 2
-------------------- Histogram --------------------
[1.090 s ; 1.136 s) | @@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host]     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  Job-SOBDEY : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Jit=RyuJit  Platform=X64  Server=True  

|        Method |        Mean |      Error |    StdDev | Ratio | RatioSD |
|-------------- |------------:|-----------:|----------:|------:|--------:|
| FuncAndAction |    28.67 ms |  0.3698 ms | 0.3459 ms |  1.00 |    0.00 |
|    Reflection | 1,113.42 ms | 10.3077 ms | 9.6418 ms | 38.83 |    0.55 |

// * Legends *
  Mean    : Arithmetic mean of all measurements
  Error   : Half of 99.9% confidence interval
  StdDev  : Standard deviation of all measurements
  Ratio   : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD : Standard deviation of the ratio distribution ([Current]/[Baseline])
  1 ms    : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:51 (51.76 sec), executed benchmarks: 2

Global total time: 00:00:57 (57.05 sec), executed benchmarks: 2
// * Artifacts cleanup *
