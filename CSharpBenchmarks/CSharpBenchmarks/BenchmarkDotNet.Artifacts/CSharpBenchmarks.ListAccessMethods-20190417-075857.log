// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 14 benchmark(s) in total *****
// ***** Building 2 exe(s) in Parallel: Start   *****
// ***** Done, took 00:00:18 (18.23 sec)   *****
// Found 14 benchmarks:
//   ListAccessMethods.ForSumCache: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.ForSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.ForEachSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.LinqAggregateSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.LinqSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.LinqAll: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.LinqAny: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
//   ListAccessMethods.ForSumCache: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.ForSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.ForEachSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqAggregateSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqAll: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
//   ListAccessMethods.LinqAny: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ListAccessMethods.ForSumCache: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0e55df1b-e8d5-4cc0-8567-0f9c727ef22b.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForSumCache" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 0 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0e55df1b-e8d5-4cc0-8567-0f9c727ef22b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-UUONIJ(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 446600.00 ns, 446.6000 us/op
WorkloadJitting  1: 1 op, 488175100.00 ns, 488.1751 ms/op

WorkloadWarmup   1: 1 op, 485320400.00 ns, 485.3204 ms/op
WorkloadWarmup   2: 1 op, 489841400.00 ns, 489.8414 ms/op
WorkloadWarmup   3: 1 op, 488304100.00 ns, 488.3041 ms/op
WorkloadWarmup   4: 1 op, 489474600.00 ns, 489.4746 ms/op
WorkloadWarmup   5: 1 op, 485470300.00 ns, 485.4703 ms/op
WorkloadWarmup   6: 1 op, 486034400.00 ns, 486.0344 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 486273400.00 ns, 486.2734 ms/op
WorkloadActual   2: 1 op, 485707500.00 ns, 485.7075 ms/op
WorkloadActual   3: 1 op, 487123200.00 ns, 487.1232 ms/op
WorkloadActual   4: 1 op, 485897900.00 ns, 485.8979 ms/op
WorkloadActual   5: 1 op, 484499400.00 ns, 484.4994 ms/op
WorkloadActual   6: 1 op, 484729100.00 ns, 484.7291 ms/op
WorkloadActual   7: 1 op, 494225700.00 ns, 494.2257 ms/op
WorkloadActual   8: 1 op, 487312700.00 ns, 487.3127 ms/op
WorkloadActual   9: 1 op, 487281600.00 ns, 487.2816 ms/op
WorkloadActual  10: 1 op, 484574900.00 ns, 484.5749 ms/op
WorkloadActual  11: 1 op, 485319800.00 ns, 485.3198 ms/op
WorkloadActual  12: 1 op, 484603500.00 ns, 484.6035 ms/op
WorkloadActual  13: 1 op, 493648900.00 ns, 493.6489 ms/op
WorkloadActual  14: 1 op, 484438000.00 ns, 484.4380 ms/op
WorkloadActual  15: 1 op, 493530600.00 ns, 493.5306 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 486273400.00 ns, 486.2734 ms/op
WorkloadResult   2: 1 op, 485707500.00 ns, 485.7075 ms/op
WorkloadResult   3: 1 op, 487123200.00 ns, 487.1232 ms/op
WorkloadResult   4: 1 op, 485897900.00 ns, 485.8979 ms/op
WorkloadResult   5: 1 op, 484499400.00 ns, 484.4994 ms/op
WorkloadResult   6: 1 op, 484729100.00 ns, 484.7291 ms/op
WorkloadResult   7: 1 op, 487312700.00 ns, 487.3127 ms/op
WorkloadResult   8: 1 op, 487281600.00 ns, 487.2816 ms/op
WorkloadResult   9: 1 op, 484574900.00 ns, 484.5749 ms/op
WorkloadResult  10: 1 op, 485319800.00 ns, 485.3198 ms/op
WorkloadResult  11: 1 op, 484603500.00 ns, 484.6035 ms/op
WorkloadResult  12: 1 op, 484438000.00 ns, 484.4380 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 485.6468 ms, StdErr = 0.3263 ms (0.07%); N = 12, StdDev = 1.1302 ms
Min = 484.4380 ms, Q1 = 484.5892 ms, Median = 485.5137 ms, Q3 = 486.6983 ms, Max = 487.3127 ms
IQR = 2.1091 ms, LowerFence = 481.4256 ms, UpperFence = 489.8620 ms
ConfidenceInterval = [484.1991 ms; 487.0944 ms] (CI 99.9%), Margin = 1.4476 ms (0.30% of Mean)
Skewness = 0.35, Kurtosis = 1.37, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0e55df1b-e8d5-4cc0-8567-0f9c727ef22b.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForSum" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 1 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0e55df1b-e8d5-4cc0-8567-0f9c727ef22b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-UDFPCC(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 474900.00 ns, 474.9000 us/op
WorkloadJitting  1: 1 op, 727076900.00 ns, 727.0769 ms/op

WorkloadWarmup   1: 1 op, 719444800.00 ns, 719.4448 ms/op
WorkloadWarmup   2: 1 op, 721669400.00 ns, 721.6694 ms/op
WorkloadWarmup   3: 1 op, 719785500.00 ns, 719.7855 ms/op
WorkloadWarmup   4: 1 op, 719433900.00 ns, 719.4339 ms/op
WorkloadWarmup   5: 1 op, 720579100.00 ns, 720.5791 ms/op
WorkloadWarmup   6: 1 op, 730567000.00 ns, 730.5670 ms/op
WorkloadWarmup   7: 1 op, 720950300.00 ns, 720.9503 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 719775600.00 ns, 719.7756 ms/op
WorkloadActual   2: 1 op, 720525100.00 ns, 720.5251 ms/op
WorkloadActual   3: 1 op, 719272500.00 ns, 719.2725 ms/op
WorkloadActual   4: 1 op, 724399600.00 ns, 724.3996 ms/op
WorkloadActual   5: 1 op, 719664700.00 ns, 719.6647 ms/op
WorkloadActual   6: 1 op, 720808300.00 ns, 720.8083 ms/op
WorkloadActual   7: 1 op, 721706400.00 ns, 721.7064 ms/op
WorkloadActual   8: 1 op, 721519200.00 ns, 721.5192 ms/op
WorkloadActual   9: 1 op, 723029400.00 ns, 723.0294 ms/op
WorkloadActual  10: 1 op, 720143600.00 ns, 720.1436 ms/op
WorkloadActual  11: 1 op, 722291700.00 ns, 722.2917 ms/op
WorkloadActual  12: 1 op, 720830700.00 ns, 720.8307 ms/op
WorkloadActual  13: 1 op, 720040300.00 ns, 720.0403 ms/op
WorkloadActual  14: 1 op, 721117600.00 ns, 721.1176 ms/op
WorkloadActual  15: 1 op, 720751800.00 ns, 720.7518 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 719775600.00 ns, 719.7756 ms/op
WorkloadResult   2: 1 op, 720525100.00 ns, 720.5251 ms/op
WorkloadResult   3: 1 op, 719272500.00 ns, 719.2725 ms/op
WorkloadResult   4: 1 op, 719664700.00 ns, 719.6647 ms/op
WorkloadResult   5: 1 op, 720808300.00 ns, 720.8083 ms/op
WorkloadResult   6: 1 op, 721706400.00 ns, 721.7064 ms/op
WorkloadResult   7: 1 op, 721519200.00 ns, 721.5192 ms/op
WorkloadResult   8: 1 op, 723029400.00 ns, 723.0294 ms/op
WorkloadResult   9: 1 op, 720143600.00 ns, 720.1436 ms/op
WorkloadResult  10: 1 op, 722291700.00 ns, 722.2917 ms/op
WorkloadResult  11: 1 op, 720830700.00 ns, 720.8307 ms/op
WorkloadResult  12: 1 op, 720040300.00 ns, 720.0403 ms/op
WorkloadResult  13: 1 op, 721117600.00 ns, 721.1176 ms/op
WorkloadResult  14: 1 op, 720751800.00 ns, 720.7518 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 720.8198 ms, StdErr = 0.2812 ms (0.04%); N = 14, StdDev = 1.0520 ms
Min = 719.2725 ms, Q1 = 720.0403 ms, Median = 720.7801 ms, Q3 = 721.5192 ms, Max = 723.0294 ms
IQR = 1.4789 ms, LowerFence = 717.8220 ms, UpperFence = 723.7376 ms
ConfidenceInterval = [719.6330 ms; 722.0065 ms] (CI 99.9%), Margin = 1.1868 ms (0.16% of Mean)
Skewness = 0.48, Kurtosis = 2.26, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForEachSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0e55df1b-e8d5-4cc0-8567-0f9c727ef22b.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForEachSum" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 2 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0e55df1b-e8d5-4cc0-8567-0f9c727ef22b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-CYWVOZ(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 461500.00 ns, 461.5000 us/op
WorkloadJitting  1: 1 op, 2001848600.00 ns, 2.0018 s/op

WorkloadWarmup   1: 1 op, 1997271700.00 ns, 1.9973 s/op
WorkloadWarmup   2: 1 op, 1999040500.00 ns, 1.9990 s/op
WorkloadWarmup   3: 1 op, 1994166500.00 ns, 1.9942 s/op
WorkloadWarmup   4: 1 op, 1996999400.00 ns, 1.9970 s/op
WorkloadWarmup   5: 1 op, 2007701700.00 ns, 2.0077 s/op
WorkloadWarmup   6: 1 op, 2008974000.00 ns, 2.0090 s/op
WorkloadWarmup   7: 1 op, 2017672500.00 ns, 2.0177 s/op
WorkloadWarmup   8: 1 op, 1997755500.00 ns, 1.9978 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 1997495800.00 ns, 1.9975 s/op
WorkloadActual   2: 1 op, 1997212200.00 ns, 1.9972 s/op
WorkloadActual   3: 1 op, 1992024700.00 ns, 1.9920 s/op
WorkloadActual   4: 1 op, 1996374300.00 ns, 1.9964 s/op
WorkloadActual   5: 1 op, 1996058200.00 ns, 1.9961 s/op
WorkloadActual   6: 1 op, 1993325000.00 ns, 1.9933 s/op
WorkloadActual   7: 1 op, 2076547200.00 ns, 2.0765 s/op
WorkloadActual   8: 1 op, 2013399000.00 ns, 2.0134 s/op
WorkloadActual   9: 1 op, 2025779300.00 ns, 2.0258 s/op
WorkloadActual  10: 1 op, 1998258500.00 ns, 1.9983 s/op
WorkloadActual  11: 1 op, 1992915300.00 ns, 1.9929 s/op
WorkloadActual  12: 1 op, 1992462900.00 ns, 1.9925 s/op
WorkloadActual  13: 1 op, 2001142400.00 ns, 2.0011 s/op
WorkloadActual  14: 1 op, 1992332300.00 ns, 1.9923 s/op
WorkloadActual  15: 1 op, 1992661300.00 ns, 1.9927 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 1997495800.00 ns, 1.9975 s/op
WorkloadResult   2: 1 op, 1997212200.00 ns, 1.9972 s/op
WorkloadResult   3: 1 op, 1992024700.00 ns, 1.9920 s/op
WorkloadResult   4: 1 op, 1996374300.00 ns, 1.9964 s/op
WorkloadResult   5: 1 op, 1996058200.00 ns, 1.9961 s/op
WorkloadResult   6: 1 op, 1993325000.00 ns, 1.9933 s/op
WorkloadResult   7: 1 op, 2013399000.00 ns, 2.0134 s/op
WorkloadResult   8: 1 op, 1998258500.00 ns, 1.9983 s/op
WorkloadResult   9: 1 op, 1992915300.00 ns, 1.9929 s/op
WorkloadResult  10: 1 op, 1992462900.00 ns, 1.9925 s/op
WorkloadResult  11: 1 op, 2001142400.00 ns, 2.0011 s/op
WorkloadResult  12: 1 op, 1992332300.00 ns, 1.9923 s/op
WorkloadResult  13: 1 op, 1992661300.00 ns, 1.9927 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 1.9966 s, StdErr = 0.0016 s (0.08%); N = 13, StdDev = 0.0058 s
Min = 1.9920 s, Q1 = 1.9926 s, Median = 1.9961 s, Q3 = 1.9979 s, Max = 2.0134 s
IQR = 0.0053 s, LowerFence = 1.9846 s, UpperFence = 2.0058 s
ConfidenceInterval = [1.9896 s; 2.0035 s] (CI 99.9%), Margin = 0.0069 s (0.35% of Mean)
Skewness = 1.76, Kurtosis = 5.58, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAggregateSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0e55df1b-e8d5-4cc0-8567-0f9c727ef22b.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAggregateSum" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 3 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0e55df1b-e8d5-4cc0-8567-0f9c727ef22b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-ATCYHK(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 486600.00 ns, 486.6000 us/op
WorkloadJitting  1: 1 op, 5634844600.00 ns, 5.6348 s/op

WorkloadWarmup   1: 1 op, 5628089200.00 ns, 5.6281 s/op
WorkloadWarmup   2: 1 op, 5690334300.00 ns, 5.6903 s/op
WorkloadWarmup   3: 1 op, 5726029700.00 ns, 5.7260 s/op
WorkloadWarmup   4: 1 op, 5731324000.00 ns, 5.7313 s/op
WorkloadWarmup   5: 1 op, 5705845500.00 ns, 5.7058 s/op
WorkloadWarmup   6: 1 op, 5615862000.00 ns, 5.6159 s/op
WorkloadWarmup   7: 1 op, 5651438600.00 ns, 5.6514 s/op
WorkloadWarmup   8: 1 op, 5803867200.00 ns, 5.8039 s/op
WorkloadWarmup   9: 1 op, 5705350700.00 ns, 5.7054 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 5658035700.00 ns, 5.6580 s/op
WorkloadActual   2: 1 op, 5680447400.00 ns, 5.6804 s/op
WorkloadActual   3: 1 op, 5738099000.00 ns, 5.7381 s/op
WorkloadActual   4: 1 op, 5610520100.00 ns, 5.6105 s/op
WorkloadActual   5: 1 op, 5645364000.00 ns, 5.6454 s/op
WorkloadActual   6: 1 op, 5677634900.00 ns, 5.6776 s/op
WorkloadActual   7: 1 op, 5710402100.00 ns, 5.7104 s/op
WorkloadActual   8: 1 op, 5714826200.00 ns, 5.7148 s/op
WorkloadActual   9: 1 op, 5669147800.00 ns, 5.6691 s/op
WorkloadActual  10: 1 op, 5724653800.00 ns, 5.7247 s/op
WorkloadActual  11: 1 op, 5764713700.00 ns, 5.7647 s/op
WorkloadActual  12: 1 op, 5651693300.00 ns, 5.6517 s/op
WorkloadActual  13: 1 op, 5699697200.00 ns, 5.6997 s/op
WorkloadActual  14: 1 op, 5669143600.00 ns, 5.6691 s/op
WorkloadActual  15: 1 op, 5742198300.00 ns, 5.7422 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 5658035700.00 ns, 5.6580 s/op
WorkloadResult   2: 1 op, 5680447400.00 ns, 5.6804 s/op
WorkloadResult   3: 1 op, 5738099000.00 ns, 5.7381 s/op
WorkloadResult   4: 1 op, 5610520100.00 ns, 5.6105 s/op
WorkloadResult   5: 1 op, 5645364000.00 ns, 5.6454 s/op
WorkloadResult   6: 1 op, 5677634900.00 ns, 5.6776 s/op
WorkloadResult   7: 1 op, 5710402100.00 ns, 5.7104 s/op
WorkloadResult   8: 1 op, 5714826200.00 ns, 5.7148 s/op
WorkloadResult   9: 1 op, 5669147800.00 ns, 5.6691 s/op
WorkloadResult  10: 1 op, 5724653800.00 ns, 5.7247 s/op
WorkloadResult  11: 1 op, 5764713700.00 ns, 5.7647 s/op
WorkloadResult  12: 1 op, 5651693300.00 ns, 5.6517 s/op
WorkloadResult  13: 1 op, 5699697200.00 ns, 5.6997 s/op
WorkloadResult  14: 1 op, 5669143600.00 ns, 5.6691 s/op
WorkloadResult  15: 1 op, 5742198300.00 ns, 5.7422 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 5.6904 s, StdErr = 0.0109 s (0.19%); N = 15, StdDev = 0.0421 s
Min = 5.6105 s, Q1 = 5.6580 s, Median = 5.6804 s, Q3 = 5.7247 s, Max = 5.7647 s
IQR = 0.0666 s, LowerFence = 5.5581 s, UpperFence = 5.8246 s
ConfidenceInterval = [5.6454 s; 5.7355 s] (CI 99.9%), Margin = 0.0450 s (0.79% of Mean)
Skewness = 0, Kurtosis = 1.97, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0e55df1b-e8d5-4cc0-8567-0f9c727ef22b.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqSum" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 4 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0e55df1b-e8d5-4cc0-8567-0f9c727ef22b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-HOMBKZ(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 443000.00 ns, 443.0000 us/op
WorkloadJitting  1: 1 op, 6457849200.00 ns, 6.4578 s/op

WorkloadWarmup   1: 1 op, 6416809500.00 ns, 6.4168 s/op
WorkloadWarmup   2: 1 op, 6491438100.00 ns, 6.4914 s/op
WorkloadWarmup   3: 1 op, 6431577100.00 ns, 6.4316 s/op
WorkloadWarmup   4: 1 op, 6409328100.00 ns, 6.4093 s/op
WorkloadWarmup   5: 1 op, 6458687100.00 ns, 6.4587 s/op
WorkloadWarmup   6: 1 op, 6530767500.00 ns, 6.5308 s/op
WorkloadWarmup   7: 1 op, 6406142500.00 ns, 6.4061 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6421127200.00 ns, 6.4211 s/op
WorkloadActual   2: 1 op, 6462052400.00 ns, 6.4621 s/op
WorkloadActual   3: 1 op, 6399575600.00 ns, 6.3996 s/op
WorkloadActual   4: 1 op, 6453569500.00 ns, 6.4536 s/op
WorkloadActual   5: 1 op, 6451925700.00 ns, 6.4519 s/op
WorkloadActual   6: 1 op, 6502963400.00 ns, 6.5030 s/op
WorkloadActual   7: 1 op, 6407527500.00 ns, 6.4075 s/op
WorkloadActual   8: 1 op, 6418805100.00 ns, 6.4188 s/op
WorkloadActual   9: 1 op, 6479579500.00 ns, 6.4796 s/op
WorkloadActual  10: 1 op, 6443143400.00 ns, 6.4431 s/op
WorkloadActual  11: 1 op, 6407621500.00 ns, 6.4076 s/op
WorkloadActual  12: 1 op, 6399492500.00 ns, 6.3995 s/op
WorkloadActual  13: 1 op, 6413879400.00 ns, 6.4139 s/op
WorkloadActual  14: 1 op, 6407502400.00 ns, 6.4075 s/op
WorkloadActual  15: 1 op, 6411465600.00 ns, 6.4115 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6421127200.00 ns, 6.4211 s/op
WorkloadResult   2: 1 op, 6462052400.00 ns, 6.4621 s/op
WorkloadResult   3: 1 op, 6399575600.00 ns, 6.3996 s/op
WorkloadResult   4: 1 op, 6453569500.00 ns, 6.4536 s/op
WorkloadResult   5: 1 op, 6451925700.00 ns, 6.4519 s/op
WorkloadResult   6: 1 op, 6502963400.00 ns, 6.5030 s/op
WorkloadResult   7: 1 op, 6407527500.00 ns, 6.4075 s/op
WorkloadResult   8: 1 op, 6418805100.00 ns, 6.4188 s/op
WorkloadResult   9: 1 op, 6479579500.00 ns, 6.4796 s/op
WorkloadResult  10: 1 op, 6443143400.00 ns, 6.4431 s/op
WorkloadResult  11: 1 op, 6407621500.00 ns, 6.4076 s/op
WorkloadResult  12: 1 op, 6399492500.00 ns, 6.3995 s/op
WorkloadResult  13: 1 op, 6413879400.00 ns, 6.4139 s/op
WorkloadResult  14: 1 op, 6407502400.00 ns, 6.4075 s/op
WorkloadResult  15: 1 op, 6411465600.00 ns, 6.4115 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.4320 s, StdErr = 0.0082 s (0.13%); N = 15, StdDev = 0.0318 s
Min = 6.3995 s, Q1 = 6.4075 s, Median = 6.4188 s, Q3 = 6.4536 s, Max = 6.5030 s
IQR = 0.0460 s, LowerFence = 6.3385 s, UpperFence = 6.5226 s
ConfidenceInterval = [6.3980 s; 6.4660 s] (CI 99.9%), Margin = 0.0340 s (0.53% of Mean)
Skewness = 0.79, Kurtosis = 2.31, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAll: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0e55df1b-e8d5-4cc0-8567-0f9c727ef22b.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAll" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 5 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0e55df1b-e8d5-4cc0-8567-0f9c727ef22b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-BLZFZY(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 456900.00 ns, 456.9000 us/op
WorkloadJitting  1: 1 op, 6476874300.00 ns, 6.4769 s/op

WorkloadWarmup   1: 1 op, 6429479400.00 ns, 6.4295 s/op
WorkloadWarmup   2: 1 op, 6436100500.00 ns, 6.4361 s/op
WorkloadWarmup   3: 1 op, 6483487000.00 ns, 6.4835 s/op
WorkloadWarmup   4: 1 op, 6457508300.00 ns, 6.4575 s/op
WorkloadWarmup   5: 1 op, 6436230900.00 ns, 6.4362 s/op
WorkloadWarmup   6: 1 op, 6464473200.00 ns, 6.4645 s/op
WorkloadWarmup   7: 1 op, 6474631000.00 ns, 6.4746 s/op
WorkloadWarmup   8: 1 op, 6447980200.00 ns, 6.4480 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6445410000.00 ns, 6.4454 s/op
WorkloadActual   2: 1 op, 6484275500.00 ns, 6.4843 s/op
WorkloadActual   3: 1 op, 6518749200.00 ns, 6.5187 s/op
WorkloadActual   4: 1 op, 6489052900.00 ns, 6.4891 s/op
WorkloadActual   5: 1 op, 6531245900.00 ns, 6.5312 s/op
WorkloadActual   6: 1 op, 6471366000.00 ns, 6.4714 s/op
WorkloadActual   7: 1 op, 6450600900.00 ns, 6.4506 s/op
WorkloadActual   8: 1 op, 6438065500.00 ns, 6.4381 s/op
WorkloadActual   9: 1 op, 6442704600.00 ns, 6.4427 s/op
WorkloadActual  10: 1 op, 6472193300.00 ns, 6.4722 s/op
WorkloadActual  11: 1 op, 6441903700.00 ns, 6.4419 s/op
WorkloadActual  12: 1 op, 6485363300.00 ns, 6.4854 s/op
WorkloadActual  13: 1 op, 6434900100.00 ns, 6.4349 s/op
WorkloadActual  14: 1 op, 6429051600.00 ns, 6.4291 s/op
WorkloadActual  15: 1 op, 6549912000.00 ns, 6.5499 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6445410000.00 ns, 6.4454 s/op
WorkloadResult   2: 1 op, 6484275500.00 ns, 6.4843 s/op
WorkloadResult   3: 1 op, 6518749200.00 ns, 6.5187 s/op
WorkloadResult   4: 1 op, 6489052900.00 ns, 6.4891 s/op
WorkloadResult   5: 1 op, 6531245900.00 ns, 6.5312 s/op
WorkloadResult   6: 1 op, 6471366000.00 ns, 6.4714 s/op
WorkloadResult   7: 1 op, 6450600900.00 ns, 6.4506 s/op
WorkloadResult   8: 1 op, 6438065500.00 ns, 6.4381 s/op
WorkloadResult   9: 1 op, 6442704600.00 ns, 6.4427 s/op
WorkloadResult  10: 1 op, 6472193300.00 ns, 6.4722 s/op
WorkloadResult  11: 1 op, 6441903700.00 ns, 6.4419 s/op
WorkloadResult  12: 1 op, 6485363300.00 ns, 6.4854 s/op
WorkloadResult  13: 1 op, 6434900100.00 ns, 6.4349 s/op
WorkloadResult  14: 1 op, 6429051600.00 ns, 6.4291 s/op
WorkloadResult  15: 1 op, 6549912000.00 ns, 6.5499 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.4723 s, StdErr = 0.0097 s (0.15%); N = 15, StdDev = 0.0375 s
Min = 6.4291 s, Q1 = 6.4419 s, Median = 6.4714 s, Q3 = 6.4891 s, Max = 6.5499 s
IQR = 0.0471 s, LowerFence = 6.3712 s, UpperFence = 6.5598 s
ConfidenceInterval = [6.4322 s; 6.5124 s] (CI 99.9%), Margin = 0.0401 s (0.62% of Mean)
Skewness = 0.66, Kurtosis = 2.1, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAny: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0e55df1b-e8d5-4cc0-8567-0f9c727ef22b.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAny" --job "Jit=RyuJit, Platform=X64, Server=True" --benchmarkId 6 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0e55df1b-e8d5-4cc0-8567-0f9c727ef22b\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-UOCDVP(Jit=RyuJit, Platform=X64, Server=True)

OverheadJitting  1: 1 op, 435600.00 ns, 435.6000 us/op
WorkloadJitting  1: 1 op, 6704757600.00 ns, 6.7048 s/op

WorkloadWarmup   1: 1 op, 6686194400.00 ns, 6.6862 s/op
WorkloadWarmup   2: 1 op, 6705027500.00 ns, 6.7050 s/op
WorkloadWarmup   3: 1 op, 6685884700.00 ns, 6.6859 s/op
WorkloadWarmup   4: 1 op, 6697978300.00 ns, 6.6980 s/op
WorkloadWarmup   5: 1 op, 9156247900.00 ns, 9.1562 s/op
WorkloadWarmup   6: 1 op, 6730090600.00 ns, 6.7301 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6680243000.00 ns, 6.6802 s/op
WorkloadActual   2: 1 op, 6692885800.00 ns, 6.6929 s/op
WorkloadActual   3: 1 op, 6863913100.00 ns, 6.8639 s/op
WorkloadActual   4: 1 op, 6746904000.00 ns, 6.7469 s/op
WorkloadActual   5: 1 op, 6751752900.00 ns, 6.7518 s/op
WorkloadActual   6: 1 op, 6693723300.00 ns, 6.6937 s/op
WorkloadActual   7: 1 op, 6677067200.00 ns, 6.6771 s/op
WorkloadActual   8: 1 op, 6690945500.00 ns, 6.6909 s/op
WorkloadActual   9: 1 op, 6731282400.00 ns, 6.7313 s/op
WorkloadActual  10: 1 op, 6780849600.00 ns, 6.7808 s/op
WorkloadActual  11: 1 op, 6695105100.00 ns, 6.6951 s/op
WorkloadActual  12: 1 op, 6696750100.00 ns, 6.6968 s/op
WorkloadActual  13: 1 op, 6843492100.00 ns, 6.8435 s/op
WorkloadActual  14: 1 op, 6689292000.00 ns, 6.6893 s/op
WorkloadActual  15: 1 op, 6689225000.00 ns, 6.6892 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6680243000.00 ns, 6.6802 s/op
WorkloadResult   2: 1 op, 6692885800.00 ns, 6.6929 s/op
WorkloadResult   3: 1 op, 6746904000.00 ns, 6.7469 s/op
WorkloadResult   4: 1 op, 6751752900.00 ns, 6.7518 s/op
WorkloadResult   5: 1 op, 6693723300.00 ns, 6.6937 s/op
WorkloadResult   6: 1 op, 6677067200.00 ns, 6.6771 s/op
WorkloadResult   7: 1 op, 6690945500.00 ns, 6.6909 s/op
WorkloadResult   8: 1 op, 6731282400.00 ns, 6.7313 s/op
WorkloadResult   9: 1 op, 6780849600.00 ns, 6.7808 s/op
WorkloadResult  10: 1 op, 6695105100.00 ns, 6.6951 s/op
WorkloadResult  11: 1 op, 6696750100.00 ns, 6.6968 s/op
WorkloadResult  12: 1 op, 6843492100.00 ns, 6.8435 s/op
WorkloadResult  13: 1 op, 6689292000.00 ns, 6.6893 s/op
WorkloadResult  14: 1 op, 6689225000.00 ns, 6.6892 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.7185 s, StdErr = 0.0127 s (0.19%); N = 14, StdDev = 0.0477 s
Min = 6.6771 s, Q1 = 6.6893 s, Median = 6.6944 s, Q3 = 6.7469 s, Max = 6.8435 s
IQR = 0.0576 s, LowerFence = 6.6029 s, UpperFence = 6.8333 s
ConfidenceInterval = [6.6648 s; 6.7723 s] (CI 99.9%), Margin = 0.0538 s (0.80% of Mean)
Skewness = 1.32, Kurtosis = 3.73, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForSumCache: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForSumCache" --job "MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1" --benchmarkId 0 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-YFGDKU(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 425400.00 ns, 425.4000 us/op
WorkloadJitting  1: 1 op, 490222800.00 ns, 490.2228 ms/op

OverheadWarmup   1: 1 op, 4200.00 ns, 4.2000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual   2: 1 op, 200.00 ns, 200.0000 ns/op

WorkloadWarmup   1: 1 op, 489227200.00 ns, 489.2272 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 490041400.00 ns, 490.0414 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 490041100.00 ns, 490.0411 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 490.0411 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 490.0411 ms, Q1 = 490.0411 ms, Median = 490.0411 ms, Q3 = 490.0411 ms, Max = 490.0411 ms
IQR = 0.0000 ms, LowerFence = 490.0411 ms, UpperFence = 490.0411 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForSum" --job "MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1" --benchmarkId 1 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-EXFWKI(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 432700.00 ns, 432.7000 us/op
WorkloadJitting  1: 1 op, 720567900.00 ns, 720.5679 ms/op

OverheadWarmup   1: 1 op, 4100.00 ns, 4.1000 us/op
OverheadWarmup   2: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 1900.00 ns, 1.9000 us/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 400.00 ns, 400.0000 ns/op

OverheadActual   1: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual   2: 1 op, 400.00 ns, 400.0000 ns/op

WorkloadWarmup   1: 1 op, 722376200.00 ns, 722.3762 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 721011700.00 ns, 721.0117 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 721011250.00 ns, 721.0113 ms/op
GC:  0 0 0 0 0

// AfterAll

Mean = 721.0113 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 721.0113 ms, Q1 = 721.0113 ms, Median = 721.0113 ms, Q3 = 721.0113 ms, Max = 721.0113 ms
IQR = 0.0000 ms, LowerFence = 721.0113 ms, UpperFence = 721.0113 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.ForEachSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.ForEachSum" --job "MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1" --benchmarkId 2 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-YMWLXW(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 453100.00 ns, 453.1000 us/op
WorkloadJitting  1: 1 op, 1990153800.00 ns, 1.9902 s/op

OverheadWarmup   1: 1 op, 3600.00 ns, 3.6000 us/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 200.00 ns, 200.0000 ns/op
OverheadActual   2: 1 op, 2000.00 ns, 2.0000 us/op

WorkloadWarmup   1: 1 op, 1994796700.00 ns, 1.9948 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 1995668400.00 ns, 1.9957 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 1995667300.00 ns, 1.9957 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 1.9957 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 1.9957 s, Q1 = 1.9957 s, Median = 1.9957 s, Q3 = 1.9957 s, Max = 1.9957 s
IQR = 0.0000 s, LowerFence = 1.9957 s, UpperFence = 1.9957 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAggregateSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAggregateSum" --job "MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1" --benchmarkId 3 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-JPHWXA(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 457300.00 ns, 457.3000 us/op
WorkloadJitting  1: 1 op, 5702560200.00 ns, 5.7026 s/op

OverheadWarmup   1: 1 op, 3900.00 ns, 3.9000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   5: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   6: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   7: 1 op, 400.00 ns, 400.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 400.00 ns, 400.0000 ns/op

WorkloadWarmup   1: 1 op, 5703094800.00 ns, 5.7031 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 5719413300.00 ns, 5.7194 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 5719412950.00 ns, 5.7194 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 5.7194 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 5.7194 s, Q1 = 5.7194 s, Median = 5.7194 s, Q3 = 5.7194 s, Max = 5.7194 s
IQR = 0.0000 s, LowerFence = 5.7194 s, UpperFence = 5.7194 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqSum" --job "MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1" --benchmarkId 4 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-FUVJTC(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 440500.00 ns, 440.5000 us/op
WorkloadJitting  1: 1 op, 6428591500.00 ns, 6.4286 s/op

OverheadWarmup   1: 1 op, 3800.00 ns, 3.8000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   4: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 500.00 ns, 500.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 6419341400.00 ns, 6.4193 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6477859200.00 ns, 6.4779 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6477858900.00 ns, 6.4779 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.4779 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4779 s, Q1 = 6.4779 s, Median = 6.4779 s, Q3 = 6.4779 s, Max = 6.4779 s
IQR = 0.0000 s, LowerFence = 6.4779 s, UpperFence = 6.4779 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAll: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAll" --job "MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1" --benchmarkId 5 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-OMXIWE(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 433800.00 ns, 433.8000 us/op
WorkloadJitting  1: 1 op, 6454117900.00 ns, 6.4541 s/op

OverheadWarmup   1: 1 op, 3800.00 ns, 3.8000 us/op
OverheadWarmup   2: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   3: 1 op, 1800.00 ns, 1.8000 us/op
OverheadWarmup   4: 1 op, 200.00 ns, 200.0000 ns/op
OverheadWarmup   5: 1 op, 1700.00 ns, 1.7000 us/op
OverheadWarmup   6: 1 op, 500.00 ns, 500.0000 ns/op

OverheadActual   1: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual   2: 1 op, 400.00 ns, 400.0000 ns/op

WorkloadWarmup   1: 1 op, 6424995700.00 ns, 6.4250 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6413927100.00 ns, 6.4139 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6413926600.00 ns, 6.4139 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.4139 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4139 s, Q1 = 6.4139 s, Median = 6.4139 s, Q3 = 6.4139 s, Max = 6.4139 s
IQR = 0.0000 s, LowerFence = 6.4139 s, UpperFence = 6.4139 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// **************************
// Benchmark: ListAccessMethods.LinqAny: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe.dll" --benchmarkName "CSharpBenchmarks.ListAccessMethods.LinqAny" --job "MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1" --benchmarkId 6 in E:\Git\benchmarks\CSharpBenchmarks\CSharpBenchmarks\bin\Release\netcoreapp2.2\0d6d5be7-ea95-48f0-8c2f-f7b1a08b4ffe\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
// GC=Concurrent Server
// Job: Job-BLSGYV(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)

OverheadJitting  1: 1 op, 438800.00 ns, 438.8000 us/op
WorkloadJitting  1: 1 op, 6673606600.00 ns, 6.6736 s/op

OverheadWarmup   1: 1 op, 3900.00 ns, 3.9000 us/op
OverheadWarmup   2: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   3: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   4: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   5: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 300.00 ns, 300.0000 ns/op

OverheadActual   1: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   2: 1 op, 400.00 ns, 400.0000 ns/op

WorkloadWarmup   1: 1 op, 6676559800.00 ns, 6.6766 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 6683909700.00 ns, 6.6839 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 6683909350.00 ns, 6.6839 s/op
GC:  0 0 0 0 0

// AfterAll

Mean = 6.6839 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.6839 s, Q1 = 6.6839 s, Median = 6.6839 s, Q3 = 6.6839 s, Max = 6.6839 s
IQR = 0.0000 s, LowerFence = 6.6839 s, UpperFence = 6.6839 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report.csv
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report-github.md
  BenchmarkDotNet.Artifacts\results\CSharpBenchmarks.ListAccessMethods-report.html

// * Detailed results *
ListAccessMethods.ForSumCache: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 485.6468 ms, StdErr = 0.3263 ms (0.07%); N = 12, StdDev = 1.1302 ms
Min = 484.4380 ms, Q1 = 484.5892 ms, Median = 485.5137 ms, Q3 = 486.6983 ms, Max = 487.3127 ms
IQR = 2.1091 ms, LowerFence = 481.4256 ms, UpperFence = 489.8620 ms
ConfidenceInterval = [484.1991 ms; 487.0944 ms] (CI 99.9%), Margin = 1.4476 ms (0.30% of Mean)
Skewness = 0.35, Kurtosis = 1.37, MValue = 2
-------------------- Histogram --------------------
[484.006 ms ; 487.745 ms) | @@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.ForSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 720.8198 ms, StdErr = 0.2812 ms (0.04%); N = 14, StdDev = 1.0520 ms
Min = 719.2725 ms, Q1 = 720.0403 ms, Median = 720.7801 ms, Q3 = 721.5192 ms, Max = 723.0294 ms
IQR = 1.4789 ms, LowerFence = 717.8220 ms, UpperFence = 723.7376 ms
ConfidenceInterval = [719.6330 ms; 722.0065 ms] (CI 99.9%), Margin = 1.1868 ms (0.16% of Mean)
Skewness = 0.48, Kurtosis = 2.26, MValue = 2
-------------------- Histogram --------------------
[718.891 ms ; 723.411 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.ForEachSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 1.9966 s, StdErr = 0.0016 s (0.08%); N = 13, StdDev = 0.0058 s
Min = 1.9920 s, Q1 = 1.9926 s, Median = 1.9961 s, Q3 = 1.9979 s, Max = 2.0134 s
IQR = 0.0053 s, LowerFence = 1.9846 s, UpperFence = 2.0058 s
ConfidenceInterval = [1.9896 s; 2.0035 s] (CI 99.9%), Margin = 0.0069 s (0.35% of Mean)
Skewness = 1.76, Kurtosis = 5.58, MValue = 2
-------------------- Histogram --------------------
[1.990 s ; 2.016 s) | @@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.LinqAggregateSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 5.6904 s, StdErr = 0.0109 s (0.19%); N = 15, StdDev = 0.0421 s
Min = 5.6105 s, Q1 = 5.6580 s, Median = 5.6804 s, Q3 = 5.7247 s, Max = 5.7647 s
IQR = 0.0666 s, LowerFence = 5.5581 s, UpperFence = 5.8246 s
ConfidenceInterval = [5.6454 s; 5.7355 s] (CI 99.9%), Margin = 0.0450 s (0.79% of Mean)
Skewness = 0, Kurtosis = 1.97, MValue = 2
-------------------- Histogram --------------------
[5.609 s ; 5.780 s) | @@@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.LinqSum: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.4320 s, StdErr = 0.0082 s (0.13%); N = 15, StdDev = 0.0318 s
Min = 6.3995 s, Q1 = 6.4075 s, Median = 6.4188 s, Q3 = 6.4536 s, Max = 6.5030 s
IQR = 0.0460 s, LowerFence = 6.3385 s, UpperFence = 6.5226 s
ConfidenceInterval = [6.3980 s; 6.4660 s] (CI 99.9%), Margin = 0.0340 s (0.53% of Mean)
Skewness = 0.79, Kurtosis = 2.31, MValue = 2
-------------------- Histogram --------------------
[6.388 s ; 6.514 s) | @@@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.LinqAll: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.4723 s, StdErr = 0.0097 s (0.15%); N = 15, StdDev = 0.0375 s
Min = 6.4291 s, Q1 = 6.4419 s, Median = 6.4714 s, Q3 = 6.4891 s, Max = 6.5499 s
IQR = 0.0471 s, LowerFence = 6.3712 s, UpperFence = 6.5598 s
ConfidenceInterval = [6.4322 s; 6.5124 s] (CI 99.9%), Margin = 0.0401 s (0.62% of Mean)
Skewness = 0.66, Kurtosis = 2.1, MValue = 2
-------------------- Histogram --------------------
[6.416 s ; 6.563 s) | @@@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.LinqAny: Job-NWPCKC(Jit=RyuJit, Platform=X64, Server=True)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.7185 s, StdErr = 0.0127 s (0.19%); N = 14, StdDev = 0.0477 s
Min = 6.6771 s, Q1 = 6.6893 s, Median = 6.6944 s, Q3 = 6.7469 s, Max = 6.8435 s
IQR = 0.0576 s, LowerFence = 6.6029 s, UpperFence = 6.8333 s
ConfidenceInterval = [6.6648 s; 6.7723 s] (CI 99.9%), Margin = 0.0538 s (0.80% of Mean)
Skewness = 1.32, Kurtosis = 3.73, MValue = 2
-------------------- Histogram --------------------
[6.660 s ; 6.861 s) | @@@@@@@@@@@@@@
---------------------------------------------------

ListAccessMethods.ForSumCache: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 490.0411 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 490.0411 ms, Q1 = 490.0411 ms, Median = 490.0411 ms, Q3 = 490.0411 ms, Max = 490.0411 ms
IQR = 0.0000 ms, LowerFence = 490.0411 ms, UpperFence = 490.0411 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[490.041 ms ; 490.041 ms) | @
---------------------------------------------------

ListAccessMethods.ForSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 721.0113 ms, StdErr = 0.0000 ms (0.00%); N = 1, StdDev = 0.0000 ms
Min = 721.0113 ms, Q1 = 721.0113 ms, Median = 721.0113 ms, Q3 = 721.0113 ms, Max = 721.0113 ms
IQR = 0.0000 ms, LowerFence = 721.0113 ms, UpperFence = 721.0113 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[721.011 ms ; 721.011 ms) | @
---------------------------------------------------

ListAccessMethods.ForEachSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 1.9957 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 1.9957 s, Q1 = 1.9957 s, Median = 1.9957 s, Q3 = 1.9957 s, Max = 1.9957 s
IQR = 0.0000 s, LowerFence = 1.9957 s, UpperFence = 1.9957 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[1.996 s ; 1.996 s) | @
---------------------------------------------------

ListAccessMethods.LinqAggregateSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 5.7194 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 5.7194 s, Q1 = 5.7194 s, Median = 5.7194 s, Q3 = 5.7194 s, Max = 5.7194 s
IQR = 0.0000 s, LowerFence = 5.7194 s, UpperFence = 5.7194 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[5.719 s ; 5.719 s) | @
---------------------------------------------------

ListAccessMethods.LinqSum: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.4779 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4779 s, Q1 = 6.4779 s, Median = 6.4779 s, Q3 = 6.4779 s, Max = 6.4779 s
IQR = 0.0000 s, LowerFence = 6.4779 s, UpperFence = 6.4779 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.478 s ; 6.478 s) | @
---------------------------------------------------

ListAccessMethods.LinqAll: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.4139 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.4139 s, Q1 = 6.4139 s, Median = 6.4139 s, Q3 = 6.4139 s, Max = 6.4139 s
IQR = 0.0000 s, LowerFence = 6.4139 s, UpperFence = 6.4139 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.414 s ; 6.414 s) | @
---------------------------------------------------

ListAccessMethods.LinqAny: Job-EIYYKR(MinInvokeCount=1, Server=True, InvocationCount=1, IterationCount=1, LaunchCount=1, MaxIterationCount=2, MaxWarmupIterationCount=2, MinIterationCount=1, MinWarmupIterationCount=1, UnrollFactor=1, WarmupCount=1)
Runtime = .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT; GC = Concurrent Server
Mean = 6.6839 s, StdErr = 0.0000 s (0.00%); N = 1, StdDev = 0.0000 s
Min = 6.6839 s, Q1 = 6.6839 s, Median = 6.6839 s, Q3 = 6.6839 s, Max = 6.6839 s
IQR = 0.0000 s, LowerFence = 6.6839 s, UpperFence = 6.6839 s
ConfidenceInterval = [NaN s; NaN s] (CI 99.9%), Margin = NaN s (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[6.684 s ; 6.684 s) | @
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.706 (1803/April2018Update/Redstone4)
Intel Core i7-5820K CPU 3.30GHz (Broadwell), 1 CPU, 12 logical and 6 physical cores
.NET Core SDK=2.2.105
  [Host]     : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  Job-NWPCKC : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT
  Job-EIYYKR : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT

Jit=RyuJit  Platform=X64  Server=True  
InvocationCount=1  

|           Method | MinInvokeCount | IterationCount | LaunchCount | MaxIterationCount | MaxWarmupIterationCount | MinIterationCount | MinWarmupIterationCount | UnrollFactor | WarmupCount |       Mean |     Error |     StdDev | Ratio | RatioSD |
|----------------- |--------------- |--------------- |------------ |------------------ |------------------------ |------------------ |------------------------ |------------- |------------ |-----------:|----------:|-----------:|------:|--------:|
|      ForSumCache |        Default |        Default |     Default |           Default |                 Default |           Default |                 Default |           16 |     Default |   485.6 ms |  1.448 ms |  1.1302 ms |  1.00 |    0.00 |
|           ForSum |        Default |        Default |     Default |           Default |                 Default |           Default |                 Default |           16 |     Default |   720.8 ms |  1.187 ms |  1.0520 ms |  1.48 |    0.00 |
|       ForEachSum |        Default |        Default |     Default |           Default |                 Default |           Default |                 Default |           16 |     Default | 1,996.6 ms |  6.942 ms |  5.7965 ms |  4.11 |    0.01 |
| LinqAggregateSum |        Default |        Default |     Default |           Default |                 Default |           Default |                 Default |           16 |     Default | 5,690.4 ms | 45.047 ms | 42.1371 ms | 11.71 |    0.09 |
|          LinqSum |        Default |        Default |     Default |           Default |                 Default |           Default |                 Default |           16 |     Default | 6,432.0 ms | 33.967 ms | 31.7726 ms | 13.26 |    0.09 |
|          LinqAll |        Default |        Default |     Default |           Default |                 Default |           Default |                 Default |           16 |     Default | 6,472.3 ms | 40.089 ms | 37.4989 ms | 13.33 |    0.07 |
|          LinqAny |        Default |        Default |     Default |           Default |                 Default |           Default |                 Default |           16 |     Default | 6,718.5 ms | 53.761 ms | 47.6578 ms | 13.84 |    0.11 |
|                  |                |                |             |                   |                         |                   |                         |              |             |            |           |            |       |         |
|      ForSumCache |              1 |              1 |           1 |                 2 |                       2 |                 1 |                       1 |            1 |           1 |   490.0 ms |        NA |  0.0000 ms |  1.00 |    0.00 |
|           ForSum |              1 |              1 |           1 |                 2 |                       2 |                 1 |                       1 |            1 |           1 |   721.0 ms |        NA |  0.0000 ms |  1.47 |    0.00 |
|       ForEachSum |              1 |              1 |           1 |                 2 |                       2 |                 1 |                       1 |            1 |           1 | 1,995.7 ms |        NA |  0.0000 ms |  4.07 |    0.00 |
| LinqAggregateSum |              1 |              1 |           1 |                 2 |                       2 |                 1 |                       1 |            1 |           1 | 5,719.4 ms |        NA |  0.0000 ms | 11.67 |    0.00 |
|          LinqSum |              1 |              1 |           1 |                 2 |                       2 |                 1 |                       1 |            1 |           1 | 6,477.9 ms |        NA |  0.0000 ms | 13.22 |    0.00 |
|          LinqAll |              1 |              1 |           1 |                 2 |                       2 |                 1 |                       1 |            1 |           1 | 6,413.9 ms |        NA |  0.0000 ms | 13.09 |    0.00 |
|          LinqAny |              1 |              1 |           1 |                 2 |                       2 |                 1 |                       1 |            1 |           1 | 6,683.9 ms |        NA |  0.0000 ms | 13.64 |    0.00 |

// * Hints *
Outliers
  ListAccessMethods.ForSumCache: Jit=RyuJit, Platform=X64, Server=True -> 3 outliers were removed (493.53 ms..494.23 ms)
  ListAccessMethods.ForSum: Jit=RyuJit, Platform=X64, Server=True      -> 1 outlier  was  removed (724.40 ms)
  ListAccessMethods.ForEachSum: Jit=RyuJit, Platform=X64, Server=True  -> 2 outliers were removed (2.03 s, 2.08 s)
  ListAccessMethods.LinqAny: Jit=RyuJit, Platform=X64, Server=True     -> 1 outlier  was  removed (6.86 s)

// * Legends *
  Mean    : Arithmetic mean of all measurements
  Error   : Half of 99.9% confidence interval
  StdDev  : Standard deviation of all measurements
  Ratio   : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD : Standard deviation of the ratio distribution ([Current]/[Baseline])
  1 ms    : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:12:42 (762.73 sec), executed benchmarks: 14

Global total time: 00:13:00 (780.97 sec), executed benchmarks: 14
// * Artifacts cleanup *
